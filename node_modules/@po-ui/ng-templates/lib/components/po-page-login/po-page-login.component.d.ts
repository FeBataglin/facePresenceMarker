import { NgForm } from '@angular/forms';
import { ActivatedRoute, Router } from '@angular/router';
import { AfterViewChecked, ChangeDetectorRef, IterableDiffers, OnInit, ViewContainerRef } from '@angular/core';
import { PoComponentInjectorService } from '@po-ui/ng-components';
import { PoPageLoginBaseComponent } from './po-page-login-base.component';
import { PoPageLoginService } from './po-page-login.service';
/**
 * @docsExtends PoPageLoginBaseComponent
 *
 * @example
 *
 * <example name="po-page-login-basic" title="PO Page Login Basic">
 *  <file name="sample-po-page-login-basic/sample-po-page-login-basic.component.html"> </file>
 *  <file name="sample-po-page-login-basic/sample-po-page-login-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-page-login-labs" title="PO Page Login Labs">
 *  <file name="sample-po-page-login-labs/sample-po-page-login-labs.component.html"> </file>
 *  <file name="sample-po-page-login-labs/sample-po-page-login-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-page-login-human-resources" title="PO Page Login - Human Resources">
 *  <file name="sample-po-page-login-human-resources/sample-po-page-login-human-resources.component.html"> </file>
 *  <file name="sample-po-page-login-human-resources/sample-po-page-login-human-resources.component.ts"> </file>
 *  <file name="sample-po-page-login-human-resources/sample-po-page-login-human-resources.module.ts"> </file>
 * </example>
 *
 * <example name="po-page-login-automatic-service" title="PO Page Login - Automatic Service">
 *  <file name="sample-po-page-login-automatic-service/sample-po-page-login-automatic-service.component.html"> </file>
 *  <file name="sample-po-page-login-automatic-service/sample-po-page-login-automatic-service.component.ts"> </file>
 * </example>
 */
import * as ɵngcc0 from '@angular/core';
export declare class PoPageLoginComponent extends PoPageLoginBaseComponent implements AfterViewChecked, OnInit {
    changeDetector: ChangeDetectorRef;
    private activatedRoute;
    private poComponentInjector;
    private componentRef;
    private differ;
    private readonly customPasswordError;
    loginForm: NgForm;
    pageLogin: ViewContainerRef;
    constructor(changeDetector: ChangeDetectorRef, activatedRoute: ActivatedRoute, poComponentInjector: PoComponentInjectorService, differs: IterableDiffers, loginService: PoPageLoginService, router: Router);
    ngAfterViewChecked(): void;
    ngOnInit(): void;
    changeLoginModel(): void;
    changePasswordModel(): void;
    onSelectedLanguage(language: string): void;
    openUrl(recovery: any): void;
    private checkingForMetadataProperty;
    private checkingForRouteMetadata;
    private concatenate;
    private concatenateLiteral;
    private createModalPasswordRecoveryComponent;
    private generateLoginError;
    private generatePasswordError;
    private resetControl;
    private setControlErrors;
    private setUrlRedirect;
    private validateArrayChanges;
    protected concatenateLoginHintWithContactEmail(contactEmail: string): {
        [x: string]: string;
    };
    protected concatenateTitleWithProductName(productName: string): {
        [x: string]: string;
    };
    protected setLoginErrors(errors: Array<string>): void;
    protected setPasswordErrors(errors: Array<string>): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoPageLoginComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<PoPageLoginComponent, "po-page-login", never, {}, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tcGFnZS1sb2dpbi5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsicG8tcGFnZS1sb2dpbi5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdGb3JtIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgQWN0aXZhdGVkUm91dGUsIFJvdXRlciB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5pbXBvcnQgeyBBZnRlclZpZXdDaGVja2VkLCBDaGFuZ2VEZXRlY3RvclJlZiwgSXRlcmFibGVEaWZmZXJzLCBPbkluaXQsIFZpZXdDb250YWluZXJSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFBvQ29tcG9uZW50SW5qZWN0b3JTZXJ2aWNlIH0gZnJvbSAnQHBvLXVpL25nLWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgUG9QYWdlTG9naW5CYXNlQ29tcG9uZW50IH0gZnJvbSAnLi9wby1wYWdlLWxvZ2luLWJhc2UuY29tcG9uZW50JztcbmltcG9ydCB7IFBvUGFnZUxvZ2luU2VydmljZSB9IGZyb20gJy4vcG8tcGFnZS1sb2dpbi5zZXJ2aWNlJztcbi8qKlxuICogQGRvY3NFeHRlbmRzIFBvUGFnZUxvZ2luQmFzZUNvbXBvbmVudFxuICpcbiAqIEBleGFtcGxlXG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInBvLXBhZ2UtbG9naW4tYmFzaWNcIiB0aXRsZT1cIlBPIFBhZ2UgTG9naW4gQmFzaWNcIj5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLXBhZ2UtbG9naW4tYmFzaWMvc2FtcGxlLXBvLXBhZ2UtbG9naW4tYmFzaWMuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tcGFnZS1sb2dpbi1iYXNpYy9zYW1wbGUtcG8tcGFnZS1sb2dpbi1iYXNpYy5jb21wb25lbnQudHNcIj4gPC9maWxlPlxuICogPC9leGFtcGxlPlxuICpcbiAqIDxleGFtcGxlIG5hbWU9XCJwby1wYWdlLWxvZ2luLWxhYnNcIiB0aXRsZT1cIlBPIFBhZ2UgTG9naW4gTGFic1wiPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tcGFnZS1sb2dpbi1sYWJzL3NhbXBsZS1wby1wYWdlLWxvZ2luLWxhYnMuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tcGFnZS1sb2dpbi1sYWJzL3NhbXBsZS1wby1wYWdlLWxvZ2luLWxhYnMuY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cbiAqIDwvZXhhbXBsZT5cbiAqXG4gKiA8ZXhhbXBsZSBuYW1lPVwicG8tcGFnZS1sb2dpbi1odW1hbi1yZXNvdXJjZXNcIiB0aXRsZT1cIlBPIFBhZ2UgTG9naW4gLSBIdW1hbiBSZXNvdXJjZXNcIj5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLXBhZ2UtbG9naW4taHVtYW4tcmVzb3VyY2VzL3NhbXBsZS1wby1wYWdlLWxvZ2luLWh1bWFuLXJlc291cmNlcy5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1wYWdlLWxvZ2luLWh1bWFuLXJlc291cmNlcy9zYW1wbGUtcG8tcGFnZS1sb2dpbi1odW1hbi1yZXNvdXJjZXMuY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLXBhZ2UtbG9naW4taHVtYW4tcmVzb3VyY2VzL3NhbXBsZS1wby1wYWdlLWxvZ2luLWh1bWFuLXJlc291cmNlcy5tb2R1bGUudHNcIj4gPC9maWxlPlxuICogPC9leGFtcGxlPlxuICpcbiAqIDxleGFtcGxlIG5hbWU9XCJwby1wYWdlLWxvZ2luLWF1dG9tYXRpYy1zZXJ2aWNlXCIgdGl0bGU9XCJQTyBQYWdlIExvZ2luIC0gQXV0b21hdGljIFNlcnZpY2VcIj5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLXBhZ2UtbG9naW4tYXV0b21hdGljLXNlcnZpY2Uvc2FtcGxlLXBvLXBhZ2UtbG9naW4tYXV0b21hdGljLXNlcnZpY2UuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tcGFnZS1sb2dpbi1hdXRvbWF0aWMtc2VydmljZS9zYW1wbGUtcG8tcGFnZS1sb2dpbi1hdXRvbWF0aWMtc2VydmljZS5jb21wb25lbnQudHNcIj4gPC9maWxlPlxuICogPC9leGFtcGxlPlxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBQb1BhZ2VMb2dpbkNvbXBvbmVudCBleHRlbmRzIFBvUGFnZUxvZ2luQmFzZUNvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyVmlld0NoZWNrZWQsIE9uSW5pdCB7XG4gICAgY2hhbmdlRGV0ZWN0b3I6IENoYW5nZURldGVjdG9yUmVmO1xuICAgIHByaXZhdGUgYWN0aXZhdGVkUm91dGU7XG4gICAgcHJpdmF0ZSBwb0NvbXBvbmVudEluamVjdG9yO1xuICAgIHByaXZhdGUgY29tcG9uZW50UmVmO1xuICAgIHByaXZhdGUgZGlmZmVyO1xuICAgIHByaXZhdGUgcmVhZG9ubHkgY3VzdG9tUGFzc3dvcmRFcnJvcjtcbiAgICBsb2dpbkZvcm06IE5nRm9ybTtcbiAgICBwYWdlTG9naW46IFZpZXdDb250YWluZXJSZWY7XG4gICAgY29uc3RydWN0b3IoY2hhbmdlRGV0ZWN0b3I6IENoYW5nZURldGVjdG9yUmVmLCBhY3RpdmF0ZWRSb3V0ZTogQWN0aXZhdGVkUm91dGUsIHBvQ29tcG9uZW50SW5qZWN0b3I6IFBvQ29tcG9uZW50SW5qZWN0b3JTZXJ2aWNlLCBkaWZmZXJzOiBJdGVyYWJsZURpZmZlcnMsIGxvZ2luU2VydmljZTogUG9QYWdlTG9naW5TZXJ2aWNlLCByb3V0ZXI6IFJvdXRlcik7XG4gICAgbmdBZnRlclZpZXdDaGVja2VkKCk6IHZvaWQ7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBjaGFuZ2VMb2dpbk1vZGVsKCk6IHZvaWQ7XG4gICAgY2hhbmdlUGFzc3dvcmRNb2RlbCgpOiB2b2lkO1xuICAgIG9uU2VsZWN0ZWRMYW5ndWFnZShsYW5ndWFnZTogc3RyaW5nKTogdm9pZDtcbiAgICBvcGVuVXJsKHJlY292ZXJ5OiBhbnkpOiB2b2lkO1xuICAgIHByaXZhdGUgY2hlY2tpbmdGb3JNZXRhZGF0YVByb3BlcnR5O1xuICAgIHByaXZhdGUgY2hlY2tpbmdGb3JSb3V0ZU1ldGFkYXRhO1xuICAgIHByaXZhdGUgY29uY2F0ZW5hdGU7XG4gICAgcHJpdmF0ZSBjb25jYXRlbmF0ZUxpdGVyYWw7XG4gICAgcHJpdmF0ZSBjcmVhdGVNb2RhbFBhc3N3b3JkUmVjb3ZlcnlDb21wb25lbnQ7XG4gICAgcHJpdmF0ZSBnZW5lcmF0ZUxvZ2luRXJyb3I7XG4gICAgcHJpdmF0ZSBnZW5lcmF0ZVBhc3N3b3JkRXJyb3I7XG4gICAgcHJpdmF0ZSByZXNldENvbnRyb2w7XG4gICAgcHJpdmF0ZSBzZXRDb250cm9sRXJyb3JzO1xuICAgIHByaXZhdGUgc2V0VXJsUmVkaXJlY3Q7XG4gICAgcHJpdmF0ZSB2YWxpZGF0ZUFycmF5Q2hhbmdlcztcbiAgICBwcm90ZWN0ZWQgY29uY2F0ZW5hdGVMb2dpbkhpbnRXaXRoQ29udGFjdEVtYWlsKGNvbnRhY3RFbWFpbDogc3RyaW5nKToge1xuICAgICAgICBbeDogc3RyaW5nXTogc3RyaW5nO1xuICAgIH07XG4gICAgcHJvdGVjdGVkIGNvbmNhdGVuYXRlVGl0bGVXaXRoUHJvZHVjdE5hbWUocHJvZHVjdE5hbWU6IHN0cmluZyk6IHtcbiAgICAgICAgW3g6IHN0cmluZ106IHN0cmluZztcbiAgICB9O1xuICAgIHByb3RlY3RlZCBzZXRMb2dpbkVycm9ycyhlcnJvcnM6IEFycmF5PHN0cmluZz4pOiB2b2lkO1xuICAgIHByb3RlY3RlZCBzZXRQYXNzd29yZEVycm9ycyhlcnJvcnM6IEFycmF5PHN0cmluZz4pOiB2b2lkO1xufVxuIl19