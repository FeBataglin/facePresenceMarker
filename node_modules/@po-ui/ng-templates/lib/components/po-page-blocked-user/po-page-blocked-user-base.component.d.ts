import { PoPageBlockedUserReason } from './enums/po-page-blocked-user-reason.enum';
import { PoPageBlockedUserReasonParams } from './interfaces/po-page-blocked-user-reason-params.interface';
/**
 * @description
 *
 * O componente `po-page-blocked-user` é utilizado como template para tela de bloqueio de usuário.
 * É possível definir entre três tipos de telas para alertar o usuário sobre um eventual bloqueio de login.
 *
 * Cada modelo de bloqueio possui uma imagem e texto adequados à situação.
 * Os textos das telas são pré-definidos e imutáveis, porém,
 * é possível estipular parâmetros como dias, horas e tentativas de acesso esgotadas.
 *
 * Por fim, há propriedades para adição de telefone e/ou email para contato e também a definição para a url de retorno.
 *
 * Para que as imagens sejam exibidas corretamente, é necessário incluir o caminho delas ao projeto. Para isso, edite
 * o *assets* no arquivo **angular.json** da aplicação na seguinte ordem:
 * ```
 *   "assets": [
 *     "src/assets",
 *     "src/favicon.ico",
 *     {
 *       "glob": "**\/*",
 *       "input": "node_modules/@po-ui/style/images",
 *       "output": "assets/images"
 *     }
 *   ]
 * ```
 *
 * _______________
 *
 * #### Praticidade
 * O `po-page-blocked-user`, assim como suas propriedades, pode também ser transmitido diretamente pelas configuraçãos de rota e,
 * desta maneira, dispensa-se qualquer menção e/ou importação no restante da aplicação. O exemplo abaixo exemplifica
 * a forma dinâmica com a qual o template pode ser gerado se navegasse para uma rota denominada como `/access-denied`:
 *
 *
 * ```
 *   import { PoPageBlockedUserComponent, PoPageBlockedUserReason } from '@po-ui/ng-templates';
 *
 *   ...
 *   const routes: Routes = [
 *     {
 *       path: 'access-denied', component: PoPageBlockedUserComponent, data: {
 *         contactEmail: 'dev.po@po-ui.com',
 *         contactPhone: '0800 1234 000',
 *         reason: PoPageBlockedUserReason.ExpiredPassword,
 *         urlBack: '/home'
 *       }
 *     }
 *     ...
 *   ];
 *
 *   @NgModule({
 *     imports: [RouterModule.forRoot(routes)],
 *     exports: [RouterModule]
 *   })
 *   export class AppRoutingModule { }
 * ```
 *
 * > É essencial que siga a nomenclatura dos atributos exemplificados acima para sua efetiva funcionalidade.
 *
 */
import * as ɵngcc0 from '@angular/core';
export declare class PoPageBlockedUserBaseComponent {
    private _params;
    private _reason;
    private _urlBack;
    /**
     * @optional
     *
     * @description
     *
     * Valor para o email de contato que deve ser exibido. A ação está de acordo com o protocolo MAILTO e é possível definir
     * tanto rotas internas quanto externas.
     */
    contactEmail: string;
    /**
     * @optional
     *
     * @description
     *
     * Valor para o telefone de contato que deve ser exibido. A ação está de acordo com o protocolo TEL.
     *
     * > A propriedade não contem tratamento de máscara, fica a critério do desenvolvedor defini-la.
     */
    contactPhone: string;
    /**
     * @optional
     *
     * @description
     *
     * Designação de valores usados para a customização da mensagem de bloqueio.
     * Confira abaixo os valores pré-definidos.
     *
     * ```
     *  const customLiterals: PoPageBlockedUserReasonParams = {
     *    attempts: 5,
     *    days: 90,
     *    hours: 24
     *  };
     * ```
     *
     * > Salientamos a importância e atenção para configuração desses valores conforme definidos no projeto.
     *
     * > Veja os parâmetros customizáveis na interface `PoPageBlockedUserReasonParams`.
     *
     */
    set params(value: PoPageBlockedUserReasonParams);
    get params(): PoPageBlockedUserReasonParams;
    /** Caminho para a logomarca localizada na parte superior, caso não seja definida ou seja inválida assume a logo padrão do PO UI. */
    logo?: string;
    /**
     * @optional
     *
     * @description
     *
     * Definição de motivo de bloqueio de usuário. As informações modificam conforme o motivo selecionado.
     *
     * > Veja os valores válidos no *enum* `PoPageBlockedUserReason`.
     *
     * @default `PoPageBlockedUserReason.None`
     */
    set reason(value: PoPageBlockedUserReason);
    get reason(): PoPageBlockedUserReason;
    /**
     * @optional
     *
     * @description
     *
     * Caminho para a logomarca localizada no rodapé.
     */
    secondaryLogo?: string;
    /**
     * @optional
     *
     * @description
     *
     * URL para a ação de retorno da página.
     *
     * @default `/`
     */
    set urlBack(url: string);
    get urlBack(): string;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoPageBlockedUserBaseComponent, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<PoPageBlockedUserBaseComponent, never, never, { "params": "p-params"; "reason": "p-reason"; "urlBack": "p-url-back"; "contactEmail": "p-contact-email"; "contactPhone": "p-contact-phone"; "logo": "p-logo"; "secondaryLogo": "p-secondary-logo"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tcGFnZS1ibG9ja2VkLXVzZXItYmFzZS5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsicG8tcGFnZS1ibG9ja2VkLXVzZXItYmFzZS5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUG9QYWdlQmxvY2tlZFVzZXJSZWFzb24gfSBmcm9tICcuL2VudW1zL3BvLXBhZ2UtYmxvY2tlZC11c2VyLXJlYXNvbi5lbnVtJztcbmltcG9ydCB7IFBvUGFnZUJsb2NrZWRVc2VyUmVhc29uUGFyYW1zIH0gZnJvbSAnLi9pbnRlcmZhY2VzL3BvLXBhZ2UtYmxvY2tlZC11c2VyLXJlYXNvbi1wYXJhbXMuaW50ZXJmYWNlJztcbi8qKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogTyBjb21wb25lbnRlIGBwby1wYWdlLWJsb2NrZWQtdXNlcmAgw6kgdXRpbGl6YWRvIGNvbW8gdGVtcGxhdGUgcGFyYSB0ZWxhIGRlIGJsb3F1ZWlvIGRlIHVzdcOhcmlvLlxuICogw4kgcG9zc8OtdmVsIGRlZmluaXIgZW50cmUgdHLDqnMgdGlwb3MgZGUgdGVsYXMgcGFyYSBhbGVydGFyIG8gdXN1w6FyaW8gc29icmUgdW0gZXZlbnR1YWwgYmxvcXVlaW8gZGUgbG9naW4uXG4gKlxuICogQ2FkYSBtb2RlbG8gZGUgYmxvcXVlaW8gcG9zc3VpIHVtYSBpbWFnZW0gZSB0ZXh0byBhZGVxdWFkb3Mgw6Agc2l0dWHDp8Ojby5cbiAqIE9zIHRleHRvcyBkYXMgdGVsYXMgc8OjbyBwcsOpLWRlZmluaWRvcyBlIGltdXTDoXZlaXMsIHBvcsOpbSxcbiAqIMOpIHBvc3PDrXZlbCBlc3RpcHVsYXIgcGFyw6JtZXRyb3MgY29tbyBkaWFzLCBob3JhcyBlIHRlbnRhdGl2YXMgZGUgYWNlc3NvIGVzZ290YWRhcy5cbiAqXG4gKiBQb3IgZmltLCBow6EgcHJvcHJpZWRhZGVzIHBhcmEgYWRpw6fDo28gZGUgdGVsZWZvbmUgZS9vdSBlbWFpbCBwYXJhIGNvbnRhdG8gZSB0YW1iw6ltIGEgZGVmaW5pw6fDo28gcGFyYSBhIHVybCBkZSByZXRvcm5vLlxuICpcbiAqIFBhcmEgcXVlIGFzIGltYWdlbnMgc2VqYW0gZXhpYmlkYXMgY29ycmV0YW1lbnRlLCDDqSBuZWNlc3PDoXJpbyBpbmNsdWlyIG8gY2FtaW5obyBkZWxhcyBhbyBwcm9qZXRvLiBQYXJhIGlzc28sIGVkaXRlXG4gKiBvICphc3NldHMqIG5vIGFycXVpdm8gKiphbmd1bGFyLmpzb24qKiBkYSBhcGxpY2HDp8OjbyBuYSBzZWd1aW50ZSBvcmRlbTpcbiAqIGBgYFxuICogICBcImFzc2V0c1wiOiBbXG4gKiAgICAgXCJzcmMvYXNzZXRzXCIsXG4gKiAgICAgXCJzcmMvZmF2aWNvbi5pY29cIixcbiAqICAgICB7XG4gKiAgICAgICBcImdsb2JcIjogXCIqKlxcLypcIixcbiAqICAgICAgIFwiaW5wdXRcIjogXCJub2RlX21vZHVsZXMvQHBvLXVpL3N0eWxlL2ltYWdlc1wiLFxuICogICAgICAgXCJvdXRwdXRcIjogXCJhc3NldHMvaW1hZ2VzXCJcbiAqICAgICB9XG4gKiAgIF1cbiAqIGBgYFxuICpcbiAqIF9fX19fX19fX19fX19fX1xuICpcbiAqICMjIyMgUHJhdGljaWRhZGVcbiAqIE8gYHBvLXBhZ2UtYmxvY2tlZC11c2VyYCwgYXNzaW0gY29tbyBzdWFzIHByb3ByaWVkYWRlcywgcG9kZSB0YW1iw6ltIHNlciB0cmFuc21pdGlkbyBkaXJldGFtZW50ZSBwZWxhcyBjb25maWd1cmHDp8Ojb3MgZGUgcm90YSBlLFxuICogZGVzdGEgbWFuZWlyYSwgZGlzcGVuc2Etc2UgcXVhbHF1ZXIgbWVuw6fDo28gZS9vdSBpbXBvcnRhw6fDo28gbm8gcmVzdGFudGUgZGEgYXBsaWNhw6fDo28uIE8gZXhlbXBsbyBhYmFpeG8gZXhlbXBsaWZpY2FcbiAqIGEgZm9ybWEgZGluw6JtaWNhIGNvbSBhIHF1YWwgbyB0ZW1wbGF0ZSBwb2RlIHNlciBnZXJhZG8gc2UgbmF2ZWdhc3NlIHBhcmEgdW1hIHJvdGEgZGVub21pbmFkYSBjb21vIGAvYWNjZXNzLWRlbmllZGA6XG4gKlxuICpcbiAqIGBgYFxuICogICBpbXBvcnQgeyBQb1BhZ2VCbG9ja2VkVXNlckNvbXBvbmVudCwgUG9QYWdlQmxvY2tlZFVzZXJSZWFzb24gfSBmcm9tICdAcG8tdWkvbmctdGVtcGxhdGVzJztcbiAqXG4gKiAgIC4uLlxuICogICBjb25zdCByb3V0ZXM6IFJvdXRlcyA9IFtcbiAqICAgICB7XG4gKiAgICAgICBwYXRoOiAnYWNjZXNzLWRlbmllZCcsIGNvbXBvbmVudDogUG9QYWdlQmxvY2tlZFVzZXJDb21wb25lbnQsIGRhdGE6IHtcbiAqICAgICAgICAgY29udGFjdEVtYWlsOiAnZGV2LnBvQHBvLXVpLmNvbScsXG4gKiAgICAgICAgIGNvbnRhY3RQaG9uZTogJzA4MDAgMTIzNCAwMDAnLFxuICogICAgICAgICByZWFzb246IFBvUGFnZUJsb2NrZWRVc2VyUmVhc29uLkV4cGlyZWRQYXNzd29yZCxcbiAqICAgICAgICAgdXJsQmFjazogJy9ob21lJ1xuICogICAgICAgfVxuICogICAgIH1cbiAqICAgICAuLi5cbiAqICAgXTtcbiAqXG4gKiAgIEBOZ01vZHVsZSh7XG4gKiAgICAgaW1wb3J0czogW1JvdXRlck1vZHVsZS5mb3JSb290KHJvdXRlcyldLFxuICogICAgIGV4cG9ydHM6IFtSb3V0ZXJNb2R1bGVdXG4gKiAgIH0pXG4gKiAgIGV4cG9ydCBjbGFzcyBBcHBSb3V0aW5nTW9kdWxlIHsgfVxuICogYGBgXG4gKlxuICogPiDDiSBlc3NlbmNpYWwgcXVlIHNpZ2EgYSBub21lbmNsYXR1cmEgZG9zIGF0cmlidXRvcyBleGVtcGxpZmljYWRvcyBhY2ltYSBwYXJhIHN1YSBlZmV0aXZhIGZ1bmNpb25hbGlkYWRlLlxuICpcbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgUG9QYWdlQmxvY2tlZFVzZXJCYXNlQ29tcG9uZW50IHtcbiAgICBwcml2YXRlIF9wYXJhbXM7XG4gICAgcHJpdmF0ZSBfcmVhc29uO1xuICAgIHByaXZhdGUgX3VybEJhY2s7XG4gICAgLyoqXG4gICAgICogQG9wdGlvbmFsXG4gICAgICpcbiAgICAgKiBAZGVzY3JpcHRpb25cbiAgICAgKlxuICAgICAqIFZhbG9yIHBhcmEgbyBlbWFpbCBkZSBjb250YXRvIHF1ZSBkZXZlIHNlciBleGliaWRvLiBBIGHDp8OjbyBlc3TDoSBkZSBhY29yZG8gY29tIG8gcHJvdG9jb2xvIE1BSUxUTyBlIMOpIHBvc3PDrXZlbCBkZWZpbmlyXG4gICAgICogdGFudG8gcm90YXMgaW50ZXJuYXMgcXVhbnRvIGV4dGVybmFzLlxuICAgICAqL1xuICAgIGNvbnRhY3RFbWFpbDogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIEBvcHRpb25hbFxuICAgICAqXG4gICAgICogQGRlc2NyaXB0aW9uXG4gICAgICpcbiAgICAgKiBWYWxvciBwYXJhIG8gdGVsZWZvbmUgZGUgY29udGF0byBxdWUgZGV2ZSBzZXIgZXhpYmlkby4gQSBhw6fDo28gZXN0w6EgZGUgYWNvcmRvIGNvbSBvIHByb3RvY29sbyBURUwuXG4gICAgICpcbiAgICAgKiA+IEEgcHJvcHJpZWRhZGUgbsOjbyBjb250ZW0gdHJhdGFtZW50byBkZSBtw6FzY2FyYSwgZmljYSBhIGNyaXTDqXJpbyBkbyBkZXNlbnZvbHZlZG9yIGRlZmluaS1sYS5cbiAgICAgKi9cbiAgICBjb250YWN0UGhvbmU6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBAb3B0aW9uYWxcbiAgICAgKlxuICAgICAqIEBkZXNjcmlwdGlvblxuICAgICAqXG4gICAgICogRGVzaWduYcOnw6NvIGRlIHZhbG9yZXMgdXNhZG9zIHBhcmEgYSBjdXN0b21pemHDp8OjbyBkYSBtZW5zYWdlbSBkZSBibG9xdWVpby5cbiAgICAgKiBDb25maXJhIGFiYWl4byBvcyB2YWxvcmVzIHByw6ktZGVmaW5pZG9zLlxuICAgICAqXG4gICAgICogYGBgXG4gICAgICogIGNvbnN0IGN1c3RvbUxpdGVyYWxzOiBQb1BhZ2VCbG9ja2VkVXNlclJlYXNvblBhcmFtcyA9IHtcbiAgICAgKiAgICBhdHRlbXB0czogNSxcbiAgICAgKiAgICBkYXlzOiA5MCxcbiAgICAgKiAgICBob3VyczogMjRcbiAgICAgKiAgfTtcbiAgICAgKiBgYGBcbiAgICAgKlxuICAgICAqID4gU2FsaWVudGFtb3MgYSBpbXBvcnTDom5jaWEgZSBhdGVuw6fDo28gcGFyYSBjb25maWd1cmHDp8OjbyBkZXNzZXMgdmFsb3JlcyBjb25mb3JtZSBkZWZpbmlkb3Mgbm8gcHJvamV0by5cbiAgICAgKlxuICAgICAqID4gVmVqYSBvcyBwYXLDom1ldHJvcyBjdXN0b21pesOhdmVpcyBuYSBpbnRlcmZhY2UgYFBvUGFnZUJsb2NrZWRVc2VyUmVhc29uUGFyYW1zYC5cbiAgICAgKlxuICAgICAqL1xuICAgIHNldCBwYXJhbXModmFsdWU6IFBvUGFnZUJsb2NrZWRVc2VyUmVhc29uUGFyYW1zKTtcbiAgICBnZXQgcGFyYW1zKCk6IFBvUGFnZUJsb2NrZWRVc2VyUmVhc29uUGFyYW1zO1xuICAgIC8qKiBDYW1pbmhvIHBhcmEgYSBsb2dvbWFyY2EgbG9jYWxpemFkYSBuYSBwYXJ0ZSBzdXBlcmlvciwgY2FzbyBuw6NvIHNlamEgZGVmaW5pZGEgb3Ugc2VqYSBpbnbDoWxpZGEgYXNzdW1lIGEgbG9nbyBwYWRyw6NvIGRvIFBPIFVJLiAqL1xuICAgIGxvZ28/OiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogQG9wdGlvbmFsXG4gICAgICpcbiAgICAgKiBAZGVzY3JpcHRpb25cbiAgICAgKlxuICAgICAqIERlZmluacOnw6NvIGRlIG1vdGl2byBkZSBibG9xdWVpbyBkZSB1c3XDoXJpby4gQXMgaW5mb3JtYcOnw7VlcyBtb2RpZmljYW0gY29uZm9ybWUgbyBtb3Rpdm8gc2VsZWNpb25hZG8uXG4gICAgICpcbiAgICAgKiA+IFZlamEgb3MgdmFsb3JlcyB2w6FsaWRvcyBubyAqZW51bSogYFBvUGFnZUJsb2NrZWRVc2VyUmVhc29uYC5cbiAgICAgKlxuICAgICAqIEBkZWZhdWx0IGBQb1BhZ2VCbG9ja2VkVXNlclJlYXNvbi5Ob25lYFxuICAgICAqL1xuICAgIHNldCByZWFzb24odmFsdWU6IFBvUGFnZUJsb2NrZWRVc2VyUmVhc29uKTtcbiAgICBnZXQgcmVhc29uKCk6IFBvUGFnZUJsb2NrZWRVc2VyUmVhc29uO1xuICAgIC8qKlxuICAgICAqIEBvcHRpb25hbFxuICAgICAqXG4gICAgICogQGRlc2NyaXB0aW9uXG4gICAgICpcbiAgICAgKiBDYW1pbmhvIHBhcmEgYSBsb2dvbWFyY2EgbG9jYWxpemFkYSBubyByb2RhcMOpLlxuICAgICAqL1xuICAgIHNlY29uZGFyeUxvZ28/OiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogQG9wdGlvbmFsXG4gICAgICpcbiAgICAgKiBAZGVzY3JpcHRpb25cbiAgICAgKlxuICAgICAqIFVSTCBwYXJhIGEgYcOnw6NvIGRlIHJldG9ybm8gZGEgcMOhZ2luYS5cbiAgICAgKlxuICAgICAqIEBkZWZhdWx0IGAvYFxuICAgICAqL1xuICAgIHNldCB1cmxCYWNrKHVybDogc3RyaW5nKTtcbiAgICBnZXQgdXJsQmFjaygpOiBzdHJpbmc7XG59XG4iXX0=