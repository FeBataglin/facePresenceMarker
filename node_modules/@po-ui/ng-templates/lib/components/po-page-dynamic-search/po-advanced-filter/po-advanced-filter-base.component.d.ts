import { EventEmitter } from '@angular/core';
import { PoLanguageService, PoModalAction, PoModalComponent } from '@po-ui/ng-components';
import { PoAdvancedFilterLiterals } from './po-advanced-filter-literals.interface';
import { PoPageDynamicSearchFilters } from '../po-page-dynamic-search-filters.interface';
import * as ɵngcc0 from '@angular/core';
export declare const poAdvancedFiltersLiteralsDefault: {
    en: PoAdvancedFilterLiterals;
    es: PoAdvancedFilterLiterals;
    pt: PoAdvancedFilterLiterals;
    ru: PoAdvancedFilterLiterals;
};
/**
 * @docsPrivate
 *
 * @description
 *
 * Filtro de busca avançada criado a partir de um formulário dinâmico.
 * Componente de uso interno.
 */
export declare class PoAdvancedFilterBaseComponent {
    poModal: PoModalComponent;
    private _filters;
    private _literals;
    filter: {};
    language: string;
    primaryAction: PoModalAction;
    secondaryAction: PoModalAction;
    /**
     * Coleção de objetos que implementam a interface PoPageDynamicSearchFilters, para definição dos campos que serão criados
     * dinamicamente.
     */
    set filters(filters: Array<PoPageDynamicSearchFilters>);
    get filters(): Array<PoPageDynamicSearchFilters>;
    /**
     * Mantém na modal de busca avançada os valores preenchidos do último filtro realizado pelo usuário.
     */
    keepFilters: boolean;
    /** Objeto com as literais usadas no `po-advanced-filter`. */
    set literals(value: PoAdvancedFilterLiterals);
    get literals(): PoAdvancedFilterLiterals;
    /** Função que será disparada e receberá os valores do formulário ao ser clicado no botão buscar. */
    searchEvent: EventEmitter<any>;
    constructor(languageService: PoLanguageService);
    private getValuesFromForm;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoAdvancedFilterBaseComponent, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<PoAdvancedFilterBaseComponent, never, never, { "keepFilters": "p-keep-filters"; "filters": "p-filters"; "literals": "p-literals"; }, { "searchEvent": "p-search-event"; }, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tYWR2YW5jZWQtZmlsdGVyLWJhc2UuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInBvLWFkdmFuY2VkLWZpbHRlci1iYXNlLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFBvTGFuZ3VhZ2VTZXJ2aWNlLCBQb01vZGFsQWN0aW9uLCBQb01vZGFsQ29tcG9uZW50IH0gZnJvbSAnQHBvLXVpL25nLWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgUG9BZHZhbmNlZEZpbHRlckxpdGVyYWxzIH0gZnJvbSAnLi9wby1hZHZhbmNlZC1maWx0ZXItbGl0ZXJhbHMuaW50ZXJmYWNlJztcbmltcG9ydCB7IFBvUGFnZUR5bmFtaWNTZWFyY2hGaWx0ZXJzIH0gZnJvbSAnLi4vcG8tcGFnZS1keW5hbWljLXNlYXJjaC1maWx0ZXJzLmludGVyZmFjZSc7XG5leHBvcnQgZGVjbGFyZSBjb25zdCBwb0FkdmFuY2VkRmlsdGVyc0xpdGVyYWxzRGVmYXVsdDoge1xuICAgIGVuOiBQb0FkdmFuY2VkRmlsdGVyTGl0ZXJhbHM7XG4gICAgZXM6IFBvQWR2YW5jZWRGaWx0ZXJMaXRlcmFscztcbiAgICBwdDogUG9BZHZhbmNlZEZpbHRlckxpdGVyYWxzO1xuICAgIHJ1OiBQb0FkdmFuY2VkRmlsdGVyTGl0ZXJhbHM7XG59O1xuLyoqXG4gKiBAZG9jc1ByaXZhdGVcbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqXG4gKiBGaWx0cm8gZGUgYnVzY2EgYXZhbsOnYWRhIGNyaWFkbyBhIHBhcnRpciBkZSB1bSBmb3JtdWzDoXJpbyBkaW7Dom1pY28uXG4gKiBDb21wb25lbnRlIGRlIHVzbyBpbnRlcm5vLlxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBQb0FkdmFuY2VkRmlsdGVyQmFzZUNvbXBvbmVudCB7XG4gICAgcG9Nb2RhbDogUG9Nb2RhbENvbXBvbmVudDtcbiAgICBwcml2YXRlIF9maWx0ZXJzO1xuICAgIHByaXZhdGUgX2xpdGVyYWxzO1xuICAgIGZpbHRlcjoge307XG4gICAgbGFuZ3VhZ2U6IHN0cmluZztcbiAgICBwcmltYXJ5QWN0aW9uOiBQb01vZGFsQWN0aW9uO1xuICAgIHNlY29uZGFyeUFjdGlvbjogUG9Nb2RhbEFjdGlvbjtcbiAgICAvKipcbiAgICAgKiBDb2xlw6fDo28gZGUgb2JqZXRvcyBxdWUgaW1wbGVtZW50YW0gYSBpbnRlcmZhY2UgUG9QYWdlRHluYW1pY1NlYXJjaEZpbHRlcnMsIHBhcmEgZGVmaW5pw6fDo28gZG9zIGNhbXBvcyBxdWUgc2Vyw6NvIGNyaWFkb3NcbiAgICAgKiBkaW5hbWljYW1lbnRlLlxuICAgICAqL1xuICAgIHNldCBmaWx0ZXJzKGZpbHRlcnM6IEFycmF5PFBvUGFnZUR5bmFtaWNTZWFyY2hGaWx0ZXJzPik7XG4gICAgZ2V0IGZpbHRlcnMoKTogQXJyYXk8UG9QYWdlRHluYW1pY1NlYXJjaEZpbHRlcnM+O1xuICAgIC8qKlxuICAgICAqIE1hbnTDqW0gbmEgbW9kYWwgZGUgYnVzY2EgYXZhbsOnYWRhIG9zIHZhbG9yZXMgcHJlZW5jaGlkb3MgZG8gw7psdGltbyBmaWx0cm8gcmVhbGl6YWRvIHBlbG8gdXN1w6FyaW8uXG4gICAgICovXG4gICAga2VlcEZpbHRlcnM6IGJvb2xlYW47XG4gICAgLyoqIE9iamV0byBjb20gYXMgbGl0ZXJhaXMgdXNhZGFzIG5vIGBwby1hZHZhbmNlZC1maWx0ZXJgLiAqL1xuICAgIHNldCBsaXRlcmFscyh2YWx1ZTogUG9BZHZhbmNlZEZpbHRlckxpdGVyYWxzKTtcbiAgICBnZXQgbGl0ZXJhbHMoKTogUG9BZHZhbmNlZEZpbHRlckxpdGVyYWxzO1xuICAgIC8qKiBGdW7Dp8OjbyBxdWUgc2Vyw6EgZGlzcGFyYWRhIGUgcmVjZWJlcsOhIG9zIHZhbG9yZXMgZG8gZm9ybXVsw6FyaW8gYW8gc2VyIGNsaWNhZG8gbm8gYm90w6NvIGJ1c2Nhci4gKi9cbiAgICBzZWFyY2hFdmVudDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgY29uc3RydWN0b3IobGFuZ3VhZ2VTZXJ2aWNlOiBQb0xhbmd1YWdlU2VydmljZSk7XG4gICAgcHJpdmF0ZSBnZXRWYWx1ZXNGcm9tRm9ybTtcbn1cbiJdfQ==