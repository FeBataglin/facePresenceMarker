import { __decorate } from "tslib";
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { NgModule } from '@angular/core';
import { PoButtonModule, PoContainerModule, PoDialogModule, PoDividerModule, PoDynamicModule, PoFieldModule, PoInfoModule, PoPageModule, PoStepperModule, PoWidgetModule } from '@po-ui/ng-components';
import { PoPageJobSchedulerComponent } from './po-page-job-scheduler.component';
import { PoPageJobSchedulerExecutionComponent } from './po-page-job-scheduler-execution/po-page-job-scheduler-execution.component';
import { PoPageJobSchedulerLookupService } from './po-page-job-scheduler-lookup.service';
import { PoPageJobSchedulerParametersComponent } from './po-page-job-scheduler-parameters/po-page-job-scheduler-parameters.component';
import { PoPageJobSchedulerService } from './po-page-job-scheduler.service';
import { PoPageJobSchedulerSummaryComponent } from './po-page-job-scheduler-summary/po-page-job-scheduler-summary.component';
let PoPageJobSchedulerModule = class PoPageJobSchedulerModule {
};
PoPageJobSchedulerModule = __decorate([
    NgModule({
        declarations: [
            PoPageJobSchedulerComponent,
            PoPageJobSchedulerExecutionComponent,
            PoPageJobSchedulerParametersComponent,
            PoPageJobSchedulerSummaryComponent
        ],
        exports: [PoPageJobSchedulerComponent],
        imports: [
            CommonModule,
            FormsModule,
            PoButtonModule,
            PoContainerModule,
            PoDialogModule,
            PoDividerModule,
            PoDynamicModule,
            PoFieldModule,
            PoInfoModule,
            PoPageModule,
            PoStepperModule,
            PoWidgetModule
        ],
        providers: [PoPageJobSchedulerService, PoPageJobSchedulerLookupService]
    })
], PoPageJobSchedulerModule);
export { PoPageJobSchedulerModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tcGFnZS1qb2Itc2NoZWR1bGVyLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwby11aS9uZy10ZW1wbGF0ZXMvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9wby1wYWdlLWpvYi1zY2hlZHVsZXIvcG8tcGFnZS1qb2Itc2NoZWR1bGVyLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM3QyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXpDLE9BQU8sRUFDTCxjQUFjLEVBQ2QsaUJBQWlCLEVBQ2pCLGNBQWMsRUFDZCxlQUFlLEVBQ2YsZUFBZSxFQUNmLGFBQWEsRUFDYixZQUFZLEVBQ1osWUFBWSxFQUNaLGVBQWUsRUFDZixjQUFjLEVBQ2YsTUFBTSxzQkFBc0IsQ0FBQztBQUU5QixPQUFPLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUNoRixPQUFPLEVBQUUsb0NBQW9DLEVBQUUsTUFBTSw2RUFBNkUsQ0FBQztBQUNuSSxPQUFPLEVBQUUsK0JBQStCLEVBQUUsTUFBTSx3Q0FBd0MsQ0FBQztBQUN6RixPQUFPLEVBQUUscUNBQXFDLEVBQUUsTUFBTSwrRUFBK0UsQ0FBQztBQUN0SSxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUM1RSxPQUFPLEVBQUUsa0NBQWtDLEVBQUUsTUFBTSx5RUFBeUUsQ0FBQztBQTBCN0gsSUFBYSx3QkFBd0IsR0FBckMsTUFBYSx3QkFBd0I7Q0FBRyxDQUFBO0FBQTNCLHdCQUF3QjtJQXhCcEMsUUFBUSxDQUFDO1FBQ1IsWUFBWSxFQUFFO1lBQ1osMkJBQTJCO1lBQzNCLG9DQUFvQztZQUNwQyxxQ0FBcUM7WUFDckMsa0NBQWtDO1NBQ25DO1FBQ0QsT0FBTyxFQUFFLENBQUMsMkJBQTJCLENBQUM7UUFDdEMsT0FBTyxFQUFFO1lBQ1AsWUFBWTtZQUNaLFdBQVc7WUFDWCxjQUFjO1lBQ2QsaUJBQWlCO1lBQ2pCLGNBQWM7WUFDZCxlQUFlO1lBQ2YsZUFBZTtZQUNmLGFBQWE7WUFDYixZQUFZO1lBQ1osWUFBWTtZQUNaLGVBQWU7WUFDZixjQUFjO1NBQ2Y7UUFDRCxTQUFTLEVBQUUsQ0FBQyx5QkFBeUIsRUFBRSwrQkFBK0IsQ0FBQztLQUN4RSxDQUFDO0dBQ1csd0JBQXdCLENBQUc7U0FBM0Isd0JBQXdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IEZvcm1zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHtcbiAgUG9CdXR0b25Nb2R1bGUsXG4gIFBvQ29udGFpbmVyTW9kdWxlLFxuICBQb0RpYWxvZ01vZHVsZSxcbiAgUG9EaXZpZGVyTW9kdWxlLFxuICBQb0R5bmFtaWNNb2R1bGUsXG4gIFBvRmllbGRNb2R1bGUsXG4gIFBvSW5mb01vZHVsZSxcbiAgUG9QYWdlTW9kdWxlLFxuICBQb1N0ZXBwZXJNb2R1bGUsXG4gIFBvV2lkZ2V0TW9kdWxlXG59IGZyb20gJ0Bwby11aS9uZy1jb21wb25lbnRzJztcblxuaW1wb3J0IHsgUG9QYWdlSm9iU2NoZWR1bGVyQ29tcG9uZW50IH0gZnJvbSAnLi9wby1wYWdlLWpvYi1zY2hlZHVsZXIuY29tcG9uZW50JztcbmltcG9ydCB7IFBvUGFnZUpvYlNjaGVkdWxlckV4ZWN1dGlvbkNvbXBvbmVudCB9IGZyb20gJy4vcG8tcGFnZS1qb2Itc2NoZWR1bGVyLWV4ZWN1dGlvbi9wby1wYWdlLWpvYi1zY2hlZHVsZXItZXhlY3V0aW9uLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBQb1BhZ2VKb2JTY2hlZHVsZXJMb29rdXBTZXJ2aWNlIH0gZnJvbSAnLi9wby1wYWdlLWpvYi1zY2hlZHVsZXItbG9va3VwLnNlcnZpY2UnO1xuaW1wb3J0IHsgUG9QYWdlSm9iU2NoZWR1bGVyUGFyYW1ldGVyc0NvbXBvbmVudCB9IGZyb20gJy4vcG8tcGFnZS1qb2Itc2NoZWR1bGVyLXBhcmFtZXRlcnMvcG8tcGFnZS1qb2Itc2NoZWR1bGVyLXBhcmFtZXRlcnMuY29tcG9uZW50JztcbmltcG9ydCB7IFBvUGFnZUpvYlNjaGVkdWxlclNlcnZpY2UgfSBmcm9tICcuL3BvLXBhZ2Utam9iLXNjaGVkdWxlci5zZXJ2aWNlJztcbmltcG9ydCB7IFBvUGFnZUpvYlNjaGVkdWxlclN1bW1hcnlDb21wb25lbnQgfSBmcm9tICcuL3BvLXBhZ2Utam9iLXNjaGVkdWxlci1zdW1tYXJ5L3BvLXBhZ2Utam9iLXNjaGVkdWxlci1zdW1tYXJ5LmNvbXBvbmVudCc7XG5cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogW1xuICAgIFBvUGFnZUpvYlNjaGVkdWxlckNvbXBvbmVudCxcbiAgICBQb1BhZ2VKb2JTY2hlZHVsZXJFeGVjdXRpb25Db21wb25lbnQsXG4gICAgUG9QYWdlSm9iU2NoZWR1bGVyUGFyYW1ldGVyc0NvbXBvbmVudCxcbiAgICBQb1BhZ2VKb2JTY2hlZHVsZXJTdW1tYXJ5Q29tcG9uZW50XG4gIF0sXG4gIGV4cG9ydHM6IFtQb1BhZ2VKb2JTY2hlZHVsZXJDb21wb25lbnRdLFxuICBpbXBvcnRzOiBbXG4gICAgQ29tbW9uTW9kdWxlLFxuICAgIEZvcm1zTW9kdWxlLFxuICAgIFBvQnV0dG9uTW9kdWxlLFxuICAgIFBvQ29udGFpbmVyTW9kdWxlLFxuICAgIFBvRGlhbG9nTW9kdWxlLFxuICAgIFBvRGl2aWRlck1vZHVsZSxcbiAgICBQb0R5bmFtaWNNb2R1bGUsXG4gICAgUG9GaWVsZE1vZHVsZSxcbiAgICBQb0luZm9Nb2R1bGUsXG4gICAgUG9QYWdlTW9kdWxlLFxuICAgIFBvU3RlcHBlck1vZHVsZSxcbiAgICBQb1dpZGdldE1vZHVsZVxuICBdLFxuICBwcm92aWRlcnM6IFtQb1BhZ2VKb2JTY2hlZHVsZXJTZXJ2aWNlLCBQb1BhZ2VKb2JTY2hlZHVsZXJMb29rdXBTZXJ2aWNlXVxufSlcbmV4cG9ydCBjbGFzcyBQb1BhZ2VKb2JTY2hlZHVsZXJNb2R1bGUge31cbiJdfQ==