import { __decorate, __metadata } from "tslib";
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { isExternalLink, isTypeof } from '../../../utils/util';
let PoPageLoginPopoverComponent = 
/**
 * @docsPrivate
 *
 * @description
 *
 * Componente para definição da mensagem de aviso de bloqueio do `po-page-login`.
 */
class PoPageLoginPopoverComponent {
    constructor() {
        /** se 'p-recovery' for do tipo Function ou PoPageLoginRecovery, emite para o método 'openUrl' do componente 'po-page-login' */
        this.forgotPassword = new EventEmitter();
    }
    /** exibe o link de 'esqueci minha senha' e verifica se o valor é um link interno ou externo */
    set recovery(value) {
        this._recovery = value;
        if (isTypeof(value, 'string')) {
            this.recoveryType = isExternalLink(value) ? 'externalLink' : 'internalLink';
        }
    }
    get recovery() {
        return this._recovery;
    }
    onForgotPasswordClick(recovery) {
        this.forgotPassword.emit(recovery);
    }
};
__decorate([
    Input('p-literals'),
    __metadata("design:type", Object)
], PoPageLoginPopoverComponent.prototype, "literals", void 0);
__decorate([
    Input('p-recovery'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [Object])
], PoPageLoginPopoverComponent.prototype, "recovery", null);
__decorate([
    Input('p-remaining-attempts'),
    __metadata("design:type", Number)
], PoPageLoginPopoverComponent.prototype, "remainingAttempts", void 0);
__decorate([
    Output('p-forgot-password'),
    __metadata("design:type", Object)
], PoPageLoginPopoverComponent.prototype, "forgotPassword", void 0);
PoPageLoginPopoverComponent = __decorate([
    Component({
        selector: 'po-page-login-popover',
        template: "<div class=\"po-page-login-popover-container\">\n  <div class=\"po-page-login-popover\">\n    <div class=\"po-page-login-popover-arrow\"></div>\n    <div class=\"po-page-login-popover-content\">\n      <p class=\"po-font-text-bold po-page-login-popover-title\">\n        {{ literals?.titlePopover }}\n      </p>\n      <p class=\"po-font-text\">\n        {{ literals?.forgotYourPassword }}\n      </p>\n      <p class=\"po-font-text\">\n        {{ literals?.ifYouTryHarder }}\n        <span class=\"po-font-text-bold po-page-login-popover-attempts\">\n          {{ literals?.attempts | poI18n: remainingAttempts }} </span\n        >{{ literals?.yourUserWillBeBlocked }}\n      </p>\n      <br />\n      <p class=\"po-font-text\">\n        {{ literals?.createANewPasswordNow }}\n      </p>\n      <div *ngIf=\"recovery\" class=\"po-font-text-bold po-mt-1 po-page-login-popover-link-container\">\n        <a *ngIf=\"recoveryType === 'internalLink'\" class=\"po-page-login-popover-link\" [routerLink]=\"recovery\">\n          {{ literals?.iForgotMyPassword }}\n        </a>\n        <a *ngIf=\"recoveryType === 'externalLink'\" class=\"po-page-login-popover-link\" [href]=\"recovery\" target=\"_blank\">\n          {{ literals?.iForgotMyPassword }}\n        </a>\n        <a *ngIf=\"!recoveryType\" class=\"po-page-login-popover-link\" (click)=\"onForgotPasswordClick(recovery)\">\n          {{ literals?.iForgotMyPassword }}\n        </a>\n      </div>\n    </div>\n  </div>\n</div>\n"
    })
    /**
     * @docsPrivate
     *
     * @description
     *
     * Componente para definição da mensagem de aviso de bloqueio do `po-page-login`.
     */
], PoPageLoginPopoverComponent);
export { PoPageLoginPopoverComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tcGFnZS1sb2dpbi1wb3BvdmVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwby11aS9uZy10ZW1wbGF0ZXMvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9wby1wYWdlLWxvZ2luL3BvLXBhZ2UtbG9naW4tcG9wb3Zlci9wby1wYWdlLWxvZ2luLXBvcG92ZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXZFLE9BQU8sRUFBRSxjQUFjLEVBQUUsUUFBUSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFpQi9ELElBQWEsMkJBQTJCO0FBUHhDOzs7Ozs7R0FNRztBQUNILE1BQWEsMkJBQTJCO0lBQXhDO1FBdUJFLCtIQUErSDtRQUNsRyxtQkFBYyxHQUFHLElBQUksWUFBWSxFQUFPLENBQUM7SUFLeEUsQ0FBQztJQXRCQywrRkFBK0Y7SUFDMUUsSUFBSSxRQUFRLENBQUMsS0FBOEM7UUFDOUUsSUFBSSxDQUFDLFNBQVMsR0FBRyxLQUFLLENBQUM7UUFFdkIsSUFBSSxRQUFRLENBQUMsS0FBSyxFQUFFLFFBQVEsQ0FBQyxFQUFFO1lBQzdCLElBQUksQ0FBQyxZQUFZLEdBQUcsY0FBYyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLGNBQWMsQ0FBQztTQUM3RTtJQUNILENBQUM7SUFFRCxJQUFJLFFBQVE7UUFDVixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUM7SUFDeEIsQ0FBQztJQVFELHFCQUFxQixDQUFDLFFBQVE7UUFDNUIsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDckMsQ0FBQztDQUNGLENBQUE7QUF4QnNCO0lBQXBCLEtBQUssQ0FBQyxZQUFZLENBQUM7OzZEQUErQjtBQUc5QjtJQUFwQixLQUFLLENBQUMsWUFBWSxDQUFDOzs7MkRBTW5CO0FBTzhCO0lBQTlCLEtBQUssQ0FBQyxzQkFBc0IsQ0FBQzs7c0VBQTJCO0FBRzVCO0lBQTVCLE1BQU0sQ0FBQyxtQkFBbUIsQ0FBQzs7bUVBQTBDO0FBeEIzRCwyQkFBMkI7SUFadkMsU0FBUyxDQUFDO1FBQ1QsUUFBUSxFQUFFLHVCQUF1QjtRQUNqQyxzOUNBQXFEO0tBQ3RELENBQUM7SUFFRjs7Ozs7O09BTUc7R0FDVSwyQkFBMkIsQ0E2QnZDO1NBN0JZLDJCQUEyQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IGlzRXh0ZXJuYWxMaW5rLCBpc1R5cGVvZiB9IGZyb20gJy4uLy4uLy4uL3V0aWxzL3V0aWwnO1xuXG5pbXBvcnQgeyBQb1BhZ2VMb2dpbkxpdGVyYWxzIH0gZnJvbSAnLi4vaW50ZXJmYWNlcy9wby1wYWdlLWxvZ2luLWxpdGVyYWxzLmludGVyZmFjZSc7XG5pbXBvcnQgeyBQb1BhZ2VMb2dpblJlY292ZXJ5IH0gZnJvbSAnLi4vaW50ZXJmYWNlcy9wby1wYWdlLWxvZ2luLXJlY292ZXJ5LmludGVyZmFjZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3BvLXBhZ2UtbG9naW4tcG9wb3ZlcicsXG4gIHRlbXBsYXRlVXJsOiAnLi9wby1wYWdlLWxvZ2luLXBvcG92ZXIuY29tcG9uZW50Lmh0bWwnXG59KVxuXG4vKipcbiAqIEBkb2NzUHJpdmF0ZVxuICpcbiAqIEBkZXNjcmlwdGlvblxuICpcbiAqIENvbXBvbmVudGUgcGFyYSBkZWZpbmnDp8OjbyBkYSBtZW5zYWdlbSBkZSBhdmlzbyBkZSBibG9xdWVpbyBkbyBgcG8tcGFnZS1sb2dpbmAuXG4gKi9cbmV4cG9ydCBjbGFzcyBQb1BhZ2VMb2dpblBvcG92ZXJDb21wb25lbnQge1xuICByZWNvdmVyeVR5cGU6IHN0cmluZztcblxuICBwcml2YXRlIF9yZWNvdmVyeTogc3RyaW5nIHwgRnVuY3Rpb24gfCBQb1BhZ2VMb2dpblJlY292ZXJ5O1xuXG4gIEBJbnB1dCgncC1saXRlcmFscycpIGxpdGVyYWxzOiBQb1BhZ2VMb2dpbkxpdGVyYWxzO1xuXG4gIC8qKiBleGliZSBvIGxpbmsgZGUgJ2VzcXVlY2kgbWluaGEgc2VuaGEnIGUgdmVyaWZpY2Egc2UgbyB2YWxvciDDqSB1bSBsaW5rIGludGVybm8gb3UgZXh0ZXJubyAqL1xuICBASW5wdXQoJ3AtcmVjb3ZlcnknKSBzZXQgcmVjb3ZlcnkodmFsdWU6IHN0cmluZyB8IEZ1bmN0aW9uIHwgUG9QYWdlTG9naW5SZWNvdmVyeSkge1xuICAgIHRoaXMuX3JlY292ZXJ5ID0gdmFsdWU7XG5cbiAgICBpZiAoaXNUeXBlb2YodmFsdWUsICdzdHJpbmcnKSkge1xuICAgICAgdGhpcy5yZWNvdmVyeVR5cGUgPSBpc0V4dGVybmFsTGluayh2YWx1ZSkgPyAnZXh0ZXJuYWxMaW5rJyA6ICdpbnRlcm5hbExpbmsnO1xuICAgIH1cbiAgfVxuXG4gIGdldCByZWNvdmVyeSgpIHtcbiAgICByZXR1cm4gdGhpcy5fcmVjb3Zlcnk7XG4gIH1cblxuICAvKiogZGVmaW5lIHNlIGEgbWVuc2FnZW0gZGV2ZXLDoSBzZXIgZXhpYmlkYSBjYXNvIHNlamEgbWFpb3IgcXVlIDAoemVybykgKi9cbiAgQElucHV0KCdwLXJlbWFpbmluZy1hdHRlbXB0cycpIHJlbWFpbmluZ0F0dGVtcHRzOiBudW1iZXI7XG5cbiAgLyoqIHNlICdwLXJlY292ZXJ5JyBmb3IgZG8gdGlwbyBGdW5jdGlvbiBvdSBQb1BhZ2VMb2dpblJlY292ZXJ5LCBlbWl0ZSBwYXJhIG8gbcOpdG9kbyAnb3BlblVybCcgZG8gY29tcG9uZW50ZSAncG8tcGFnZS1sb2dpbicgKi9cbiAgQE91dHB1dCgncC1mb3Jnb3QtcGFzc3dvcmQnKSBmb3Jnb3RQYXNzd29yZCA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuXG4gIG9uRm9yZ290UGFzc3dvcmRDbGljayhyZWNvdmVyeSkge1xuICAgIHRoaXMuZm9yZ290UGFzc3dvcmQuZW1pdChyZWNvdmVyeSk7XG4gIH1cbn1cbiJdfQ==