import { __decorate, __metadata } from "tslib";
import { ChangeDetectorRef, Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';
import { browserLanguage, poLocaleDefault } from '../../../utils/util';
import { poPageBlockedUserLiterals } from './../literals/i18n/po-page-blocked-user-literals';
import { PoPageBlockedUserReason } from '../enums/po-page-blocked-user-reason.enum';
let PoPageBlockedUserReasonComponent = class PoPageBlockedUserReasonComponent {
    constructor(changeDetector) {
        this.changeDetector = changeDetector;
    }
    ngOnChanges(changes) {
        if (changes.reason || changes.params) {
            this.getLiterals();
        }
    }
    ngOnInit() {
        this.getLiterals();
    }
    getImageByReasonType() {
        let reasonImage;
        switch (this.reason) {
            case 'none': {
                reasonImage = 'big-lock';
                break;
            }
            case 'exceededAttempts': {
                reasonImage = 'blocked-user';
                break;
            }
            case 'expiredPassword': {
                reasonImage = 'expired';
                break;
            }
        }
        return `./assets/images/${reasonImage}.svg`;
    }
    getParams() {
        this.literalParams =
            this.reason === 'expiredPassword'
                ? [this.params.days, this.params.days]
                : [this.params.attempts, this.params.hours];
    }
    getLiterals() {
        this.getParams();
        this.literals = Object.assign(Object.assign({}, poPageBlockedUserLiterals[this.reason][poLocaleDefault]), poPageBlockedUserLiterals[this.reason][browserLanguage()]);
        this.changeDetector.detectChanges();
    }
};
PoPageBlockedUserReasonComponent.ctorParameters = () => [
    { type: ChangeDetectorRef }
];
__decorate([
    Input('p-params'),
    __metadata("design:type", Object)
], PoPageBlockedUserReasonComponent.prototype, "params", void 0);
__decorate([
    Input('p-reason'),
    __metadata("design:type", String)
], PoPageBlockedUserReasonComponent.prototype, "reason", void 0);
PoPageBlockedUserReasonComponent = __decorate([
    Component({
        selector: 'po-page-blocked-user-reason',
        template: "<div class=\"po-page-blocked-user-reason-content\">\n  <img class=\"po-page-blocked-user-image po-mb-3\" [src]=\"getImageByReasonType()\" />\n  <div class=\"po-page-blocked-user-header po-mb-md-3 po-row\">\n    <div class=\"po-md-12\">{{ literals?.title }}</div>\n  </div>\n  <div class=\"po-page-blocked-user-text po-font-text po-row\">\n    <div class=\"po-mb-sm-2 po-mb-md-3 po-md-12 po-page-blocked-user-text-bold\">\n      {{ literals?.firstPhrase | poI18n: literalParams }}\n    </div>\n    <div class=\"po-mb-sm-2 po-mb-md-3 po-md-12\">{{ literals?.secondPhrase }}</div>\n    <div class=\"po-mb-sm-2 po-mb-md-3 po-md-12\" *ngIf=\"literals?.thirdPhrase\">{{ literals?.thirdPhrase }}</div>\n  </div>\n</div>\n"
    }),
    __metadata("design:paramtypes", [ChangeDetectorRef])
], PoPageBlockedUserReasonComponent);
export { PoPageBlockedUserReasonComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tcGFnZS1ibG9ja2VkLXVzZXItcmVhc29uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwby11aS9uZy10ZW1wbGF0ZXMvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9wby1wYWdlLWJsb2NrZWQtdXNlci9wby1wYWdlLWJsb2NrZWQtdXNlci1yZWFzb24vcG8tcGFnZS1ibG9ja2VkLXVzZXItcmVhc29uLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLGlCQUFpQixFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxhQUFhLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFdEcsT0FBTyxFQUFFLGVBQWUsRUFBRSxlQUFlLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUV2RSxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSxrREFBa0QsQ0FBQztBQUM3RixPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSwyQ0FBMkMsQ0FBQztBQU9wRixJQUFhLGdDQUFnQyxHQUE3QyxNQUFhLGdDQUFnQztJQVEzQyxZQUFvQixjQUFpQztRQUFqQyxtQkFBYyxHQUFkLGNBQWMsQ0FBbUI7SUFBRyxDQUFDO0lBRXpELFdBQVcsQ0FBQyxPQUFzQjtRQUNoQyxJQUFJLE9BQU8sQ0FBQyxNQUFNLElBQUksT0FBTyxDQUFDLE1BQU0sRUFBRTtZQUNwQyxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7U0FDcEI7SUFDSCxDQUFDO0lBRUQsUUFBUTtRQUNOLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUNyQixDQUFDO0lBRUQsb0JBQW9CO1FBQ2xCLElBQUksV0FBVyxDQUFDO1FBRWhCLFFBQVEsSUFBSSxDQUFDLE1BQU0sRUFBRTtZQUNuQixLQUFLLE1BQU0sQ0FBQyxDQUFDO2dCQUNYLFdBQVcsR0FBRyxVQUFVLENBQUM7Z0JBQ3pCLE1BQU07YUFDUDtZQUNELEtBQUssa0JBQWtCLENBQUMsQ0FBQztnQkFDdkIsV0FBVyxHQUFHLGNBQWMsQ0FBQztnQkFDN0IsTUFBTTthQUNQO1lBQ0QsS0FBSyxpQkFBaUIsQ0FBQyxDQUFDO2dCQUN0QixXQUFXLEdBQUcsU0FBUyxDQUFDO2dCQUN4QixNQUFNO2FBQ1A7U0FDRjtRQUNELE9BQU8sbUJBQW1CLFdBQVcsTUFBTSxDQUFDO0lBQzlDLENBQUM7SUFFRCxTQUFTO1FBQ1AsSUFBSSxDQUFDLGFBQWE7WUFDaEIsSUFBSSxDQUFDLE1BQU0sS0FBSyxpQkFBaUI7Z0JBQy9CLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDO2dCQUN0QyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ2xELENBQUM7SUFFTyxXQUFXO1FBQ2pCLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQztRQUVqQixJQUFJLENBQUMsUUFBUSxtQ0FDUix5QkFBeUIsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsZUFBZSxDQUFDLEdBQ3ZELHlCQUF5QixDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxlQUFlLEVBQUUsQ0FBQyxDQUM3RCxDQUFDO1FBRUYsSUFBSSxDQUFDLGNBQWMsQ0FBQyxhQUFhLEVBQUUsQ0FBQztJQUN0QyxDQUFDO0NBQ0YsQ0FBQTs7WUFqRHFDLGlCQUFpQjs7QUFKbEM7SUFBbEIsS0FBSyxDQUFDLFVBQVUsQ0FBQzs7Z0VBQXVDO0FBRXRDO0lBQWxCLEtBQUssQ0FBQyxVQUFVLENBQUM7O2dFQUFpQztBQU54QyxnQ0FBZ0M7SUFKNUMsU0FBUyxDQUFDO1FBQ1QsUUFBUSxFQUFFLDZCQUE2QjtRQUN2QyxzdEJBQTJEO0tBQzVELENBQUM7cUNBU29DLGlCQUFpQjtHQVIxQyxnQ0FBZ0MsQ0F5RDVDO1NBekRZLGdDQUFnQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdG9yUmVmLCBDb21wb25lbnQsIElucHV0LCBPbkNoYW5nZXMsIE9uSW5pdCwgU2ltcGxlQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBicm93c2VyTGFuZ3VhZ2UsIHBvTG9jYWxlRGVmYXVsdCB9IGZyb20gJy4uLy4uLy4uL3V0aWxzL3V0aWwnO1xuXG5pbXBvcnQgeyBwb1BhZ2VCbG9ja2VkVXNlckxpdGVyYWxzIH0gZnJvbSAnLi8uLi9saXRlcmFscy9pMThuL3BvLXBhZ2UtYmxvY2tlZC11c2VyLWxpdGVyYWxzJztcbmltcG9ydCB7IFBvUGFnZUJsb2NrZWRVc2VyUmVhc29uIH0gZnJvbSAnLi4vZW51bXMvcG8tcGFnZS1ibG9ja2VkLXVzZXItcmVhc29uLmVudW0nO1xuaW1wb3J0IHsgUG9QYWdlQmxvY2tlZFVzZXJSZWFzb25QYXJhbXMgfSBmcm9tICcuLi9pbnRlcmZhY2VzL3BvLXBhZ2UtYmxvY2tlZC11c2VyLXJlYXNvbi1wYXJhbXMuaW50ZXJmYWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAncG8tcGFnZS1ibG9ja2VkLXVzZXItcmVhc29uJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3BvLXBhZ2UtYmxvY2tlZC11c2VyLXJlYXNvbi5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgUG9QYWdlQmxvY2tlZFVzZXJSZWFzb25Db21wb25lbnQgaW1wbGVtZW50cyBPbkNoYW5nZXMsIE9uSW5pdCB7XG4gIGxpdGVyYWxQYXJhbXM7XG4gIGxpdGVyYWxzOiB7IHRpdGxlOiBzdHJpbmc7IGZpcnN0UGhyYXNlOiBzdHJpbmc7IHNlY29uZFBocmFzZTogc3RyaW5nOyB0aGlyZFBocmFzZTogc3RyaW5nIH07XG5cbiAgQElucHV0KCdwLXBhcmFtcycpIHBhcmFtczogUG9QYWdlQmxvY2tlZFVzZXJSZWFzb25QYXJhbXM7XG5cbiAgQElucHV0KCdwLXJlYXNvbicpIHJlYXNvbjogUG9QYWdlQmxvY2tlZFVzZXJSZWFzb247XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBjaGFuZ2VEZXRlY3RvcjogQ2hhbmdlRGV0ZWN0b3JSZWYpIHt9XG5cbiAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcykge1xuICAgIGlmIChjaGFuZ2VzLnJlYXNvbiB8fCBjaGFuZ2VzLnBhcmFtcykge1xuICAgICAgdGhpcy5nZXRMaXRlcmFscygpO1xuICAgIH1cbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuZ2V0TGl0ZXJhbHMoKTtcbiAgfVxuXG4gIGdldEltYWdlQnlSZWFzb25UeXBlKCkge1xuICAgIGxldCByZWFzb25JbWFnZTtcblxuICAgIHN3aXRjaCAodGhpcy5yZWFzb24pIHtcbiAgICAgIGNhc2UgJ25vbmUnOiB7XG4gICAgICAgIHJlYXNvbkltYWdlID0gJ2JpZy1sb2NrJztcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICBjYXNlICdleGNlZWRlZEF0dGVtcHRzJzoge1xuICAgICAgICByZWFzb25JbWFnZSA9ICdibG9ja2VkLXVzZXInO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIGNhc2UgJ2V4cGlyZWRQYXNzd29yZCc6IHtcbiAgICAgICAgcmVhc29uSW1hZ2UgPSAnZXhwaXJlZCc7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gYC4vYXNzZXRzL2ltYWdlcy8ke3JlYXNvbkltYWdlfS5zdmdgO1xuICB9XG5cbiAgZ2V0UGFyYW1zKCkge1xuICAgIHRoaXMubGl0ZXJhbFBhcmFtcyA9XG4gICAgICB0aGlzLnJlYXNvbiA9PT0gJ2V4cGlyZWRQYXNzd29yZCdcbiAgICAgICAgPyBbdGhpcy5wYXJhbXMuZGF5cywgdGhpcy5wYXJhbXMuZGF5c11cbiAgICAgICAgOiBbdGhpcy5wYXJhbXMuYXR0ZW1wdHMsIHRoaXMucGFyYW1zLmhvdXJzXTtcbiAgfVxuXG4gIHByaXZhdGUgZ2V0TGl0ZXJhbHMoKSB7XG4gICAgdGhpcy5nZXRQYXJhbXMoKTtcblxuICAgIHRoaXMubGl0ZXJhbHMgPSB7XG4gICAgICAuLi5wb1BhZ2VCbG9ja2VkVXNlckxpdGVyYWxzW3RoaXMucmVhc29uXVtwb0xvY2FsZURlZmF1bHRdLFxuICAgICAgLi4ucG9QYWdlQmxvY2tlZFVzZXJMaXRlcmFsc1t0aGlzLnJlYXNvbl1bYnJvd3Nlckxhbmd1YWdlKCldXG4gICAgfTtcblxuICAgIHRoaXMuY2hhbmdlRGV0ZWN0b3IuZGV0ZWN0Q2hhbmdlcygpO1xuICB9XG59XG4iXX0=