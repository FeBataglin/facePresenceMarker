import { __decorate, __metadata } from "tslib";
import { HttpClient, HttpHeaders } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { of } from 'rxjs';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common/http";
var PoPageDynamicDetailActionsService = /** @class */ (function () {
    function PoPageDynamicDetailActionsService(http) {
        this.http = http;
        this.headers = new HttpHeaders({
            'X-PO-SCREEN-LOCK': 'true'
        });
    }
    PoPageDynamicDetailActionsService.prototype.beforeBack = function (action) {
        return this.executeAction({ action: action });
    };
    PoPageDynamicDetailActionsService.prototype.beforeEdit = function (action, id, body) {
        var resource = body !== null && body !== void 0 ? body : {};
        return this.executeAction({ action: action, resource: resource, id: id });
    };
    PoPageDynamicDetailActionsService.prototype.beforeRemove = function (action, id, body) {
        var resource = body !== null && body !== void 0 ? body : {};
        return this.executeAction({ action: action, resource: resource, id: id });
    };
    PoPageDynamicDetailActionsService.prototype.executeAction = function (_a) {
        var action = _a.action, _b = _a.resource, resource = _b === void 0 ? {} : _b, id = _a.id;
        if (!action) {
            return of({});
        }
        if (typeof action === 'string') {
            var url = id ? action + "/" + id : action;
            return this.http.post(url, resource, { headers: this.headers });
        }
        return of(action(id, resource));
    };
    PoPageDynamicDetailActionsService.ctorParameters = function () { return [
        { type: HttpClient }
    ]; };
    PoPageDynamicDetailActionsService.ɵprov = i0.ɵɵdefineInjectable({ factory: function PoPageDynamicDetailActionsService_Factory() { return new PoPageDynamicDetailActionsService(i0.ɵɵinject(i1.HttpClient)); }, token: PoPageDynamicDetailActionsService, providedIn: "root" });
    PoPageDynamicDetailActionsService = __decorate([
        Injectable({
            providedIn: 'root'
        }),
        __metadata("design:paramtypes", [HttpClient])
    ], PoPageDynamicDetailActionsService);
    return PoPageDynamicDetailActionsService;
}());
export { PoPageDynamicDetailActionsService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tcGFnZS1keW5hbWljLWRldGFpbC1hY3Rpb25zLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AcG8tdWkvbmctdGVtcGxhdGVzLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tcGFnZS1keW5hbWljLWRldGFpbC9wby1wYWdlLWR5bmFtaWMtZGV0YWlsLWFjdGlvbnMuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxXQUFXLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUMvRCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBYyxFQUFFLEVBQUUsTUFBTSxNQUFNLENBQUM7OztBQWdCdEM7SUFLRSwyQ0FBb0IsSUFBZ0I7UUFBaEIsU0FBSSxHQUFKLElBQUksQ0FBWTtRQUozQixZQUFPLEdBQWdCLElBQUksV0FBVyxDQUFDO1lBQzlDLGtCQUFrQixFQUFFLE1BQU07U0FDM0IsQ0FBQyxDQUFDO0lBRW9DLENBQUM7SUFFeEMsc0RBQVUsR0FBVixVQUFXLE1BQWlEO1FBQzFELE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQyxFQUFFLE1BQU0sUUFBQSxFQUFFLENBQUMsQ0FBQztJQUN4QyxDQUFDO0lBRUQsc0RBQVUsR0FBVixVQUNFLE1BQWdELEVBQ2hELEVBQU8sRUFDUCxJQUFTO1FBRVQsSUFBTSxRQUFRLEdBQUcsSUFBSSxhQUFKLElBQUksY0FBSixJQUFJLEdBQUksRUFBRSxDQUFDO1FBRTVCLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQyxFQUFFLE1BQU0sUUFBQSxFQUFFLFFBQVEsVUFBQSxFQUFFLEVBQUUsSUFBQSxFQUFFLENBQUMsQ0FBQztJQUN0RCxDQUFDO0lBRUQsd0RBQVksR0FBWixVQUNFLE1BQWtELEVBQ2xELEVBQU8sRUFDUCxJQUFTO1FBRVQsSUFBTSxRQUFRLEdBQUcsSUFBSSxhQUFKLElBQUksY0FBSixJQUFJLEdBQUksRUFBRSxDQUFDO1FBRTVCLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQyxFQUFFLE1BQU0sUUFBQSxFQUFFLFFBQVEsVUFBQSxFQUFFLEVBQUUsSUFBQSxFQUFFLENBQUMsQ0FBQztJQUN0RCxDQUFDO0lBRU8seURBQWEsR0FBckIsVUFBeUIsRUFBcUQ7WUFBbkQsa0JBQU0sRUFBRSxnQkFBYSxFQUFiLGtDQUFhLEVBQUUsVUFBRTtRQUNsRCxJQUFJLENBQUMsTUFBTSxFQUFFO1lBQ1gsT0FBTyxFQUFFLENBQUksRUFBRSxDQUFDLENBQUM7U0FDbEI7UUFFRCxJQUFJLE9BQU8sTUFBTSxLQUFLLFFBQVEsRUFBRTtZQUM5QixJQUFNLEdBQUcsR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFJLE1BQU0sU0FBSSxFQUFJLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQztZQUU1QyxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFJLEdBQUcsRUFBRSxRQUFRLEVBQUUsRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUM7U0FDcEU7UUFFRCxPQUFPLEVBQUUsQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLFFBQVEsQ0FBQyxDQUFDLENBQUM7SUFDbEMsQ0FBQzs7Z0JBdEN5QixVQUFVOzs7SUFMekIsaUNBQWlDO1FBSDdDLFVBQVUsQ0FBQztZQUNWLFVBQVUsRUFBRSxNQUFNO1NBQ25CLENBQUM7eUNBTTBCLFVBQVU7T0FMekIsaUNBQWlDLENBNEM3Qzs0Q0E5REQ7Q0E4REMsQUE1Q0QsSUE0Q0M7U0E1Q1ksaUNBQWlDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSHR0cENsaWVudCwgSHR0cEhlYWRlcnMgfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XG5pbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlLCBvZiB9IGZyb20gJ3J4anMnO1xuXG5pbXBvcnQgeyBQb1BhZ2VEeW5hbWljRGV0YWlsQWN0aW9ucyB9IGZyb20gJy4vaW50ZXJmYWNlcy9wby1wYWdlLWR5bmFtaWMtZGV0YWlsLWFjdGlvbnMuaW50ZXJmYWNlJztcbmltcG9ydCB7IFBvUGFnZUR5bmFtaWNEZXRhaWxCZWZvcmVCYWNrIH0gZnJvbSAnLi9pbnRlcmZhY2VzL3BvLXBhZ2UtZHluYW1pYy1kZXRhaWwtYmVmb3JlLWJhY2suaW50ZXJmYWNlJztcbmltcG9ydCB7IFBvUGFnZUR5bmFtaWNEZXRhaWxCZWZvcmVSZW1vdmUgfSBmcm9tICcuL2ludGVyZmFjZXMvcG8tcGFnZS1keW5hbWljLWRldGFpbC1iZWZvcmUtcmVtb3ZlLmludGVyZmFjZSc7XG5pbXBvcnQgeyBQb1BhZ2VEeW5hbWljRGV0YWlsQmVmb3JlRWRpdCB9IGZyb20gJy4vaW50ZXJmYWNlcy9wby1wYWdlLWR5bmFtaWMtZGV0YWlsLWJlZm9yZS1lZGl0LmludGVyZmFjZSc7XG5cbmludGVyZmFjZSBFeGVjdXRlQWN0aW9uUGFyYW1ldGVyIHtcbiAgYWN0aW9uOiBzdHJpbmcgfCBGdW5jdGlvbjtcbiAgcmVzb3VyY2U/OiBhbnk7XG4gIGlkPzogc3RyaW5nIHwgbnVtYmVyO1xufVxuXG5ASW5qZWN0YWJsZSh7XG4gIHByb3ZpZGVkSW46ICdyb290J1xufSlcbmV4cG9ydCBjbGFzcyBQb1BhZ2VEeW5hbWljRGV0YWlsQWN0aW9uc1NlcnZpY2Uge1xuICByZWFkb25seSBoZWFkZXJzOiBIdHRwSGVhZGVycyA9IG5ldyBIdHRwSGVhZGVycyh7XG4gICAgJ1gtUE8tU0NSRUVOLUxPQ0snOiAndHJ1ZSdcbiAgfSk7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBodHRwOiBIdHRwQ2xpZW50KSB7fVxuXG4gIGJlZm9yZUJhY2soYWN0aW9uPzogUG9QYWdlRHluYW1pY0RldGFpbEFjdGlvbnNbJ2JlZm9yZUJhY2snXSk6IE9ic2VydmFibGU8UG9QYWdlRHluYW1pY0RldGFpbEJlZm9yZUJhY2s+IHtcbiAgICByZXR1cm4gdGhpcy5leGVjdXRlQWN0aW9uKHsgYWN0aW9uIH0pO1xuICB9XG5cbiAgYmVmb3JlRWRpdChcbiAgICBhY3Rpb246IFBvUGFnZUR5bmFtaWNEZXRhaWxBY3Rpb25zWydiZWZvcmVFZGl0J10sXG4gICAgaWQ6IGFueSxcbiAgICBib2R5OiBhbnlcbiAgKTogT2JzZXJ2YWJsZTxQb1BhZ2VEeW5hbWljRGV0YWlsQmVmb3JlRWRpdD4ge1xuICAgIGNvbnN0IHJlc291cmNlID0gYm9keSA/PyB7fTtcblxuICAgIHJldHVybiB0aGlzLmV4ZWN1dGVBY3Rpb24oeyBhY3Rpb24sIHJlc291cmNlLCBpZCB9KTtcbiAgfVxuXG4gIGJlZm9yZVJlbW92ZShcbiAgICBhY3Rpb246IFBvUGFnZUR5bmFtaWNEZXRhaWxBY3Rpb25zWydiZWZvcmVSZW1vdmUnXSxcbiAgICBpZDogYW55LFxuICAgIGJvZHk6IGFueVxuICApOiBPYnNlcnZhYmxlPFBvUGFnZUR5bmFtaWNEZXRhaWxCZWZvcmVSZW1vdmU+IHtcbiAgICBjb25zdCByZXNvdXJjZSA9IGJvZHkgPz8ge307XG5cbiAgICByZXR1cm4gdGhpcy5leGVjdXRlQWN0aW9uKHsgYWN0aW9uLCByZXNvdXJjZSwgaWQgfSk7XG4gIH1cblxuICBwcml2YXRlIGV4ZWN1dGVBY3Rpb248VD4oeyBhY3Rpb24sIHJlc291cmNlID0ge30sIGlkIH06IEV4ZWN1dGVBY3Rpb25QYXJhbWV0ZXIpOiBPYnNlcnZhYmxlPFQ+IHtcbiAgICBpZiAoIWFjdGlvbikge1xuICAgICAgcmV0dXJuIG9mKDxUPnt9KTtcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIGFjdGlvbiA9PT0gJ3N0cmluZycpIHtcbiAgICAgIGNvbnN0IHVybCA9IGlkID8gYCR7YWN0aW9ufS8ke2lkfWAgOiBhY3Rpb247XG5cbiAgICAgIHJldHVybiB0aGlzLmh0dHAucG9zdDxUPih1cmwsIHJlc291cmNlLCB7IGhlYWRlcnM6IHRoaXMuaGVhZGVycyB9KTtcbiAgICB9XG5cbiAgICByZXR1cm4gb2YoYWN0aW9uKGlkLCByZXNvdXJjZSkpO1xuICB9XG59XG4iXX0=