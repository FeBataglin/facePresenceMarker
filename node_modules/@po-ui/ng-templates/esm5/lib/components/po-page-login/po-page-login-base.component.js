import { __assign, __decorate, __metadata } from "tslib";
import { EventEmitter, Input, Output, Directive } from '@angular/core';
import { Router } from '@angular/router';
import { convertToBoolean, convertToInt, getShortBrowserLanguage, isExternalLink, isTypeof, poLocaleDefault } from './../../utils/util';
import { PoPageLoginAuthenticationType } from './enums/po-page-login-authentication-type.enum';
import { PoPageLoginService } from './po-page-login.service';
var poPageLoginContentMaxLength = 40;
export var poPageLoginLiteralsDefault = {
    en: {
        title: 'Welcome',
        loginErrorPattern: 'Invalid Login',
        loginHint: "Your login user was given to you at your first day.\n    If you don't have this information contact support",
        loginPlaceholder: 'Insert your e-mail',
        passwordErrorPattern: 'Invalid Password',
        passwordPlaceholder: 'Insert your password',
        customFieldErrorPattern: 'Invalid value',
        customFieldPlaceholder: 'Please enter a value',
        rememberUser: 'Automatic login',
        rememberUserHint: 'You can disable this option in system configuration',
        submitLabel: 'Enter',
        submittedLabel: 'Loading...',
        forgotPassword: 'Forgot your Password?',
        highlightInfo: '',
        registerUrl: 'New register',
        titlePopover: 'Oops!',
        forgotYourPassword: 'Forgot your password?',
        ifYouTryHarder: 'If you try ',
        attempts: '{0} more time(s) ',
        yourUserWillBeBlocked: 'without success your user will be blocked and you will be left 24 hours without being able to access :(',
        createANewPasswordNow: 'Better create a new password now! You will be able to log into the system right away.',
        iForgotMyPassword: 'I forgot my password'
    },
    es: {
        title: 'Bienvenido',
        loginErrorPattern: 'Login inválido',
        loginHint: "Su usuario ha sido entregado para usted en su primer d\u00EDa.\n    Si no tiene esta informaci\u00F3n, p\u00F3ngase en contacto con el soporte t\u00E9cnico",
        loginPlaceholder: 'Inserte su e-mail',
        passwordErrorPattern: 'Contraseña inválida',
        passwordPlaceholder: 'Inserte su contraseña',
        customFieldErrorPattern: 'Valor no válido.',
        customFieldPlaceholder: 'Por favor introduzca un valor',
        rememberUser: 'Inicio de sesión automáticamente',
        rememberUserHint: 'Puede deshabilitar esta opción en el menú del sistema.',
        submitLabel: 'Entrar',
        submittedLabel: 'Cargando...',
        forgotPassword: 'Olvidaste tu contraseña?',
        highlightInfo: '',
        registerUrl: 'Nuevo registro',
        titlePopover: 'Opa!',
        forgotYourPassword: 'Olvidaste tu contraseña?',
        ifYouTryHarder: 'Si intenta más ',
        attempts: '{0} vez/veces ',
        yourUserWillBeBlocked: 'sin éxito su usuario sera bloqueado y usted vás permanecer 24 horas sin poder acceder a :(',
        createANewPasswordNow: '¡Mejor crear una nueva contraseña ahora! Usted podrá entrar en el sistema inmediatamente después.',
        iForgotMyPassword: 'Olvide mi contraseña'
    },
    pt: {
        title: 'Bem-vindo',
        loginErrorPattern: 'Login inválido',
        loginHint: "Seu usu\u00E1rio foi entregue a voc\u00EA no seu primeiro dia.\n    Caso n\u00E3o tenha mais essa informa\u00E7\u00E3o contacte o suporte",
        loginPlaceholder: 'Insira seu e-mail',
        passwordErrorPattern: 'Senha inválida',
        passwordPlaceholder: 'Insira sua senha',
        customFieldErrorPattern: 'Valor inválido.',
        customFieldPlaceholder: 'Por favor insira um valor',
        rememberUser: 'Logar automaticamente',
        rememberUserHint: 'Você pode desabilitar essa opção no menu do sistema',
        submitLabel: 'Entrar',
        submittedLabel: 'Carregando...',
        forgotPassword: 'Esqueceu sua senha?',
        highlightInfo: '',
        registerUrl: 'Novo registro',
        titlePopover: 'Opa!',
        forgotYourPassword: 'Esqueceu sua senha?',
        ifYouTryHarder: 'Se tentar mais ',
        attempts: '{0} vez(es) ',
        yourUserWillBeBlocked: 'sem sucesso seu usuário será bloqueado e você fica 24 horas sem poder acessar :(',
        createANewPasswordNow: 'Melhor criar uma senha nova agora! Você vai poder entrar no sistema logo em seguida.',
        iForgotMyPassword: 'Esqueci minha senha'
    },
    ru: {
        title: 'Добро пожаловать!',
        loginErrorPattern: 'Неверный логин',
        loginHint: "\u0412\u0430\u0448 \u043B\u043E\u0433\u0438\u043D \u0431\u044B\u043B \u043F\u0440\u0435\u0434\u043E\u0441\u0442\u0430\u0432\u043B\u0435\u043D \u0432\u0430\u043C \u0432 \u043F\u0435\u0440\u0432\u044B\u0439 \u0434\u0435\u043D\u044C.\n    \u0415\u0441\u043B\u0438 \u0443 \u0432\u0430\u0441 \u043D\u0435\u0442 \u044D\u0442\u043E\u0439 \u0438\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u0438, \u043E\u0431\u0440\u0430\u0442\u0438\u0442\u0435\u0441\u044C \u0432 \u0441\u043B\u0443\u0436\u0431\u0443 \u043F\u043E\u0434\u0434\u0435\u0440\u0436\u043A\u0438",
        loginPlaceholder: 'Вставьте свой адрес электронной почты',
        passwordErrorPattern: 'Неверный пароль',
        passwordPlaceholder: 'Введите свой пароль',
        customFieldErrorPattern: 'Неверное значение.',
        customFieldPlaceholder: 'Пожалуйста, введите значение',
        rememberUser: 'Автоматический вход',
        rememberUserHint: 'Вы можете отключить эту опцию в конфигурации системы',
        submitLabel: 'Войти',
        submittedLabel: '3агрузка...',
        forgotPassword: 'Забыли пароль?',
        highlightInfo: '',
        registerUrl: 'Новый регистр',
        titlePopover: 'Ой!',
        forgotYourPassword: 'Забыли пароль?',
        ifYouTryHarder: 'Если вы безуспешно попытаетесь войти еще ',
        attempts: '{0} раз(а) ',
        yourUserWillBeBlocked: 'Ваш пользователь будет заблокирован, и Вы останетесь на 24 часа без возможности доступа :(',
        createANewPasswordNow: 'Лучше создайте новый пароль сейчас! Вы сможете сразу войти в систему.',
        iForgotMyPassword: 'Я забыл свой пароль'
    }
};
export var poPageLoginLiteralIn = {
    en: 'in',
    es: 'en',
    pt: 'em',
    ru: 'в'
};
export var poPageLoginLiteralTo = {
    en: 'to',
    es: 'al',
    pt: 'ao',
    ru: 'к'
};
/**
 * @description
 *
 * O componente `po-page-login` é utilizado como template para tela de login.
 * Com ele é possível definirmos valores para usuário, senha e definir ações para recuperação de senha e gravação de dados do usuário.
 * Também é possível inserir uma imagem em conjunto com um texto de destaque.
 *
 *
 * A propriedade `p-authentication-url` automatiza a rotina do componente e simplifica o processo para autenticação do usuário, bastando
 * definir uma url para requisição da autenticação. A flexibilidade e praticidade podem chegar a um nível em que o desenvolvimento
 * da aplicação no *client side* é desprovida de qualquer código-fonte relacionado à rotina de login de usuário.
 * Seu detalhamento para uso pode ser visto logo abaixo em *propriedades*.
 * Caso julgue necessário, pode-se também definir manualmente a rotina do componente.
 *
 *
 * Para que as imagens sejam exibidas corretamente, é necessário incluir o caminho delas ao projeto. Para isso, edite
 * o *assets* no arquivo **angular.json** da aplicação na seguinte ordem:
 * ```
 *   "assets": [
 *     "src/assets",
 *     "src/favicon.ico",
 *     {
 *       "glob": "**\/*",
 *       "input": "node_modules/@po-ui/style/images",
 *       "output": "assets/images"
 *     }
 *   ]
 * ```
 */
var PoPageLoginBaseComponent = /** @class */ (function () {
    function PoPageLoginBaseComponent(loginService, router) {
        this.loginService = loginService;
        this.router = router;
        this.allLoginErrors = [];
        this.allPasswordErrors = [];
        this.rememberUser = false;
        this.showExceededAttemptsWarning = false;
        this._authenticationType = PoPageLoginAuthenticationType.Basic;
        this._hideRememberUser = false;
        this._loading = false;
        this._loginErrors = [];
        this._passwordErrors = [];
        /**
         * Evento disparado quando o usuário alterar o input do campo login.
         *
         * Esse evento receberá como parâmetro uma variável do tipo `string` com o texto informado no campo.
         *
         * > Esta propriedade será ignorada se for definido valor para a propriedade `p-authentication-url`.
         */
        this.loginChange = new EventEmitter();
        /**
         * Evento disparado ao submeter o formulário de login (apertando `Enter` dentro dos campos ou pressionando o botão de confirmação).
         *
         * Esse evento receberá como parâmetro um objeto do tipo `PoPageLogin` com os dados informados no formulário.
         *
         * > Esta propriedade será ignorada se for definido valor para a propriedade `p-url-recovery`.
         *
         * > Para mais detalhes consulte a documentação sobre a interface `PoPageLogin` mais abaixo.
         */
        this.loginSubmit = new EventEmitter();
        /**
         * Evento disparado quando o usuário alterar o input do campo password.
         *
         * Esse evento receberá como parâmetro uma variável do tipo `string` com o texto informado no campo.
         *
         * > Esta propriedade será ignorada se for definido valor para a propriedade `p-authentication-url`.
         */
        this.passwordChange = new EventEmitter();
    }
    Object.defineProperty(PoPageLoginBaseComponent.prototype, "customField", {
        get: function () {
            return this._customField;
        },
        /**
         * @optional
         *
         * @description
         *
         * Ao informar um valor do tipo `string`, o mesmo será aplicado como a chave do campo customizado e utilizará
         * os valores padrões contidos na propriedade `literals` como `customFieldErrorPattern` e `customFieldPlaceholder`.
         *
         * Existe a possibilidade de informar um objeto que segue a definição da interface `PoPageLoginCustomField`, onde
         * através dos parâmetros enviados pode gerar um `po-input`, `po-combo` especificamente para serviços
         * ou `po-select` para valores fixos.
         *
         * Abaixo seguem os exemplos de cada tipo de campo.
         *
         * `po-input`:
         *
         * ```
         * {
         *   property: 'domain',
         *   value: 'jv01',
         *   placeholder: 'Enter your domain',
         *   pattern: '[a-z]',
         *   errorPattern: 'Invalid value'
         * }
         * ```
         *
         * `po-combo`:
         *
         * ```
         * {
         *   property: 'domain',
         *   value: 'jv01',
         *   placeholder: 'Enter your domain',
         *   url: 'https://po-ui.io/sample/api/comboOption/domains',
         *   fieldValue: 'nickname'
         * }
         * ```
         *
         * `po-select`:
         *
         * ```
         * {
         *   property: 'domain',
         *   value: 'jv01',
         *   placeholder: 'Enter your domain',
         *   options: [{label: 'Domain 1', value: '1'}, {label: 'Domain 2', value: '2'}]
         * }
         * ```
         *
         * Caso o customField possua options, url e fieldValue preenchidos, será priorizado o po-select
         * utilizando o options.
         *
         */
        set: function (value) {
            if (value) {
                if (isTypeof(value, 'string')) {
                    this.customFieldType = 'input';
                    this._customField = value;
                    this.customFieldObject = this.getDefaultCustomFieldObject(value);
                    return;
                }
                if (isTypeof(value, 'object') && !Array.isArray(value) && value['property']) {
                    this._customField = value;
                    this.customFieldObject = value;
                    if (!this.customFieldObject.options && !this.customFieldObject.url) {
                        this.customFieldType = 'input';
                    }
                    else {
                        this.customFieldType = this.customFieldObject.options ? 'select' : 'combo';
                    }
                    return;
                }
            }
            this._customField = undefined;
            this.customFieldObject = undefined;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageLoginBaseComponent.prototype, "contactEmail", {
        get: function () {
            return this._contactEmail;
        },
        /**
         * @optional
         *
         * @description
         *
         * Personaliza o e-mail que é exibido na mensagem de dica de login padrão para contato de suporte.
         */
        set: function (value) {
            this._contactEmail = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageLoginBaseComponent.prototype, "productName", {
        get: function () {
            return this._productName;
        },
        /**
         * @optional
         *
         * @description
         *
         * Valor customizado que sucede o título de boas-vindas.
         *
         * > Esta propriedade é sobreposta se `p-literals` contiver uma definição customizada para a literal `title`.
         *
         * > Veja mais sobre as literais na propriedade `p-literals`.
         *
         */
        set: function (value) {
            this._productName = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageLoginBaseComponent.prototype, "environment", {
        get: function () {
            return this._environment;
        },
        /**
         * @optional
         *
         * @description
         * Adiciona uma `tag` abaixo do título que especifica o ambiente que o usuário está fazendo o login.
         *
         * > Essa propriedade limita o texto em 40 caracteres.
         */
        set: function (environment) {
            if (environment && environment.length > poPageLoginContentMaxLength) {
                this._environment = environment.substring(0, poPageLoginContentMaxLength);
            }
            else {
                this._environment = environment;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageLoginBaseComponent.prototype, "exceededAttemptsWarning", {
        get: function () {
            return this._exceededAttemptsWarning;
        },
        /**
         * @optional
         *
         * @description
         * Exibe um aviso de bloqueio de acordo com a quantidade restante de tentativas.
         * O aviso será exibido somente se a quantidade for maior que zero.
         *
         * > Caso tenha algum valor atribuído para o atributo `p-authentication-url` e o retorno da requisição estiver atribuindo valor
         * para o `p-exceeded-attempts-warning`, o valor considerado será o do retorno da requisição.
         *
         * @default `0`
         */
        set: function (value) {
            this._exceededAttemptsWarning = convertToInt(value);
            this.showExceededAttemptsWarning = this.exceededAttemptsWarning > 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageLoginBaseComponent.prototype, "hideRememberUser", {
        get: function () {
            return this._hideRememberUser;
        },
        /**
         * @optional
         *
         * @description
         *
         * Esconde a função "Lembrar usuário" do formulário de login.
         *
         * Quando essa propriedade é setada com `true` a propriedade `rememberUser` enviada no evento `p-login-submit` será sempre
         * `false`.
         *
         * > Veja a propriedade `p-literals` para customizar a literal `rememberUser`.
         *
         * @default `false`
         */
        set: function (value) {
            this._hideRememberUser = value === '' ? true : convertToBoolean(value);
            if (this._hideRememberUser) {
                this.rememberUser = false;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageLoginBaseComponent.prototype, "literals", {
        get: function () {
            return this._literals;
        },
        /**
         * @optional
         *
         * @description
         *
         * Objeto com as literais usadas no `po-page-login`.
         *
         * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponíveis:
         *
         * ```
         *  const customLiterals: PoPageLoginLiterals = {
         *    attempts: '{0} vez(es) ',
         *    createANewPasswordNow: 'Melhor criar uma senha nova agora! Você vai poder entrar no sistema logo em seguida.',
         *    forgotPassword: 'Esqueceu sua senha?',
         *    forgotYourPassword: 'Esqueceu sua senha?',
         *    highlightInfo: '',
         *    iForgotMyPassword: 'Esqueci minha senha',
         *    ifYouTryHarder: 'Se tentar mais ',
         *    title: 'Seja bem-vindo',
         *    loginErrorPattern: 'Login obrigatório',
         *    loginHint: 'Caso não possua usuário entre em contato com o suporte',
         *    loginLabel: 'Insira seu usuário',
         *    loginPlaceholder: 'Insira seu usuário de acesso',
         *    passwordErrorPattern: 'Senha obrigatória',
         *    passwordLabel: 'Insira sua senha',
         *    passwordPlaceholder: 'Insira sua senha de acesso',
         *    customFieldErrorPattern: 'Campo customizado inválido',
         *    customFieldPlaceholder: 'Por favor insira um valor',
         *    registerUrl: 'Novo registro',
         *    rememberUser: 'Lembrar usuário',
         *    rememberUserHint: 'Esta opção pode ser desabilitada nas configurações do sistema',
         *    submitLabel: 'Acessar sistema',
         *    submittedLabel: 'Carregando...',
         *    titlePopover: 'Opa!',
         *    yourUserWillBeBlocked: 'sem sucesso seu usuário será bloqueado e você fica 24 horas sem poder acessar :('
         *  };
         * ```
         *
         * Ou passando apenas as literais que deseja customizar:
         *
         * ```
         *  const customLiterals: PoPageLoginLiterals = {
         *    loginPlaceholder: 'Insira seu usuário de acesso',
         *    passwordPlaceholder: 'Insira sua senha de acesso',
         *    submitLabel: 'Acessar sistema'
         *  };
         * ```
         *
         * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.
         *
         * ```
         * <po-page-login
         *   [p-literals]="customLiterals">
         * </po-page-login>
         * ```
         *
         *  > O objeto padrão de literais será traduzido de acordo com o idioma do browser (pt, en, es).
         *  > É também possível alternar o objeto padrão de literais através do seletor de idiomas localizado na parte inferior do template,
         * nesse caso, há também a opção do idioma russo.
         */
        set: function (value) {
            this._literals = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageLoginBaseComponent.prototype, "loading", {
        get: function () {
            return this._loading;
        },
        /**
         * @optional
         *
         * @description
         *
         * Habilita um estado de carregamento ao botão de *login*.
         *
         * > É necessário atribuir `true` à esta propriedade na função definida em `p-login-submit`.
         *
         * @default `false`
         */
        set: function (value) {
            this._loading = convertToBoolean(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageLoginBaseComponent.prototype, "login", {
        get: function () {
            return this._login;
        },
        /**
         * @optional
         *
         * @description
         *
         * Valor do modelo do campo de login.
         */
        set: function (value) {
            this._login = value;
            if (!this.authenticationUrl) {
                this.loginChange.emit(this._login);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageLoginBaseComponent.prototype, "loginErrors", {
        get: function () {
            return this._loginErrors;
        },
        /**
         * @optional
         *
         * @description
         *
         * Atributo que recebe uma lista de erros e exibe abaixo do campo de login.
         */
        set: function (value) {
            this._loginErrors = value || [];
            this.setLoginErrors(this._loginErrors);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageLoginBaseComponent.prototype, "passwordErrors", {
        get: function () {
            return this._passwordErrors;
        },
        /**
         * @optional
         *
         * @description
         *
         * Atributo que recebe uma lista de erros e exibe abaixo do campo de password.
         */
        set: function (value) {
            this._passwordErrors = value || [];
            this.setPasswordErrors(this._passwordErrors);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageLoginBaseComponent.prototype, "recovery", {
        get: function () {
            return this._recovery;
        },
        /**
         * @optional
         *
         * @description
         *
         * Exibe um link abaixo do formulário de login para que os usuários da aplicação façam a recuperação dos dados de autenticação.
         *
         * A propriedade aceita os seguintes tipos:
         *
         * - **String**: informe uma url externa ou uma rota válida;
         * - **Function**: pode-se customizar a ação. Para esta possilidade basta atribuir:
         * ```
         * <po-page-login>
         *   [recovery]="this.myRecovery.bind(this)">
         * </po-page-login>
         * ```
         *
         * - **PoPageLoginRecovery**: cria-se vínculo automático com o template **po-modal-password-recovery**.
         *   O objeto deve conter a **url** para requisição dos recursos e pode-se definir o **tipo** de modal para recuperação de senha,
         *   **email** para contato e **máscara** do campo de telefone.
         */
        set: function (value) {
            this._recovery = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageLoginBaseComponent.prototype, "registerUrl", {
        get: function () {
            return this._registerUrl;
        },
        /**
         * @optional
         *
         * @description
         *
         * Caso a aplicação tenha um link para novos cadastros, informe uma url externa ou uma rota válida, dessa
         * forma será exibido um link abaixo do formulário de login para os usuários da aplicação.
         *
         * Exemplos de valores válidos:
         * - **local**: `/home`
         * - **url externa**: `https://po-ui.io`
         *
         * > Veja a propriedade `p-literals` para customizar a literal `registerUrl`.
         */
        set: function (value) {
            this._registerUrl = isTypeof(value, 'string') ? value : undefined;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageLoginBaseComponent.prototype, "authenticationType", {
        get: function () {
            return this._authenticationType;
        },
        /**
         * @optional
         *
         * @description
         *
         * Atributo que recebe o tipo de esquema da autenticação, sendo suportados apenas os valores `Basic` e `Bearer`.
         *
         * > Caso o tipo definido seja `Basic`, o componente fará uma requisição `POST` contendo:
         *
         * ```
         * headers {
         *  Authorization: Basic base64(login:password)
         * }
         *
         * body {
         *  rememberUser: rememberUser
         * }
         * ```
         *
         * > Caso o tipo definido seja `Bearer`, o componente fará uma requisição `POST` contendo:
         *
         * ```
         * body {
         *  login: login,
         *  password: base64(password),
         *  rememberUser: rememberUser
         * }
         * ```
         *
         * @default `PoPageLoginAuthenticationType.Basic`
         */
        set: function (value) {
            this._authenticationType = Object.values(PoPageLoginAuthenticationType).includes(value)
                ? value
                : PoPageLoginAuthenticationType.Basic;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageLoginBaseComponent.prototype, "authenticationUrl", {
        get: function () {
            return this._authenticationUrl;
        },
        /**
         * @optional
         *
         * @description
         *
         * Endpoint usado pelo template para requisição do recurso. Quando preenchido, o método `p-login-submit` será ignorado e o
         * componente adquirirá automatização para o processo de autenticação.
         *
         * ### Processos
         * Ao digitar um valor válido no campo de login/password e pressionar **Enter**, o componente fará uma requisição `POST`
         * na url especificada nesta propriedade passando o objeto contendo o valor definido pelo usuário:
         *
         * ```
         * headers {
         *  Authorization: Basic base64(login:password)
         * }
         *
         * body {
         *  rememberUser: rememberUser
         * }
         * ```
         *
         * Em caso de **sucesso**, o objeto de retorno é armazenado no `sessionStorage` e o usuário é redirecionado para a página inicial da
         * aplicação `/`.
         *
         * ```
         * 200:
         *  {
         *    user: user
         *  }
         * ```
         *
         * Em caso de **erro** na autenticação, espera-se o seguinte retorno:
         *
         * ```
         * 400/401
         *  {
         *    code: 400/401,
         *    message: message,
         *    detailedMessage: detailedMessage,
         *    helpUrl?: helpUrl
         *  }
         * ```
         *
         * > Pode-se atribuir uma quantidade máxima de tentativas restantes (maxAttemptsRemaining) para o atributo `p-exceeded-attempts-warning`,
         * assim como os avisos relacionados aos campos login e password (loginWarnings, passwordWarnings) para os atributos `p-login-errors` e
         * `p-password-errors` conforme retorno abaixo:
         *
         * ```
         * 400
         *  {
         *    code: 400/401,
         *    message: message,
         *    detailedMessage: detailedMessage,
         *    helpUrl?: helpUrl,
         *    maxAttemptsRemaining?: maxAttemptsRemaining,
         *    loginWarnings?: [loginWarnings],
         *    passwordWarnings?: [passwordWarnings]
         *  }
         * ```
         *
         * > Caso o valor atribuído para `p-exceeded-attempts-warning` seja igual a 0(zero), poderá ser passado um valor para o
         * atributo `p-blocked-url` e o usuário será redirecionado para uma tela de bloqueio.
         *
         * *Processo finalizado.*
         *
         * _______________
         *
         * #### Praticidade
         * As informações do serviço de autenticação também podem ser transmitidas diretamente pelas configuraçãos de rota e, desta maneira,
         * dispensa-se qualquer menção e/ou importação do componente `po-page-login` no restante da aplicação. O exemplo abaixo exemplifica
         * a forma dinâmica com a qual o template de tela de login pode ser gerado ao navegar para rota `/login`, e também como ele se comunica
         * com o serviço para efetuação do processo de autenticação do usuário e solicitação de nova senha.
         * Basta definir nas configurações de rota:
         *
         *
         * ```
         *   import { PoPageLoginComponent, PoPageLoginAthenticationType } from '@po-ui/ng-templates';
         *
         *   ...
         *   const routes: Routes = [
         *     {
         *       path: 'login', component: PoPageLoginComponent, data: {
         *         serviceApi: 'https://po-ui.io/sample/api/users/authentication',
         *         environment: 'development',
         *         recovery: {
         *           url: 'https://po-ui.io/sample/api/users',
         *           type: PoModalPasswordRecoveryType.All,
         *           contactMail: 'dev.po@po-ui.com',
         *           phoneMask: '9-999-999-9999'
         *         },
         *         registerUrl: '/new-password',
         *         authenticationType: PoPageLoginAthenticationType.Basic
         *       }
         *     }
         *     ...
         *   ];
         *
         *   @NgModule({
         *     imports: [RouterModule.forRoot(routes)],
         *     exports: [RouterModule]
         *   })
         *   export class AppRoutingModule { }
         * ```
         *
         *
         * O metadado `serviceApi` deve ser a **url** para requisição dos recursos de autenticação, o `environment` alimenta a propriedade
         * `p-environment`, `recovery` é a interface `PoPageLoginRecovery` responsável pelas especificações contidas na modal de recuperação de
         * senha, `registerUrl` alimenta a propriedade `p-register-url` e `authenticationType` que define a propriedade `p-authentication-type`.
         *
         * > É essencial que siga a nomenclatura dos atributos exemplificados acima para sua efetiva funcionalidade.
         *
         */
        set: function (value) {
            this._authenticationUrl = isTypeof(value, 'string') ? value : undefined;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageLoginBaseComponent.prototype, "blockedUrl", {
        get: function () {
            return this._blockedUrl;
        },
        /**
         * @optional
         *
         * @description
         *
         * Caso o valor atribuído para `p-exceeded-attempts-warning` seja igual a 0(zero) e a aplicação tenha um link de bloqueio de usuário,
         * informe uma url externa ou uma rota válida, dessa forma em caso de bloqueio o usuário será redirecionado.
         */
        set: function (value) {
            this._blockedUrl = isTypeof(value, 'string') ? value : undefined;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageLoginBaseComponent.prototype, "language", {
        get: function () {
            return this.selectedLanguage || getShortBrowserLanguage();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageLoginBaseComponent.prototype, "pageLoginLiterals", {
        get: function () {
            var loginHintWithContactEmail = this.contactEmail
                ? this.concatenateLoginHintWithContactEmail(this.contactEmail)
                : undefined;
            var titleWithProductName = this.productName ? this.concatenateTitleWithProductName(this.productName) : undefined;
            return __assign(__assign(__assign(__assign(__assign({}, poPageLoginLiteralsDefault[poLocaleDefault]), poPageLoginLiteralsDefault[this.language]), loginHintWithContactEmail), titleWithProductName), this.literals);
        },
        enumerable: true,
        configurable: true
    });
    PoPageLoginBaseComponent.prototype.ngOnDestroy = function () {
        if (this.loginSubscription) {
            this.loginSubscription.unsubscribe();
        }
    };
    PoPageLoginBaseComponent.prototype.closePopover = function () {
        this.showExceededAttemptsWarning = false;
    };
    PoPageLoginBaseComponent.prototype.onLoginSubmit = function () {
        var _this = this;
        var loginForm = {
            login: this.login,
            password: this.password,
            rememberUser: this.rememberUser
        };
        if (this.customField) {
            loginForm[this.customFieldObject.property] = this.customFieldObject.value;
        }
        if (this.authenticationUrl) {
            this.loginSubscription = this.loginService
                .onLogin(this.authenticationUrl, this.authenticationType, loginForm)
                .subscribe(function (data) {
                _this.setValuesToProperties();
                sessionStorage.setItem('PO_USER_LOGIN', JSON.stringify(data));
                _this.openInternalLink('/');
            }, function (error) {
                if (error.error.code === '400' || error.error.code === '401') {
                    _this.setValuesToProperties(error);
                    _this.redirectBlockedUrl(_this.exceededAttemptsWarning, _this.blockedUrl);
                }
            });
        }
        else {
            this.loginSubmit.emit(loginForm);
            this.showExceededAttemptsWarning = this.exceededAttemptsWarning > 0;
        }
    };
    PoPageLoginBaseComponent.prototype.getDefaultCustomFieldObject = function (property) {
        return { property: property };
    };
    PoPageLoginBaseComponent.prototype.openExternalLink = function (url) {
        window.open(url, '_blank');
    };
    PoPageLoginBaseComponent.prototype.openInternalLink = function (url) {
        this.router.navigate([url]);
    };
    PoPageLoginBaseComponent.prototype.redirectBlockedUrl = function (attempts, blockedUrl) {
        if (attempts === 0 && blockedUrl) {
            this.showExceededAttemptsWarning = false;
            isExternalLink(blockedUrl) ? this.openExternalLink(blockedUrl) : this.openInternalLink(blockedUrl);
        }
    };
    PoPageLoginBaseComponent.prototype.setValuesToProperties = function (result) {
        if (result) {
            this.exceededAttemptsWarning = result.error.maxAttemptsRemaining;
            this.loginErrors = result.error.loginWarnings;
            this.passwordErrors = result.error.passwordWarnings;
            this.blockedUrl = result.error.blockedUrl;
        }
        else {
            this.exceededAttemptsWarning = 0;
            this.loginErrors = [];
            this.passwordErrors = [];
            this.blockedUrl = '';
        }
    };
    PoPageLoginBaseComponent.ctorParameters = function () { return [
        { type: PoPageLoginService },
        { type: Router }
    ]; };
    __decorate([
        Input('p-custom-field'),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], PoPageLoginBaseComponent.prototype, "customField", null);
    __decorate([
        Input('p-background'),
        __metadata("design:type", String)
    ], PoPageLoginBaseComponent.prototype, "background", void 0);
    __decorate([
        Input('p-contact-email'),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], PoPageLoginBaseComponent.prototype, "contactEmail", null);
    __decorate([
        Input('p-product-name'),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], PoPageLoginBaseComponent.prototype, "productName", null);
    __decorate([
        Input('p-environment'),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], PoPageLoginBaseComponent.prototype, "environment", null);
    __decorate([
        Input('p-exceeded-attempts-warning'),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], PoPageLoginBaseComponent.prototype, "exceededAttemptsWarning", null);
    __decorate([
        Input('p-hide-remember-user'),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], PoPageLoginBaseComponent.prototype, "hideRememberUser", null);
    __decorate([
        Input('p-literals'),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], PoPageLoginBaseComponent.prototype, "literals", null);
    __decorate([
        Input('p-loading'),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], PoPageLoginBaseComponent.prototype, "loading", null);
    __decorate([
        Input('p-login'),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], PoPageLoginBaseComponent.prototype, "login", null);
    __decorate([
        Input('p-logo'),
        __metadata("design:type", String)
    ], PoPageLoginBaseComponent.prototype, "logo", void 0);
    __decorate([
        Input('p-login-pattern'),
        __metadata("design:type", String)
    ], PoPageLoginBaseComponent.prototype, "loginPattern", void 0);
    __decorate([
        Input('p-login-errors'),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], PoPageLoginBaseComponent.prototype, "loginErrors", null);
    __decorate([
        Input('p-password-errors'),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], PoPageLoginBaseComponent.prototype, "passwordErrors", null);
    __decorate([
        Input('p-password-pattern'),
        __metadata("design:type", String)
    ], PoPageLoginBaseComponent.prototype, "passwordPattern", void 0);
    __decorate([
        Input('p-recovery'),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], PoPageLoginBaseComponent.prototype, "recovery", null);
    __decorate([
        Input('p-register-url'),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], PoPageLoginBaseComponent.prototype, "registerUrl", null);
    __decorate([
        Input('p-secondary-logo'),
        __metadata("design:type", String)
    ], PoPageLoginBaseComponent.prototype, "secondaryLogo", void 0);
    __decorate([
        Input('p-authentication-type'),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], PoPageLoginBaseComponent.prototype, "authenticationType", null);
    __decorate([
        Input('p-authentication-url'),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], PoPageLoginBaseComponent.prototype, "authenticationUrl", null);
    __decorate([
        Input('p-blocked-url'),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], PoPageLoginBaseComponent.prototype, "blockedUrl", null);
    __decorate([
        Output('p-login-change'),
        __metadata("design:type", EventEmitter)
    ], PoPageLoginBaseComponent.prototype, "loginChange", void 0);
    __decorate([
        Output('p-login-submit'),
        __metadata("design:type", Object)
    ], PoPageLoginBaseComponent.prototype, "loginSubmit", void 0);
    __decorate([
        Output('p-password-change'),
        __metadata("design:type", EventEmitter)
    ], PoPageLoginBaseComponent.prototype, "passwordChange", void 0);
    PoPageLoginBaseComponent = __decorate([
        Directive(),
        __metadata("design:paramtypes", [PoPageLoginService, Router])
    ], PoPageLoginBaseComponent);
    return PoPageLoginBaseComponent;
}());
export { PoPageLoginBaseComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tcGFnZS1sb2dpbi1iYXNlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwby11aS9uZy10ZW1wbGF0ZXMvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9wby1wYWdlLWxvZ2luL3BvLXBhZ2UtbG9naW4tYmFzZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLE9BQU8sRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFhLE1BQU0sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDbEYsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBRXpDLE9BQU8sRUFDTCxnQkFBZ0IsRUFDaEIsWUFBWSxFQUNaLHVCQUF1QixFQUN2QixjQUFjLEVBQ2QsUUFBUSxFQUNSLGVBQWUsRUFDaEIsTUFBTSxvQkFBb0IsQ0FBQztBQUc1QixPQUFPLEVBQUUsNkJBQTZCLEVBQUUsTUFBTSxnREFBZ0QsQ0FBQztBQUkvRixPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUU3RCxJQUFNLDJCQUEyQixHQUFHLEVBQUUsQ0FBQztBQUV2QyxNQUFNLENBQUMsSUFBTSwwQkFBMEIsR0FBRztJQUN4QyxFQUFFLEVBQXVCO1FBQ3ZCLEtBQUssRUFBRSxTQUFTO1FBQ2hCLGlCQUFpQixFQUFFLGVBQWU7UUFDbEMsU0FBUyxFQUFFLDZHQUN3QztRQUNuRCxnQkFBZ0IsRUFBRSxvQkFBb0I7UUFDdEMsb0JBQW9CLEVBQUUsa0JBQWtCO1FBQ3hDLG1CQUFtQixFQUFFLHNCQUFzQjtRQUMzQyx1QkFBdUIsRUFBRSxlQUFlO1FBQ3hDLHNCQUFzQixFQUFFLHNCQUFzQjtRQUM5QyxZQUFZLEVBQUUsaUJBQWlCO1FBQy9CLGdCQUFnQixFQUFFLHFEQUFxRDtRQUN2RSxXQUFXLEVBQUUsT0FBTztRQUNwQixjQUFjLEVBQUUsWUFBWTtRQUM1QixjQUFjLEVBQUUsdUJBQXVCO1FBQ3ZDLGFBQWEsRUFBRSxF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QndCLGtCQUFrQixFQUFpQixNQUFNO09BdnJCdkQsd0JBQXdCLENBNHdCN0M7SUFBRCwrQkFBQztDQUFBLEFBNXdCRCxJQTR3QkM7U0E1d0JxQix3QkFBd0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTdWJzY3JpcHRpb24gfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IEV2ZW50RW1pdHRlciwgSW5wdXQsIE9uRGVzdHJveSwgT3V0cHV0LCBEaXJlY3RpdmUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFJvdXRlciB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5cbmltcG9ydCB7XG4gIGNvbnZlcnRUb0Jvb2xlYW4sXG4gIGNvbnZlcnRUb0ludCxcbiAgZ2V0U2hvcnRCcm93c2VyTGFuZ3VhZ2UsXG4gIGlzRXh0ZXJuYWxMaW5rLFxuICBpc1R5cGVvZixcbiAgcG9Mb2NhbGVEZWZhdWx0XG59IGZyb20gJy4vLi4vLi4vdXRpbHMvdXRpbCc7XG5cbmltcG9ydCB7IFBvUGFnZUxvZ2luIH0gZnJvbSAnLi9pbnRlcmZhY2VzL3BvLXBhZ2UtbG9naW4uaW50ZXJmYWNlJztcbmltcG9ydCB7IFBvUGFnZUxvZ2luQXV0aGVudGljYXRpb25UeXBlIH0gZnJvbSAnLi9lbnVtcy9wby1wYWdlLWxvZ2luLWF1dGhlbnRpY2F0aW9uLXR5cGUuZW51bSc7XG5pbXBvcnQgeyBQb1BhZ2VMb2dpbkN1c3RvbUZpZWxkIH0gZnJvbSAnLi9pbnRlcmZhY2VzL3BvLXBhZ2UtbG9naW4tY3VzdG9tLWZpZWxkLmludGVyZmFjZSc7XG5pbXBvcnQgeyBQb1BhZ2VMb2dpbkxpdGVyYWxzIH0gZnJvbSAnLi9pbnRlcmZhY2VzL3BvLXBhZ2UtbG9naW4tbGl0ZXJhbHMuaW50ZXJmYWNlJztcbmltcG9ydCB7IFBvUGFnZUxvZ2luUmVjb3ZlcnkgfSBmcm9tICcuL2ludGVyZmFjZXMvcG8tcGFnZS1sb2dpbi1yZWNvdmVyeS5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgUG9QYWdlTG9naW5TZXJ2aWNlIH0gZnJvbSAnLi9wby1wYWdlLWxvZ2luLnNlcnZpY2UnO1xuXG5jb25zdCBwb1BhZ2VMb2dpbkNvbnRlbnRNYXhMZW5ndGggPSA0MDtcblxuZXhwb3J0IGNvbnN0IHBvUGFnZUxvZ2luTGl0ZXJhbHNEZWZhdWx0ID0ge1xuICBlbjogPFBvUGFnZUxvZ2luTGl0ZXJhbHM+e1xuICAgIHRpdGxlOiAnV2VsY29tZScsXG4gICAgbG9naW5FcnJvclBhdHRlcm46ICdJbnZhbGlkIExvZ2luJyxcbiAgICBsb2dpbkhpbnQ6IGBZb3VyIGxvZ2luIHVzZXIgd2FzIGdpdmVuIHRvIHlvdSBhdCB5b3VyIGZpcnN0IGRheS5cbiAgICBJZiB5b3UgZG9uJ3QgaGF2ZSB0aGlzIGluZm9ybWF0aW9uIGNvbnRhY3Qgc3VwcG9ydGAsXG4gICAgbG9naW5QbGFjZWhvbGRlcjogJ0luc2VydCB5b3VyIGUtbWFpbCcsXG4gICAgcGFzc3dvcmRFcnJvclBhdHRlcm46ICdJbnZhbGlkIFBhc3N3b3JkJyxcbiAgICBwYXNzd29yZFBsYWNlaG9sZGVyOiAnSW5zZXJ0IHlvdXIgcGFzc3dvcmQnLFxuICAgIGN1c3RvbUZpZWxkRXJyb3JQYXR0ZXJuOiAnSW52YWxpZCB2YWx1ZScsXG4gICAgY3VzdG9tRmllbGRQbGFjZWhvbGRlcjogJ1BsZWFzZSBlbnRlciBhIHZhbHVlJyxcbiAgICByZW1lbWJlclVzZXI6ICdBdXRvbWF0aWMgbG9naW4nLFxuICAgIHJlbWVtYmVyVXNlckhpbnQ6ICdZb3UgY2FuIGRpc2FibGUgdGhpcyBvcHRpb24gaW4gc3lzdGVtIGNvbmZpZ3VyYXRpb24nLFxuICAgIHN1Ym1pdExhYmVsOiAnRW50ZXInLFxuICAgIHN1Ym1pdHRlZExhYmVsOiAnTG9hZGluZy4uLicsXG4gICAgZm9yZ290UGFzc3dvcmQ6ICdGb3Jnb3QgeW91ciBQYXNzd29yZD8nLFxuICAgIGhpZ2hsaWdodEluZm86ICcnLFxuICAgIHJlZ2lzdGVyVXJsOiAnTmV3IHJlZ2lzdGVyJyxcbiAgICB0aXRsZVBvcG92ZXI6ICdPb3BzIScsXG4gICAgZm9yZ290WW91clBhc3N3b3JkOiAnRm9yZ290IHlvdXIgcGFzc3dvcmQ/JyxcbiAgICBpZllvdVRyeUhhcmRlcjogJ0lmIHlvdSB0cnkgJyxcbiAgICBhdHRlbXB0czogJ3swfSBtb3JlIHRpbWUocykgJyxcbiAgICB5b3VyVXNlcldpbGxCZUJsb2NrZWQ6XG4gICAgICAnd2l0aG91dCBzdWNjZXNzIHlvdXIgdXNlciB3aWxsIGJlIGJsb2NrZWQgYW5kIHlvdSB3aWxsIGJlIGxlZnQgMjQgaG91cnMgd2l0aG91dCBiZWluZyBhYmxlIHRvIGFjY2VzcyA6KCcsXG4gICAgY3JlYXRlQU5ld1Bhc3N3b3JkTm93OiAnQmV0dGVyIGNyZWF0ZSBhIG5ldyBwYXNzd29yZCBub3chIFlvdSB3aWxsIGJlIGFibGUgdG8gbG9nIGludG8gdGhlIHN5c3RlbSByaWdodCBhd2F5LicsXG4gICAgaUZvcmdvdE15UGFzc3dvcmQ6ICdJIGZvcmdvdCBteSBwYXNzd29yZCdcbiAgfSxcbiAgZXM6IDxQb1BhZ2VMb2dpbkxpdGVyYWxzPntcbiAgICB0aXRsZTogJ0JpZW52ZW5pZG8nLFxuICAgIGxvZ2luRXJyb3JQYXR0ZXJuOiAnTG9naW4gaW52w6FsaWRvJyxcbiAgICBsb2dpbkhpbnQ6IGBTdSB1c3VhcmlvIGhhIHNpZG8gZW50cmVnYWRvIHBhcmEgdXN0ZWQgZW4gc3UgcHJpbWVyIGTDrWEuXG4gICAgU2kgbm8gdGllbmUgZXN0YSBpbmZvcm1hY2nDs24sIHDDs25nYXNlIGVuIGNvbnRhY3RvIGNvbiBlbCBzb3BvcnRlIHTDqWNuaWNvYCxcbiAgICBsb2dpblBsYWNlaG9sZGVyOiAnSW5zZXJ0ZSBzdSBlLW1haWwnLFxuICAgIHBhc3N3b3JkRXJyb3JQYXR0ZXJuOiAnQ29udHJhc2XDsWEgaW52w6FsaWRhJyxcbiAgICBwYXNzd29yZFBsYWNlaG9sZGVyOiAnSW5zZXJ0ZSBzdSBjb250cmFzZcOxYScsXG4gICAgY3VzdG9tRmllbGRFcnJvclBhdHRlcm46ICdWYWxvciBubyB2w6FsaWRvLicsXG4gICAgY3VzdG9tRmllbGRQbGFjZWhvbGRlcjogJ1BvciBmYXZvciBpbnRyb2R1emNhIHVuIHZhbG9yJyxcbiAgICByZW1lbWJlclVzZXI6ICdJbmljaW8gZGUgc2VzacOzbiBhdXRvbcOhdGljYW1lbnRlJyxcbiAgICByZW1lbWJlclVzZXJIaW50OiAnUHVlZGUgZGVzaGFiaWxpdGFyIGVzdGEgb3BjacOzbiBlbiBlbCBtZW7DuiBkZWwgc2lzdGVtYS4nLFxuICAgIHN1Ym1pdExhYmVsOiAnRW50cmFyJyxcbiAgICBzdWJtaXR0ZWRMYWJlbDogJ0NhcmdhbmRvLi4uJyxcbiAgICBmb3Jnb3RQYXNzd29yZDogJ09sdmlkYXN0ZSB0dSBjb250cmFzZcOxYT8nLFxuICAgIGhpZ2hsaWdodEluZm86ICcnLFxuICAgIHJlZ2lzdGVyVXJsOiAnTnVldm8gcmVnaXN0cm8nLFxuICAgIHRpdGxlUG9wb3ZlcjogJ09wYSEnLFxuICAgIGZvcmdvdFlvdXJQYXNzd29yZDogJ09sdmlkYXN0ZSB0dSBjb250cmFzZcOxYT8nLFxuICAgIGlmWW91VHJ5SGFyZGVyOiAnU2kgaW50ZW50YSBtw6FzICcsXG4gICAgYXR0ZW1wdHM6ICd7MH0gdmV6L3ZlY2VzICcsXG4gICAgeW91clVzZXJXaWxsQmVCbG9ja2VkOiAnc2luIMOpeGl0byBzdSB1c3VhcmlvIHNlcmEgYmxvcXVlYWRvIHkgdXN0ZWQgdsOhcyBwZXJtYW5lY2VyIDI0IGhvcmFzIHNpbiBwb2RlciBhY2NlZGVyIGEgOignLFxuICAgIGNyZWF0ZUFOZXdQYXNzd29yZE5vdzpcbiAgICAgICfCoU1lam9yIGNyZWFyIHVuYSBudWV2YSBjb250cmFzZcOxYSBhaG9yYSEgVXN0ZWQgcG9kcsOhIGVudHJhciBlbiBlbCBzaXN0ZW1hIGlubWVkaWF0YW1lbnRlIGRlc3B1w6lzLicsXG4gICAgaUZvcmdvdE15UGFzc3dvcmQ6ICdPbHZpZGUgbWkgY29udHJhc2XDsWEnXG4gIH0sXG4gIHB0OiA8UG9QYWdlTG9naW5MaXRlcmFscz57XG4gICAgdGl0bGU6ICdCZW0tdmluZG8nLFxuICAgIGxvZ2luRXJyb3JQYXR0ZXJuOiAnTG9naW4gaW52w6FsaWRvJyxcbiAgICBsb2dpbkhpbnQ6IGBTZXUgdXN1w6FyaW8gZm9pIGVudHJlZ3VlIGEgdm9jw6ogbm8gc2V1IHByaW1laXJvIGRpYS5cbiAgICBDYXNvIG7Do28gdGVuaGEgbWFpcyBlc3NhIGluZm9ybWHDp8OjbyBjb250YWN0ZSBvIHN1cG9ydGVgLFxuICAgIGxvZ2luUGxhY2Vob2xkZXI6ICdJbnNpcmEgc2V1IGUtbWFpbCcsXG4gICAgcGFzc3dvcmRFcnJvclBhdHRlcm46ICdTZW5oYSBpbnbDoWxpZGEnLFxuICAgIHBhc3N3b3JkUGxhY2Vob2xkZXI6ICdJbnNpcmEgc3VhIHNlbmhhJyxcbiAgICBjdXN0b21GaWVsZEVycm9yUGF0dGVybjogJ1ZhbG9yIGludsOhbGlkby4nLFxuICAgIGN1c3RvbUZpZWxkUGxhY2Vob2xkZXI6ICdQb3IgZmF2b3IgaW5zaXJhIHVtIHZhbG9yJyxcbiAgICByZW1lbWJlclVzZXI6ICdMb2dhciBhdXRvbWF0aWNhbWVudGUnLFxuICAgIHJlbWVtYmVyVXNlckhpbnQ6ICdWb2PDqiBwb2RlIGRlc2FiaWxpdGFyIGVzc2Egb3DDp8OjbyBubyBtZW51IGRvIHNpc3RlbWEnLFxuICAgIHN1Ym1pdExhYmVsOiAnRW50cmFyJyxcbiAgICBzdWJtaXR0ZWRMYWJlbDogJ0NhcnJlZ2FuZG8uLi4nLFxuICAgIGZvcmdvdFBhc3N3b3JkOiAnRXNxdWVjZXUgc3VhIHNlbmhhPycsXG4gICAgaGlnaGxpZ2h0SW5mbzogJycsXG4gICAgcmVnaXN0ZXJVcmw6ICdOb3ZvIHJlZ2lzdHJvJyxcbiAgICB0aXRsZVBvcG92ZXI6ICdPcGEhJyxcbiAgICBmb3Jnb3RZb3VyUGFzc3dvcmQ6ICdFc3F1ZWNldSBzdWEgc2VuaGE/JyxcbiAgICBpZllvdVRyeUhhcmRlcjogJ1NlIHRlbnRhciBtYWlzICcsXG4gICAgYXR0ZW1wdHM6ICd7MH0gdmV6KGVzKSAnLFxuICAgIHlvdXJVc2VyV2lsbEJlQmxvY2tlZDogJ3NlbSBzdWNlc3NvIHNldSB1c3XDoXJpbyBzZXLDoSBibG9xdWVhZG8gZSB2b2PDqiBmaWNhIDI0IGhvcmFzIHNlbSBwb2RlciBhY2Vzc2FyIDooJyxcbiAgICBjcmVhdGVBTmV3UGFzc3dvcmROb3c6ICdNZWxob3IgY3JpYXIgdW1hIHNlbmhhIG5vdmEgYWdvcmEhIFZvY8OqIHZhaSBwb2RlciBlbnRyYXIgbm8gc2lzdGVtYSBsb2dvIGVtIHNlZ3VpZGEuJyxcbiAgICBpRm9yZ290TXlQYXNzd29yZDogJ0VzcXVlY2kgbWluaGEgc2VuaGEnXG4gIH0sXG4gIHJ1OiA8UG9QYWdlTG9naW5MaXRlcmFscz57XG4gICAgdGl0bGU6ICfQlNC+0LHRgNC+INC/0L7QttCw0LvQvtCy0LDRgtGMIScsXG4gICAgbG9naW5FcnJvclBhdHRlcm46ICfQndC10LLQtdGA0L3Ri9C5INC70L7Qs9C40L0nLFxuICAgIGxvZ2luSGludDogYNCS0LDRiCDQu9C+0LPQuNC9INCx0YvQuyDQv9GA0LXQtNC+0YHRgtCw0LLQu9C10L0g0LLQsNC8INCyINC/0LXRgNCy0YvQuSDQtNC10L3RjC5cbiAgICDQldGB0LvQuCDRgyDQstCw0YEg0L3QtdGCINGN0YLQvtC5INC40L3RhNC+0YDQvNCw0YbQuNC4LCDQvtCx0YDQsNGC0LjRgtC10YHRjCDQsiDRgdC70YPQttCx0YMg0L/QvtC00LTQtdGA0LbQutC4YCxcbiAgICBsb2dpblBsYWNlaG9sZGVyOiAn0JLRgdGC0LDQstGM0YLQtSDRgdCy0L7QuSDQsNC00YDQtdGBINGN0LvQtdC60YLRgNC+0L3QvdC+0Lkg0L/QvtGH0YLRiycsXG4gICAgcGFzc3dvcmRFcnJvclBhdHRlcm46ICfQndC10LLQtdGA0L3Ri9C5INC/0LDRgNC+0LvRjCcsXG4gICAgcGFzc3dvcmRQbGFjZWhvbGRlcjogJ9CS0LLQtdC00LjRgtC1INGB0LLQvtC5INC/0LDRgNC+0LvRjCcsXG4gICAgY3VzdG9tRmllbGRFcnJvclBhdHRlcm46ICfQndC10LLQtdGA0L3QvtC1INC30L3QsNGH0LXQvdC40LUuJyxcbiAgICBjdXN0b21GaWVsZFBsYWNlaG9sZGVyOiAn0J/QvtC20LDQu9GD0LnRgdGC0LAsINCy0LLQtdC00LjRgtC1INC30L3QsNGH0LXQvdC40LUnLFxuICAgIHJlbWVtYmVyVXNlcjogJ9CQ0LLRgtC+0LzQsNGC0LjRh9C10YHQutC40Lkg0LLRhdC+0LQnLFxuICAgIHJlbWVtYmVyVXNlckhpbnQ6ICfQktGLINC80L7QttC10YLQtSDQvtGC0LrQu9GO0YfQuNGC0Ywg0Y3RgtGDINC+0L/RhtC40Y4g0LIg0LrQvtC90YTQuNCz0YPRgNCw0YbQuNC4INGB0LjRgdGC0LXQvNGLJyxcbiAgICBzdWJtaXRMYWJlbDogJ9CS0L7QudGC0LgnLFxuICAgIHN1Ym1pdHRlZExhYmVsOiAnM9Cw0LPRgNGD0LfQutCwLi4uJyxcbiAgICBmb3Jnb3RQYXNzd29yZDogJ9CX0LDQsdGL0LvQuCDQv9Cw0YDQvtC70Yw/JyxcbiAgICBoaWdobGlnaHRJbmZvOiAnJyxcbiAgICByZWdpc3RlclVybDogJ9Cd0L7QstGL0Lkg0YDQtdCz0LjRgdGC0YAnLFxuICAgIHRpdGxlUG9wb3ZlcjogJ9Ce0LkhJyxcbiAgICBmb3Jnb3RZb3VyUGFzc3dvcmQ6ICfQl9Cw0LHRi9C70Lgg0L/QsNGA0L7Qu9GMPycsXG4gICAgaWZZb3VUcnlIYXJkZXI6ICfQldGB0LvQuCDQstGLINCx0LXQt9GD0YHQv9C10YjQvdC+INC/0L7Qv9GL0YLQsNC10YLQtdGB0Ywg0LLQvtC50YLQuCDQtdGJ0LUgJyxcbiAgICBhdHRlbXB0czogJ3swfSDRgNCw0Lco0LApICcsXG4gICAgeW91clVzZXJXaWxsQmVCbG9ja2VkOiAn0JLQsNGIINC/0L7Qu9GM0LfQvtCy0LDRgtC10LvRjCDQsdGD0LTQtdGCINC30LDQsdC70L7QutC40YDQvtCy0LDQvSwg0Lgg0JLRiyDQvtGB0YLQsNC90LXRgtC10YHRjCDQvdCwIDI0INGH0LDRgdCwINCx0LXQtyDQstC+0LfQvNC+0LbQvdC+0YHRgtC4INC00L7RgdGC0YPQv9CwIDooJyxcbiAgICBjcmVhdGVBTmV3UGFzc3dvcmROb3c6ICfQm9GD0YfRiNC1INGB0L7Qt9C00LDQudGC0LUg0L3QvtCy0YvQuSDQv9Cw0YDQvtC70Ywg0YHQtdC50YfQsNGBIcKg0JLRiyDRgdC80L7QttC10YLQtSDRgdGA0LDQt9GDINCy0L7QudGC0Lgg0LIg0YHQuNGB0YLQtdC80YMuJyxcbiAgICBpRm9yZ290TXlQYXNzd29yZDogJ9CvINC30LDQsdGL0Lsg0YHQstC+0Lkg0L/QsNGA0L7Qu9GMJ1xuICB9XG59O1xuXG5leHBvcnQgY29uc3QgcG9QYWdlTG9naW5MaXRlcmFsSW4gPSB7XG4gIGVuOiAnaW4nLFxuICBlczogJ2VuJyxcbiAgcHQ6ICdlbScsXG4gIHJ1OiAn0LInXG59O1xuXG5leHBvcnQgY29uc3QgcG9QYWdlTG9naW5MaXRlcmFsVG8gPSB7XG4gIGVuOiAndG8nLFxuICBlczogJ2FsJyxcbiAgcHQ6ICdhbycsXG4gIHJ1OiAn0LonXG59O1xuXG4vKipcbiAqIEBkZXNjcmlwdGlvblxuICpcbiAqIE8gY29tcG9uZW50ZSBgcG8tcGFnZS1sb2dpbmAgw6kgdXRpbGl6YWRvIGNvbW8gdGVtcGxhdGUgcGFyYSB0ZWxhIGRlIGxvZ2luLlxuICogQ29tIGVsZSDDqSBwb3Nzw612ZWwgZGVmaW5pcm1vcyB2YWxvcmVzIHBhcmEgdXN1w6FyaW8sIHNlbmhhIGUgZGVmaW5pciBhw6fDtWVzIHBhcmEgcmVjdXBlcmHDp8OjbyBkZSBzZW5oYSBlIGdyYXZhw6fDo28gZGUgZGFkb3MgZG8gdXN1w6FyaW8uXG4gKiBUYW1iw6ltIMOpIHBvc3PDrXZlbCBpbnNlcmlyIHVtYSBpbWFnZW0gZW0gY29uanVudG8gY29tIHVtIHRleHRvIGRlIGRlc3RhcXVlLlxuICpcbiAqXG4gKiBBIHByb3ByaWVkYWRlIGBwLWF1dGhlbnRpY2F0aW9uLXVybGAgYXV0b21hdGl6YSBhIHJvdGluYSBkbyBjb21wb25lbnRlIGUgc2ltcGxpZmljYSBvIHByb2Nlc3NvIHBhcmEgYXV0ZW50aWNhw6fDo28gZG8gdXN1w6FyaW8sIGJhc3RhbmRvXG4gKiBkZWZpbmlyIHVtYSB1cmwgcGFyYSByZXF1aXNpw6fDo28gZGEgYXV0ZW50aWNhw6fDo28uIEEgZmxleGliaWxpZGFkZSBlIHByYXRpY2lkYWRlIHBvZGVtIGNoZWdhciBhIHVtIG7DrXZlbCBlbSBxdWUgbyBkZXNlbnZvbHZpbWVudG9cbiAqIGRhIGFwbGljYcOnw6NvIG5vICpjbGllbnQgc2lkZSogw6kgZGVzcHJvdmlkYSBkZSBxdWFscXVlciBjw7NkaWdvLWZvbnRlIHJlbGFjaW9uYWRvIMOgIHJvdGluYSBkZSBsb2dpbiBkZSB1c3XDoXJpby5cbiAqIFNldSBkZXRhbGhhbWVudG8gcGFyYSB1c28gcG9kZSBzZXIgdmlzdG8gbG9nbyBhYmFpeG8gZW0gKnByb3ByaWVkYWRlcyouXG4gKiBDYXNvIGp1bGd1ZSBuZWNlc3PDoXJpbywgcG9kZS1zZSB0YW1iw6ltIGRlZmluaXIgbWFudWFsbWVudGUgYSByb3RpbmEgZG8gY29tcG9uZW50ZS5cbiAqXG4gKlxuICogUGFyYSBxdWUgYXMgaW1hZ2VucyBzZWphbSBleGliaWRhcyBjb3JyZXRhbWVudGUsIMOpIG5lY2Vzc8OhcmlvIGluY2x1aXIgbyBjYW1pbmhvIGRlbGFzIGFvIHByb2pldG8uIFBhcmEgaXNzbywgZWRpdGVcbiAqIG8gKmFzc2V0cyogbm8gYXJxdWl2byAqKmFuZ3VsYXIuanNvbioqIGRhIGFwbGljYcOnw6NvIG5hIHNlZ3VpbnRlIG9yZGVtOlxuICogYGBgXG4gKiAgIFwiYXNzZXRzXCI6IFtcbiAqICAgICBcInNyYy9hc3NldHNcIixcbiAqICAgICBcInNyYy9mYXZpY29uLmljb1wiLFxuICogICAgIHtcbiAqICAgICAgIFwiZ2xvYlwiOiBcIioqXFwvKlwiLFxuICogICAgICAgXCJpbnB1dFwiOiBcIm5vZGVfbW9kdWxlcy9AcG8tdWkvc3R5bGUvaW1hZ2VzXCIsXG4gKiAgICAgICBcIm91dHB1dFwiOiBcImFzc2V0cy9pbWFnZXNcIlxuICogICAgIH1cbiAqICAgXVxuICogYGBgXG4gKi9cbkBEaXJlY3RpdmUoKVxuZXhwb3J0IGFic3RyYWN0IGNsYXNzIFBvUGFnZUxvZ2luQmFzZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uRGVzdHJveSB7XG4gIGFsbExvZ2luRXJyb3JzOiBBcnJheTxzdHJpbmc+ID0gW107XG4gIGFsbFBhc3N3b3JkRXJyb3JzOiBBcnJheTxzdHJpbmc+ID0gW107XG4gIGN1c3RvbUZpZWxkT2JqZWN0OiBQb1BhZ2VMb2dpbkN1c3RvbUZpZWxkO1xuICBjdXN0b21GaWVsZFR5cGU6IHN0cmluZztcbiAgbG9naW5TdWJzY3JpcHRpb246IFN1YnNjcmlwdGlvbjtcbiAgcGFzc3dvcmQ6IHN0cmluZztcbiAgcmVtZW1iZXJVc2VyOiBib29sZWFuID0gZmFsc2U7XG4gIHNlbGVjdGVkTGFuZ3VhZ2U6IHN0cmluZztcbiAgc2hvd0V4Y2VlZGVkQXR0ZW1wdHNXYXJuaW5nID0gZmFsc2U7XG5cbiAgcHJpdmF0ZSBfYXV0aGVudGljYXRpb25UeXBlOiBQb1BhZ2VMb2dpbkF1dGhlbnRpY2F0aW9uVHlwZSA9IFBvUGFnZUxvZ2luQXV0aGVudGljYXRpb25UeXBlLkJhc2ljO1xuICBwcml2YXRlIF9hdXRoZW50aWNhdGlvblVybDogc3RyaW5nO1xuICBwcml2YXRlIF9ibG9ja2VkVXJsOiBzdHJpbmc7XG4gIHByaXZhdGUgX2NvbnRhY3RFbWFpbDogc3RyaW5nO1xuICBwcml2YXRlIF9jdXN0b21GaWVsZDogc3RyaW5nIHwgUG9QYWdlTG9naW5DdXN0b21GaWVsZDtcbiAgcHJpdmF0ZSBfZW52aXJvbm1lbnQ/OiBzdHJpbmc7XG4gIHByaXZhdGUgX2V4Y2VlZGVkQXR0ZW1wdHNXYXJuaW5nPzogbnVtYmVyO1xuICBwcml2YXRlIF9oaWRlUmVtZW1iZXJVc2VyOiBib29sZWFuID0gZmFsc2U7XG4gIHByaXZhdGUgX2xpdGVyYWxzOiBQb1BhZ2VMb2dpbkxpdGVyYWxzO1xuICBwcml2YXRlIF9sb2FkaW5nPzogYm9vbGVhbiA9IGZhbHNlO1xuICBwcml2YXRlIF9sb2dpbjogc3RyaW5nO1xuICBwcml2YXRlIF9sb2dpbkVycm9yczogQXJyYXk8c3RyaW5nPiA9IFtdO1xuICBwcml2YXRlIF9wYXNzd29yZEVycm9yczogQXJyYXk8c3RyaW5nPiA9IFtdO1xuICBwcml2YXRlIF9wcm9kdWN0TmFtZTogc3RyaW5nO1xuICBwcml2YXRlIF9yZWNvdmVyeTogc3RyaW5nIHwgUG9QYWdlTG9naW5SZWNvdmVyeSB8IEZ1bmN0aW9uO1xuICBwcml2YXRlIF9yZWdpc3RlclVybDogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBAb3B0aW9uYWxcbiAgICpcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqXG4gICAqIEFvIGluZm9ybWFyIHVtIHZhbG9yIGRvIHRpcG8gYHN0cmluZ2AsIG8gbWVzbW8gc2Vyw6EgYXBsaWNhZG8gY29tbyBhIGNoYXZlIGRvIGNhbXBvIGN1c3RvbWl6YWRvIGUgdXRpbGl6YXLDoVxuICAgKiBvcyB2YWxvcmVzIHBhZHLDtWVzIGNvbnRpZG9zIG5hIHByb3ByaWVkYWRlIGBsaXRlcmFsc2AgY29tbyBgY3VzdG9tRmllbGRFcnJvclBhdHRlcm5gIGUgYGN1c3RvbUZpZWxkUGxhY2Vob2xkZXJgLlxuICAgKlxuICAgKiBFeGlzdGUgYSBwb3NzaWJpbGlkYWRlIGRlIGluZm9ybWFyIHVtIG9iamV0byBxdWUgc2VndWUgYSBkZWZpbmnDp8OjbyBkYSBpbnRlcmZhY2UgYFBvUGFnZUxvZ2luQ3VzdG9tRmllbGRgLCBvbmRlXG4gICAqIGF0cmF2w6lzIGRvcyBwYXLDom1ldHJvcyBlbnZpYWRvcyBwb2RlIGdlcmFyIHVtIGBwby1pbnB1dGAsIGBwby1jb21ib2AgZXNwZWNpZmljYW1lbnRlIHBhcmEgc2VydmnDp29zXG4gICAqIG91IGBwby1zZWxlY3RgIHBhcmEgdmFsb3JlcyBmaXhvcy5cbiAgICpcbiAgICogQWJhaXhvIHNlZ3VlbSBvcyBleGVtcGxvcyBkZSBjYWRhIHRpcG8gZGUgY2FtcG8uXG4gICAqXG4gICAqIGBwby1pbnB1dGA6XG4gICAqXG4gICAqIGBgYFxuICAgKiB7XG4gICAqICAgcHJvcGVydHk6ICdkb21haW4nLFxuICAgKiAgIHZhbHVlOiAnanYwMScsXG4gICAqICAgcGxhY2Vob2xkZXI6ICdFbnRlciB5b3VyIGRvbWFpbicsXG4gICAqICAgcGF0dGVybjogJ1thLXpdJyxcbiAgICogICBlcnJvclBhdHRlcm46ICdJbnZhbGlkIHZhbHVlJ1xuICAgKiB9XG4gICAqIGBgYFxuICAgKlxuICAgKiBgcG8tY29tYm9gOlxuICAgKlxuICAgKiBgYGBcbiAgICoge1xuICAgKiAgIHByb3BlcnR5OiAnZG9tYWluJyxcbiAgICogICB2YWx1ZTogJ2p2MDEnLFxuICAgKiAgIHBsYWNlaG9sZGVyOiAnRW50ZXIgeW91ciBkb21haW4nLFxuICAgKiAgIHVybDogJ2h0dHBzOi8vcG8tdWkuaW8vc2FtcGxlL2FwaS9jb21ib09wdGlvbi9kb21haW5zJyxcbiAgICogICBmaWVsZFZhbHVlOiAnbmlja25hbWUnXG4gICAqIH1cbiAgICogYGBgXG4gICAqXG4gICAqIGBwby1zZWxlY3RgOlxuICAgKlxuICAgKiBgYGBcbiAgICoge1xuICAgKiAgIHByb3BlcnR5OiAnZG9tYWluJyxcbiAgICogICB2YWx1ZTogJ2p2MDEnLFxuICAgKiAgIHBsYWNlaG9sZGVyOiAnRW50ZXIgeW91ciBkb21haW4nLFxuICAgKiAgIG9wdGlvbnM6IFt7bGFiZWw6ICdEb21haW4gMScsIHZhbHVlOiAnMSd9LCB7bGFiZWw6ICdEb21haW4gMicsIHZhbHVlOiAnMid9XVxuICAgKiB9XG4gICAqIGBgYFxuICAgKlxuICAgKiBDYXNvIG8gY3VzdG9tRmllbGQgcG9zc3VhIG9wdGlvbnMsIHVybCBlIGZpZWxkVmFsdWUgcHJlZW5jaGlkb3MsIHNlcsOhIHByaW9yaXphZG8gbyBwby1zZWxlY3RcbiAgICogdXRpbGl6YW5kbyBvIG9wdGlvbnMuXG4gICAqXG4gICAqL1xuICBASW5wdXQoJ3AtY3VzdG9tLWZpZWxkJykgc2V0IGN1c3RvbUZpZWxkKHZhbHVlOiBzdHJpbmcgfCBQb1BhZ2VMb2dpbkN1c3RvbUZpZWxkKSB7XG4gICAgaWYgKHZhbHVlKSB7XG4gICAgICBpZiAoaXNUeXBlb2YodmFsdWUsICdzdHJpbmcnKSkge1xuICAgICAgICB0aGlzLmN1c3RvbUZpZWxkVHlwZSA9ICdpbnB1dCc7XG4gICAgICAgIHRoaXMuX2N1c3RvbUZpZWxkID0gdmFsdWU7XG4gICAgICAgIHRoaXMuY3VzdG9tRmllbGRPYmplY3QgPSB0aGlzLmdldERlZmF1bHRDdXN0b21GaWVsZE9iamVjdCh2YWx1ZSk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgaWYgKGlzVHlwZW9mKHZhbHVlLCAnb2JqZWN0JykgJiYgIUFycmF5LmlzQXJyYXkodmFsdWUpICYmIHZhbHVlWydwcm9wZXJ0eSddKSB7XG4gICAgICAgIHRoaXMuX2N1c3RvbUZpZWxkID0gdmFsdWU7XG4gICAgICAgIHRoaXMuY3VzdG9tRmllbGRPYmplY3QgPSA8UG9QYWdlTG9naW5DdXN0b21GaWVsZD52YWx1ZTtcblxuICAgICAgICBpZiAoIXRoaXMuY3VzdG9tRmllbGRPYmplY3Qub3B0aW9ucyAmJiAhdGhpcy5jdXN0b21GaWVsZE9iamVjdC51cmwpIHtcbiAgICAgICAgICB0aGlzLmN1c3RvbUZpZWxkVHlwZSA9ICdpbnB1dCc7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhpcy5jdXN0b21GaWVsZFR5cGUgPSB0aGlzLmN1c3RvbUZpZWxkT2JqZWN0Lm9wdGlvbnMgPyAnc2VsZWN0JyA6ICdjb21ibyc7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgfVxuXG4gICAgdGhpcy5fY3VzdG9tRmllbGQgPSB1bmRlZmluZWQ7XG4gICAgdGhpcy5jdXN0b21GaWVsZE9iamVjdCA9IHVuZGVmaW5lZDtcbiAgfVxuXG4gIGdldCBjdXN0b21GaWVsZCgpOiBzdHJpbmcgfCBQb1BhZ2VMb2dpbkN1c3RvbUZpZWxkIHtcbiAgICByZXR1cm4gdGhpcy5fY3VzdG9tRmllbGQ7XG4gIH1cblxuICAvKipcbiAgICogTyBgcC1iYWNrZ3JvdW5kYCBwZXJtaXRlIGluc2VyaXIgdW1hIGltYWdlbSBkZSBkZXN0YXF1ZSBhbyBsYWRvIGRpcmVpdG8gZG8gZm9ybXVsw6FyaW8gZGUgbG9naW4sIGNhc28gYSBwcm9wcmllZGFkZVxuICAgKiBuw6NvIHNlamEgcHJlZW5jaGlkYSBvIGZvcm11bMOhcmlvIHNlcsOhIGNlbnRyYWxpemFkbyBubyBlc3Bhw6dvIGRpc3BvbsOtdmVsLlxuICAgKlxuICAgKiBBIGZvbnRlIGRhIGltYWdlbSBwb2RlIHNlciBkZSB1bSBjYW1pbmhvIGxvY2FsIG91IHVtYSB1cmwgZGUgdW0gc2Vydmlkb3IgZXh0ZXJuby5cbiAgICpcbiAgICogQWzDqW0gZGEgaW1hZ2VtLCDDqSBwb3Nzw612ZWwgYWRpY2lvbmFyIHVtIHRleHRvIGluZm9ybWF0aXZvIHBvciBjaW1hIGRhIGltYWdlbSBkYSBpbWFnZW0gZGUgZGVzdGFxdWUsIHBhcmEgaXNzbyBpbmZvcm1lXG4gICAqIHVtIHZhbG9yIHBhcmEgYSBsaXRlcmFsIGBoaWdobGlnaHRJbmZvYC5cbiAgICpcbiAgICogPiBWZWphIG1haXMgc29icmUgYXMgbGl0ZXJhaXMgbmEgcHJvcHJpZWRhZGUgYHAtbGl0ZXJhbHNgLlxuICAgKlxuICAgKiBFeGVtcGxvcyBkZSB2YWxvcmVzIHbDoWxpZG9zOlxuICAgKiAtICoqbG9jYWwqKjogYC4vYXNzZXRzL2ltYWdlcy9sb2dpbi1iYWNrZ3JvdW5kLnBuZ2BcbiAgICogLSAqKnVybCBleHRlcm5hKio6IGBodHRwczovL3BvLXVpLmlvL2Fzc2V0cy9pbWFnZXMvbG9naW4tYmFja2dyb3VuZC5wbmdgXG4gICAqXG4gICAqID4gRXNzYSBwcm9wcmllZGFkZSDDqSBpZ25vcmFkYSBwYXJhIGFwbGljYcOnw7VlcyBtb2JpbGUuXG4gICAqL1xuICBASW5wdXQoJ3AtYmFja2dyb3VuZCcpIGJhY2tncm91bmQ/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIEBvcHRpb25hbFxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICpcbiAgICogUGVyc29uYWxpemEgbyBlLW1haWwgcXVlIMOpIGV4aWJpZG8gbmEgbWVuc2FnZW0gZGUgZGljYSBkZSBsb2dpbiBwYWRyw6NvIHBhcmEgY29udGF0byBkZSBzdXBvcnRlLlxuICAgKi9cbiAgQElucHV0KCdwLWNvbnRhY3QtZW1haWwnKSBzZXQgY29udGFjdEVtYWlsKHZhbHVlOiBzdHJpbmcpIHtcbiAgICB0aGlzLl9jb250YWN0RW1haWwgPSB2YWx1ZTtcbiAgfVxuICBnZXQgY29udGFjdEVtYWlsKCkge1xuICAgIHJldHVybiB0aGlzLl9jb250YWN0RW1haWw7XG4gIH1cblxuICAvKipcbiAgICogQG9wdGlvbmFsXG4gICAqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKlxuICAgKiBWYWxvciBjdXN0b21pemFkbyBxdWUgc3VjZWRlIG8gdMOtdHVsbyBkZSBib2FzLXZpbmRhcy5cbiAgICpcbiAgICogPiBFc3RhIHByb3ByaWVkYWRlIMOpIHNvYnJlcG9zdGEgc2UgYHAtbGl0ZXJhbHNgIGNvbnRpdmVyIHVtYSBkZWZpbmnDp8OjbyBjdXN0b21pemFkYSBwYXJhIGEgbGl0ZXJhbCBgdGl0bGVgLlxuICAgKlxuICAgKiA+IFZlamEgbWFpcyBzb2JyZSBhcyBsaXRlcmFpcyBuYSBwcm9wcmllZGFkZSBgcC1saXRlcmFsc2AuXG4gICAqXG4gICAqL1xuICBASW5wdXQoJ3AtcHJvZHVjdC1uYW1lJykgc2V0IHByb2R1Y3ROYW1lKHZhbHVlOiBzdHJpbmcpIHtcbiAgICB0aGlzLl9wcm9kdWN0TmFtZSA9IHZhbHVlO1xuICB9XG4gIGdldCBwcm9kdWN0TmFtZSgpIHtcbiAgICByZXR1cm4gdGhpcy5fcHJvZHVjdE5hbWU7XG4gIH1cblxuICAvKipcbiAgICogQG9wdGlvbmFsXG4gICAqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiBBZGljaW9uYSB1bWEgYHRhZ2AgYWJhaXhvIGRvIHTDrXR1bG8gcXVlIGVzcGVjaWZpY2EgbyBhbWJpZW50ZSBxdWUgbyB1c3XDoXJpbyBlc3TDoSBmYXplbmRvIG8gbG9naW4uXG4gICAqXG4gICAqID4gRXNzYSBwcm9wcmllZGFkZSBsaW1pdGEgbyB0ZXh0byBlbSA0MCBjYXJhY3RlcmVzLlxuICAgKi9cbiAgQElucHV0KCdwLWVudmlyb25tZW50Jykgc2V0IGVudmlyb25tZW50KGVudmlyb25tZW50OiBzdHJpbmcpIHtcbiAgICBpZiAoZW52aXJvbm1lbnQgJiYgZW52aXJvbm1lbnQubGVuZ3RoID4gcG9QYWdlTG9naW5Db250ZW50TWF4TGVuZ3RoKSB7XG4gICAgICB0aGlzLl9lbnZpcm9ubWVudCA9IGVudmlyb25tZW50LnN1YnN0cmluZygwLCBwb1BhZ2VMb2dpbkNvbnRlbnRNYXhMZW5ndGgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl9lbnZpcm9ubWVudCA9IGVudmlyb25tZW50O1xuICAgIH1cbiAgfVxuICBnZXQgZW52aXJvbm1lbnQoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2Vudmlyb25tZW50O1xuICB9XG5cbiAgLyoqXG4gICAqIEBvcHRpb25hbFxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogRXhpYmUgdW0gYXZpc28gZGUgYmxvcXVlaW8gZGUgYWNvcmRvIGNvbSBhIHF1YW50aWRhZGUgcmVzdGFudGUgZGUgdGVudGF0aXZhcy5cbiAgICogTyBhdmlzbyBzZXLDoSBleGliaWRvIHNvbWVudGUgc2UgYSBxdWFudGlkYWRlIGZvciBtYWlvciBxdWUgemVyby5cbiAgICpcbiAgICogPiBDYXNvIHRlbmhhIGFsZ3VtIHZhbG9yIGF0cmlidcOtZG8gcGFyYSBvIGF0cmlidXRvIGBwLWF1dGhlbnRpY2F0aW9uLXVybGAgZSBvIHJldG9ybm8gZGEgcmVxdWlzacOnw6NvIGVzdGl2ZXIgYXRyaWJ1aW5kbyB2YWxvclxuICAgKiBwYXJhIG8gYHAtZXhjZWVkZWQtYXR0ZW1wdHMtd2FybmluZ2AsIG8gdmFsb3IgY29uc2lkZXJhZG8gc2Vyw6EgbyBkbyByZXRvcm5vIGRhIHJlcXVpc2nDp8Ojby5cbiAgICpcbiAgICogQGRlZmF1bHQgYDBgXG4gICAqL1xuICBASW5wdXQoJ3AtZXhjZWVkZWQtYXR0ZW1wdHMtd2FybmluZycpIHNldCBleGNlZWRlZEF0dGVtcHRzV2FybmluZyh2YWx1ZTogbnVtYmVyKSB7XG4gICAgdGhpcy5fZXhjZWVkZWRBdHRlbXB0c1dhcm5pbmcgPSBjb252ZXJ0VG9JbnQodmFsdWUpO1xuICAgIHRoaXMuc2hvd0V4Y2VlZGVkQXR0ZW1wdHNXYXJuaW5nID0gdGhpcy5leGNlZWRlZEF0dGVtcHRzV2FybmluZyA+IDA7XG4gIH1cblxuICBnZXQgZXhjZWVkZWRBdHRlbXB0c1dhcm5pbmcoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy5fZXhjZWVkZWRBdHRlbXB0c1dhcm5pbmc7XG4gIH1cblxuICAvKipcbiAgICogQG9wdGlvbmFsXG4gICAqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKlxuICAgKiBFc2NvbmRlIGEgZnVuw6fDo28gXCJMZW1icmFyIHVzdcOhcmlvXCIgZG8gZm9ybXVsw6FyaW8gZGUgbG9naW4uXG4gICAqXG4gICAqIFF1YW5kbyBlc3NhIHByb3ByaWVkYWRlIMOpIHNldGFkYSBjb20gYHRydWVgIGEgcHJvcHJpZWRhZGUgYHJlbWVtYmVyVXNlcmAgZW52aWFkYSBubyBldmVudG8gYHAtbG9naW4tc3VibWl0YCBzZXLDoSBzZW1wcmVcbiAgICogYGZhbHNlYC5cbiAgICpcbiAgICogPiBWZWphIGEgcHJvcHJpZWRhZGUgYHAtbGl0ZXJhbHNgIHBhcmEgY3VzdG9taXphciBhIGxpdGVyYWwgYHJlbWVtYmVyVXNlcmAuXG4gICAqXG4gICAqIEBkZWZhdWx0IGBmYWxzZWBcbiAgICovXG4gIEBJbnB1dCgncC1oaWRlLXJlbWVtYmVyLXVzZXInKSBzZXQgaGlkZVJlbWVtYmVyVXNlcih2YWx1ZTogYm9vbGVhbikge1xuICAgIHRoaXMuX2hpZGVSZW1lbWJlclVzZXIgPSA8YW55PnZhbHVlID09PSAnJyA/IHRydWUgOiBjb252ZXJ0VG9Cb29sZWFuKHZhbHVlKTtcblxuICAgIGlmICh0aGlzLl9oaWRlUmVtZW1iZXJVc2VyKSB7XG4gICAgICB0aGlzLnJlbWVtYmVyVXNlciA9IGZhbHNlO1xuICAgIH1cbiAgfVxuICBnZXQgaGlkZVJlbWVtYmVyVXNlcigpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5faGlkZVJlbWVtYmVyVXNlcjtcbiAgfVxuXG4gIC8qKlxuICAgKiBAb3B0aW9uYWxcbiAgICpcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqXG4gICAqIE9iamV0byBjb20gYXMgbGl0ZXJhaXMgdXNhZGFzIG5vIGBwby1wYWdlLWxvZ2luYC5cbiAgICpcbiAgICogRXhpc3RlbSBkdWFzIG1hbmVpcmFzIGRlIGN1c3RvbWl6YXIgbyBjb21wb25lbnRlLCBwYXNzYW5kbyB1bSBvYmpldG8gY29tIHRvZGFzIGFzIGxpdGVyYWlzIGRpc3BvbsOtdmVpczpcbiAgICpcbiAgICogYGBgXG4gICAqICBjb25zdCBjdXN0b21MaXRlcmFsczogUG9QYWdlTG9naW5MaXRlcmFscyA9IHtcbiAgICogICAgYXR0ZW1wdHM6ICd7MH0gdmV6KGVzKSAnLFxuICAgKiAgICBjcmVhdGVBTmV3UGFzc3dvcmROb3c6ICdNZWxob3IgY3JpYXIgdW1hIHNlbmhhIG5vdmEgYWdvcmEhIFZvY8OqIHZhaSBwb2RlciBlbnRyYXIgbm8gc2lzdGVtYSBsb2dvIGVtIHNlZ3VpZGEuJyxcbiAgICogICAgZm9yZ290UGFzc3dvcmQ6ICdFc3F1ZWNldSBzdWEgc2VuaGE/JyxcbiAgICogICAgZm9yZ290WW91clBhc3N3b3JkOiAnRXNxdWVjZXUgc3VhIHNlbmhhPycsXG4gICAqICAgIGhpZ2hsaWdodEluZm86ICcnLFxuICAgKiAgICBpRm9yZ290TXlQYXNzd29yZDogJ0VzcXVlY2kgbWluaGEgc2VuaGEnLFxuICAgKiAgICBpZllvdVRyeUhhcmRlcjogJ1NlIHRlbnRhciBtYWlzICcsXG4gICAqICAgIHRpdGxlOiAnU2VqYSBiZW0tdmluZG8nLFxuICAgKiAgICBsb2dpbkVycm9yUGF0dGVybjogJ0xvZ2luIG9icmlnYXTDs3JpbycsXG4gICAqICAgIGxvZ2luSGludDogJ0Nhc28gbsOjbyBwb3NzdWEgdXN1w6FyaW8gZW50cmUgZW0gY29udGF0byBjb20gbyBzdXBvcnRlJyxcbiAgICogICAgbG9naW5MYWJlbDogJ0luc2lyYSBzZXUgdXN1w6FyaW8nLFxuICAgKiAgICBsb2dpblBsYWNlaG9sZGVyOiAnSW5zaXJhIHNldSB1c3XDoXJpbyBkZSBhY2Vzc28nLFxuICAgKiAgICBwYXNzd29yZEVycm9yUGF0dGVybjogJ1NlbmhhIG9icmlnYXTDs3JpYScsXG4gICAqICAgIHBhc3N3b3JkTGFiZWw6ICdJbnNpcmEgc3VhIHNlbmhhJyxcbiAgICogICAgcGFzc3dvcmRQbGFjZWhvbGRlcjogJ0luc2lyYSBzdWEgc2VuaGEgZGUgYWNlc3NvJyxcbiAgICogICAgY3VzdG9tRmllbGRFcnJvclBhdHRlcm46ICdDYW1wbyBjdXN0b21pemFkbyBpbnbDoWxpZG8nLFxuICAgKiAgICBjdXN0b21GaWVsZFBsYWNlaG9sZGVyOiAnUG9yIGZhdm9yIGluc2lyYSB1bSB2YWxvcicsXG4gICAqICAgIHJlZ2lzdGVyVXJsOiAnTm92byByZWdpc3RybycsXG4gICAqICAgIHJlbWVtYmVyVXNlcjogJ0xlbWJyYXIgdXN1w6FyaW8nLFxuICAgKiAgICByZW1lbWJlclVzZXJIaW50OiAnRXN0YSBvcMOnw6NvIHBvZGUgc2VyIGRlc2FiaWxpdGFkYSBuYXMgY29uZmlndXJhw6fDtWVzIGRvIHNpc3RlbWEnLFxuICAgKiAgICBzdWJtaXRMYWJlbDogJ0FjZXNzYXIgc2lzdGVtYScsXG4gICAqICAgIHN1Ym1pdHRlZExhYmVsOiAnQ2FycmVnYW5kby4uLicsXG4gICAqICAgIHRpdGxlUG9wb3ZlcjogJ09wYSEnLFxuICAgKiAgICB5b3VyVXNlcldpbGxCZUJsb2NrZWQ6ICdzZW0gc3VjZXNzbyBzZXUgdXN1w6FyaW8gc2Vyw6EgYmxvcXVlYWRvIGUgdm9jw6ogZmljYSAyNCBob3JhcyBzZW0gcG9kZXIgYWNlc3NhciA6KCdcbiAgICogIH07XG4gICAqIGBgYFxuICAgKlxuICAgKiBPdSBwYXNzYW5kbyBhcGVuYXMgYXMgbGl0ZXJhaXMgcXVlIGRlc2VqYSBjdXN0b21pemFyOlxuICAgKlxuICAgKiBgYGBcbiAgICogIGNvbnN0IGN1c3RvbUxpdGVyYWxzOiBQb1BhZ2VMb2dpbkxpdGVyYWxzID0ge1xuICAgKiAgICBsb2dpblBsYWNlaG9sZGVyOiAnSW5zaXJhIHNldSB1c3XDoXJpbyBkZSBhY2Vzc28nLFxuICAgKiAgICBwYXNzd29yZFBsYWNlaG9sZGVyOiAnSW5zaXJhIHN1YSBzZW5oYSBkZSBhY2Vzc28nLFxuICAgKiAgICBzdWJtaXRMYWJlbDogJ0FjZXNzYXIgc2lzdGVtYSdcbiAgICogIH07XG4gICAqIGBgYFxuICAgKlxuICAgKiBFIHBhcmEgY2FycmVnYXIgYXMgbGl0ZXJhaXMgY3VzdG9taXphZGFzLCBiYXN0YSBhcGVuYXMgcGFzc2FyIG8gb2JqZXRvIHBhcmEgbyBjb21wb25lbnRlLlxuICAgKlxuICAgKiBgYGBcbiAgICogPHBvLXBhZ2UtbG9naW5cbiAgICogICBbcC1saXRlcmFsc109XCJjdXN0b21MaXRlcmFsc1wiPlxuICAgKiA8L3BvLXBhZ2UtbG9naW4+XG4gICAqIGBgYFxuICAgKlxuICAgKiAgPiBPIG9iamV0byBwYWRyw6NvIGRlIGxpdGVyYWlzIHNlcsOhIHRyYWR1emlkbyBkZSBhY29yZG8gY29tIG8gaWRpb21hIGRvIGJyb3dzZXIgKHB0LCBlbiwgZXMpLlxuICAgKiAgPiDDiSB0YW1iw6ltIHBvc3PDrXZlbCBhbHRlcm5hciBvIG9iamV0byBwYWRyw6NvIGRlIGxpdGVyYWlzIGF0cmF2w6lzIGRvIHNlbGV0b3IgZGUgaWRpb21hcyBsb2NhbGl6YWRvIG5hIHBhcnRlIGluZmVyaW9yIGRvIHRlbXBsYXRlLFxuICAgKiBuZXNzZSBjYXNvLCBow6EgdGFtYsOpbSBhIG9ww6fDo28gZG8gaWRpb21hIHJ1c3NvLlxuICAgKi9cbiAgQElucHV0KCdwLWxpdGVyYWxzJykgc2V0IGxpdGVyYWxzKHZhbHVlOiBQb1BhZ2VMb2dpbkxpdGVyYWxzKSB7XG4gICAgdGhpcy5fbGl0ZXJhbHMgPSB2YWx1ZTtcbiAgfVxuXG4gIGdldCBsaXRlcmFscygpIHtcbiAgICByZXR1cm4gdGhpcy5fbGl0ZXJhbHM7XG4gIH1cblxuICAvKipcbiAgICogQG9wdGlvbmFsXG4gICAqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKlxuICAgKiBIYWJpbGl0YSB1bSBlc3RhZG8gZGUgY2FycmVnYW1lbnRvIGFvIGJvdMOjbyBkZSAqbG9naW4qLlxuICAgKlxuICAgKiA+IMOJIG5lY2Vzc8OhcmlvIGF0cmlidWlyIGB0cnVlYCDDoCBlc3RhIHByb3ByaWVkYWRlIG5hIGZ1bsOnw6NvIGRlZmluaWRhIGVtIGBwLWxvZ2luLXN1Ym1pdGAuXG4gICAqXG4gICAqIEBkZWZhdWx0IGBmYWxzZWBcbiAgICovXG4gIEBJbnB1dCgncC1sb2FkaW5nJykgc2V0IGxvYWRpbmcodmFsdWU6IGJvb2xlYW4pIHtcbiAgICB0aGlzLl9sb2FkaW5nID0gY29udmVydFRvQm9vbGVhbih2YWx1ZSk7XG4gIH1cblxuICBnZXQgbG9hZGluZygpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5fbG9hZGluZztcbiAgfVxuXG4gIC8qKlxuICAgKiBAb3B0aW9uYWxcbiAgICpcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqXG4gICAqIFZhbG9yIGRvIG1vZGVsbyBkbyBjYW1wbyBkZSBsb2dpbi5cbiAgICovXG4gIEBJbnB1dCgncC1sb2dpbicpIHNldCBsb2dpbih2YWx1ZTogc3RyaW5nKSB7XG4gICAgdGhpcy5fbG9naW4gPSB2YWx1ZTtcblxuICAgIGlmICghdGhpcy5hdXRoZW50aWNhdGlvblVybCkge1xuICAgICAgdGhpcy5sb2dpbkNoYW5nZS5lbWl0KHRoaXMuX2xvZ2luKTtcbiAgICB9XG4gIH1cblxuICBnZXQgbG9naW4oKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5fbG9naW47XG4gIH1cblxuICAvKipcbiAgICogQG9wdGlvbmFsXG4gICAqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKlxuICAgKiBDYW1pbmhvIHBhcmEgYSBsb2dvbWFyY2EgbG9jYWxpemFkYSBuYSBwYXJ0ZSBzdXBlcmlvci5cbiAgICpcbiAgICogPiBDYXNvIHNlamEgaW5kZWZpbmlkYSBvIGVzcGHDp28gc2UgbWFudMOpbSBwcmVzZXJ2YWRvIHBvcsOpbSB2YXppby5cbiAgICovXG4gIEBJbnB1dCgncC1sb2dvJykgbG9nbz86IHN0cmluZztcblxuICAvKipcbiAgICogQG9wdGlvbmFsXG4gICAqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKlxuICAgKiBFeHByZXNzw6NvIHJlZ3VsYXIgcGFyYSB2YWxpZGFyIG8gY2FtcG8gZGUgbG9naW4sIGNhc28gYSBleHByZXNzw6NvIG7Do28gc2VqYSBhdGVudGlkYSwgYSBsaXRlcmFsIGBsb2dpbkVycm9yUGF0dGVybmBcbiAgICogc2Vyw6EgZXhpYmlkYS5cbiAgICpcbiAgICogRXhlbXBsb3MgZGUgdmFsb3JlcyB2w6FsaWRvczpcbiAgICogLSBlbWFpbDogYFtleHByZXNzYW8tcmVndWxhci1lbWFpbF1gXG4gICAqIC0gY3BmOiBgW2V4cHJlc3Nhby1yZWd1bGFyLWNwZl1gXG4gICAqXG4gICAqID4gVmVqYSBhIHByb3ByaWVkYWRlIGBwLWxpdGVyYWxzYCBwYXJhIGN1c3RvbWl6YXIgYSBsaXRlcmFsIGBsb2dpbkVycm9yUGF0dGVybmAuXG4gICAqL1xuICBASW5wdXQoJ3AtbG9naW4tcGF0dGVybicpIGxvZ2luUGF0dGVybj86IHN0cmluZztcblxuICAvKipcbiAgICogQG9wdGlvbmFsXG4gICAqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKlxuICAgKiBBdHJpYnV0byBxdWUgcmVjZWJlIHVtYSBsaXN0YSBkZSBlcnJvcyBlIGV4aWJlIGFiYWl4byBkbyBjYW1wbyBkZSBsb2dpbi5cbiAgICovXG4gIEBJbnB1dCgncC1sb2dpbi1lcnJvcnMnKSBzZXQgbG9naW5FcnJvcnModmFsdWU6IEFycmF5PHN0cmluZz4pIHtcbiAgICB0aGlzLl9sb2dpbkVycm9ycyA9IHZhbHVlIHx8IFtdO1xuICAgIHRoaXMuc2V0TG9naW5FcnJvcnModGhpcy5fbG9naW5FcnJvcnMpO1xuICB9XG4gIGdldCBsb2dpbkVycm9ycygpIHtcbiAgICByZXR1cm4gdGhpcy5fbG9naW5FcnJvcnM7XG4gIH1cblxuICAvKipcbiAgICogQG9wdGlvbmFsXG4gICAqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKlxuICAgKiBBdHJpYnV0byBxdWUgcmVjZWJlIHVtYSBsaXN0YSBkZSBlcnJvcyBlIGV4aWJlIGFiYWl4byBkbyBjYW1wbyBkZSBwYXNzd29yZC5cbiAgICovXG4gIEBJbnB1dCgncC1wYXNzd29yZC1lcnJvcnMnKSBzZXQgcGFzc3dvcmRFcnJvcnModmFsdWU6IEFycmF5PHN0cmluZz4pIHtcbiAgICB0aGlzLl9wYXNzd29yZEVycm9ycyA9IHZhbHVlIHx8IFtdO1xuICAgIHRoaXMuc2V0UGFzc3dvcmRFcnJvcnModGhpcy5fcGFzc3dvcmRFcnJvcnMpO1xuICB9XG4gIGdldCBwYXNzd29yZEVycm9ycygpIHtcbiAgICByZXR1cm4gdGhpcy5fcGFzc3dvcmRFcnJvcnM7XG4gIH1cblxuICAvKipcbiAgICogQG9wdGlvbmFsXG4gICAqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKlxuICAgKiBFeHByZXNzw6NvIHJlZ3VsYXIgcGFyYSB2YWxpZGFyIG8gY2FtcG8gZGUgcGFzc3dvcmQsIGNhc28gYSBleHByZXNzw6NvIG7Do28gc2VqYSBhdGVudGlkYSwgYSBsaXRlcmFsIGBwYXNzd29yZEVycm9yUGF0dGVybmBcbiAgICogc2Vyw6EgZXhpYmlkYS5cbiAgICpcbiAgICogRXhlbXBsb3MgZGUgdmFsb3JlcyB2w6FsaWRvczpcbiAgICogLSBBcGVuYXMgbsO6bWVyb3M6IGBcXGQ/YFxuICAgKiAtIExldHJhcyBtw61udXNjdWxhczogYFxcej9gXG4gICAqXG4gICAqID4gVmVqYSBhIHByb3ByaWVkYWRlIGBwLWxpdGVyYWxzYCBwYXJhIGN1c3RvbWl6YXIgYSBsaXRlcmFsIGBwYXNzd29yZEVycm9yUGF0dGVybmAuXG4gICAqL1xuICBASW5wdXQoJ3AtcGFzc3dvcmQtcGF0dGVybicpIHBhc3N3b3JkUGF0dGVybj86IHN0cmluZztcblxuICAvKipcbiAgICogQG9wdGlvbmFsXG4gICAqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKlxuICAgKiBFeGliZSB1bSBsaW5rIGFiYWl4byBkbyBmb3JtdWzDoXJpbyBkZSBsb2dpbiBwYXJhIHF1ZSBvcyB1c3XDoXJpb3MgZGEgYXBsaWNhw6fDo28gZmHDp2FtIGEgcmVjdXBlcmHDp8OjbyBkb3MgZGFkb3MgZGUgYXV0ZW50aWNhw6fDo28uXG4gICAqXG4gICAqIEEgcHJvcHJpZWRhZGUgYWNlaXRhIG9zIHNlZ3VpbnRlcyB0aXBvczpcbiAgICpcbiAgICogLSAqKlN0cmluZyoqOiBpbmZvcm1lIHVtYSB1cmwgZXh0ZXJuYSBvdSB1bWEgcm90YSB2w6FsaWRhO1xuICAgKiAtICoqRnVuY3Rpb24qKjogcG9kZS1zZSBjdXN0b21pemFyIGEgYcOnw6NvLiBQYXJhIGVzdGEgcG9zc2lsaWRhZGUgYmFzdGEgYXRyaWJ1aXI6XG4gICAqIGBgYFxuICAgKiA8cG8tcGFnZS1sb2dpbj5cbiAgICogICBbcmVjb3ZlcnldPVwidGhpcy5teVJlY292ZXJ5LmJpbmQodGhpcylcIj5cbiAgICogPC9wby1wYWdlLWxvZ2luPlxuICAgKiBgYGBcbiAgICpcbiAgICogLSAqKlBvUGFnZUxvZ2luUmVjb3ZlcnkqKjogY3JpYS1zZSB2w61uY3VsbyBhdXRvbcOhdGljbyBjb20gbyB0ZW1wbGF0ZSAqKnBvLW1vZGFsLXBhc3N3b3JkLXJlY292ZXJ5KiouXG4gICAqICAgTyBvYmpldG8gZGV2ZSBjb250ZXIgYSAqKnVybCoqIHBhcmEgcmVxdWlzacOnw6NvIGRvcyByZWN1cnNvcyBlIHBvZGUtc2UgZGVmaW5pciBvICoqdGlwbyoqIGRlIG1vZGFsIHBhcmEgcmVjdXBlcmHDp8OjbyBkZSBzZW5oYSxcbiAgICogICAqKmVtYWlsKiogcGFyYSBjb250YXRvIGUgKiptw6FzY2FyYSoqIGRvIGNhbXBvIGRlIHRlbGVmb25lLlxuICAgKi9cbiAgQElucHV0KCdwLXJlY292ZXJ5Jykgc2V0IHJlY292ZXJ5KHZhbHVlOiBzdHJpbmcgfCBGdW5jdGlvbiB8IFBvUGFnZUxvZ2luUmVjb3ZlcnkpIHtcbiAgICB0aGlzLl9yZWNvdmVyeSA9IHZhbHVlO1xuICB9XG5cbiAgZ2V0IHJlY292ZXJ5KCkge1xuICAgIHJldHVybiB0aGlzLl9yZWNvdmVyeTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAb3B0aW9uYWxcbiAgICpcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqXG4gICAqIENhc28gYSBhcGxpY2HDp8OjbyB0ZW5oYSB1bSBsaW5rIHBhcmEgbm92b3MgY2FkYXN0cm9zLCBpbmZvcm1lIHVtYSB1cmwgZXh0ZXJuYSBvdSB1bWEgcm90YSB2w6FsaWRhLCBkZXNzYVxuICAgKiBmb3JtYSBzZXLDoSBleGliaWRvIHVtIGxpbmsgYWJhaXhvIGRvIGZvcm11bMOhcmlvIGRlIGxvZ2luIHBhcmEgb3MgdXN1w6FyaW9zIGRhIGFwbGljYcOnw6NvLlxuICAgKlxuICAgKiBFeGVtcGxvcyBkZSB2YWxvcmVzIHbDoWxpZG9zOlxuICAgKiAtICoqbG9jYWwqKjogYC9ob21lYFxuICAgKiAtICoqdXJsIGV4dGVybmEqKjogYGh0dHBzOi8vcG8tdWkuaW9gXG4gICAqXG4gICAqID4gVmVqYSBhIHByb3ByaWVkYWRlIGBwLWxpdGVyYWxzYCBwYXJhIGN1c3RvbWl6YXIgYSBsaXRlcmFsIGByZWdpc3RlclVybGAuXG4gICAqL1xuICBASW5wdXQoJ3AtcmVnaXN0ZXItdXJsJykgc2V0IHJlZ2lzdGVyVXJsKHZhbHVlOiBzdHJpbmcpIHtcbiAgICB0aGlzLl9yZWdpc3RlclVybCA9IGlzVHlwZW9mKHZhbHVlLCAnc3RyaW5nJykgPyB2YWx1ZSA6IHVuZGVmaW5lZDtcbiAgfVxuXG4gIGdldCByZWdpc3RlclVybCgpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLl9yZWdpc3RlclVybDtcbiAgfVxuXG4gIC8qKlxuICAgKiBAb3B0aW9uYWxcbiAgICpcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqXG4gICAqIENhbWluaG8gcGFyYSBhIGxvZ29tYXJjYSBsb2NhbGl6YWRhIG5vIHJvZGFww6kuXG4gICAqL1xuICBASW5wdXQoJ3Atc2Vjb25kYXJ5LWxvZ28nKSBzZWNvbmRhcnlMb2dvPzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBAb3B0aW9uYWxcbiAgICpcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqXG4gICAqIEF0cmlidXRvIHF1ZSByZWNlYmUgbyB0aXBvIGRlIGVzcXVlbWEgZGEgYXV0ZW50aWNhw6fDo28sIHNlbmRvIHN1cG9ydGFkb3MgYXBlbmFzIG9zIHZhbG9yZXMgYEJhc2ljYCBlIGBCZWFyZXJgLlxuICAgKlxuICAgKiA+IENhc28gbyB0aXBvIGRlZmluaWRvIHNlamEgYEJhc2ljYCwgbyBjb21wb25lbnRlIGZhcsOhIHVtYSByZXF1aXNpw6fDo28gYFBPU1RgIGNvbnRlbmRvOlxuICAgKlxuICAgKiBgYGBcbiAgICogaGVhZGVycyB7XG4gICAqICBBdXRob3JpemF0aW9uOiBCYXNpYyBiYXNlNjQobG9naW46cGFzc3dvcmQpXG4gICAqIH1cbiAgICpcbiAgICogYm9keSB7XG4gICAqICByZW1lbWJlclVzZXI6IHJlbWVtYmVyVXNlclxuICAgKiB9XG4gICAqIGBgYFxuICAgKlxuICAgKiA+IENhc28gbyB0aXBvIGRlZmluaWRvIHNlamEgYEJlYXJlcmAsIG8gY29tcG9uZW50ZSBmYXLDoSB1bWEgcmVxdWlzacOnw6NvIGBQT1NUYCBjb250ZW5kbzpcbiAgICpcbiAgICogYGBgXG4gICAqIGJvZHkge1xuICAgKiAgbG9naW46IGxvZ2luLFxuICAgKiAgcGFzc3dvcmQ6IGJhc2U2NChwYXNzd29yZCksXG4gICAqICByZW1lbWJlclVzZXI6IHJlbWVtYmVyVXNlclxuICAgKiB9XG4gICAqIGBgYFxuICAgKlxuICAgKiBAZGVmYXVsdCBgUG9QYWdlTG9naW5BdXRoZW50aWNhdGlvblR5cGUuQmFzaWNgXG4gICAqL1xuICBASW5wdXQoJ3AtYXV0aGVudGljYXRpb24tdHlwZScpIHNldCBhdXRoZW50aWNhdGlvblR5cGUodmFsdWU6IFBvUGFnZUxvZ2luQXV0aGVudGljYXRpb25UeXBlKSB7XG4gICAgdGhpcy5fYXV0aGVudGljYXRpb25UeXBlID0gKDxhbnk+T2JqZWN0KS52YWx1ZXMoUG9QYWdlTG9naW5BdXRoZW50aWNhdGlvblR5cGUpLmluY2x1ZGVzKHZhbHVlKVxuICAgICAgPyB2YWx1ZVxuICAgICAgOiBQb1BhZ2VMb2dpbkF1dGhlbnRpY2F0aW9uVHlwZS5CYXNpYztcbiAgfVxuXG4gIGdldCBhdXRoZW50aWNhdGlvblR5cGUoKTogUG9QYWdlTG9naW5BdXRoZW50aWNhdGlvblR5cGUge1xuICAgIHJldHVybiB0aGlzLl9hdXRoZW50aWNhdGlvblR5cGU7XG4gIH1cblxuICAvKipcbiAgICogQG9wdGlvbmFsXG4gICAqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKlxuICAgKiBFbmRwb2ludCB1c2FkbyBwZWxvIHRlbXBsYXRlIHBhcmEgcmVxdWlzacOnw6NvIGRvIHJlY3Vyc28uIFF1YW5kbyBwcmVlbmNoaWRvLCBvIG3DqXRvZG8gYHAtbG9naW4tc3VibWl0YCBzZXLDoSBpZ25vcmFkbyBlIG9cbiAgICogY29tcG9uZW50ZSBhZHF1aXJpcsOhIGF1dG9tYXRpemHDp8OjbyBwYXJhIG8gcHJvY2Vzc28gZGUgYXV0ZW50aWNhw6fDo28uXG4gICAqXG4gICAqICMjIyBQcm9jZXNzb3NcbiAgICogQW8gZGlnaXRhciB1bSB2YWxvciB2w6FsaWRvIG5vIGNhbXBvIGRlIGxvZ2luL3Bhc3N3b3JkIGUgcHJlc3Npb25hciAqKkVudGVyKiosIG8gY29tcG9uZW50ZSBmYXLDoSB1bWEgcmVxdWlzacOnw6NvIGBQT1NUYFxuICAgKiBuYSB1cmwgZXNwZWNpZmljYWRhIG5lc3RhIHByb3ByaWVkYWRlIHBhc3NhbmRvIG8gb2JqZXRvIGNvbnRlbmRvIG8gdmFsb3IgZGVmaW5pZG8gcGVsbyB1c3XDoXJpbzpcbiAgICpcbiAgICogYGBgXG4gICAqIGhlYWRlcnMge1xuICAgKiAgQXV0aG9yaXphdGlvbjogQmFzaWMgYmFzZTY0KGxvZ2luOnBhc3N3b3JkKVxuICAgKiB9XG4gICAqXG4gICAqIGJvZHkge1xuICAgKiAgcmVtZW1iZXJVc2VyOiByZW1lbWJlclVzZXJcbiAgICogfVxuICAgKiBgYGBcbiAgICpcbiAgICogRW0gY2FzbyBkZSAqKnN1Y2Vzc28qKiwgbyBvYmpldG8gZGUgcmV0b3JubyDDqSBhcm1hemVuYWRvIG5vIGBzZXNzaW9uU3RvcmFnZWAgZSBvIHVzdcOhcmlvIMOpIHJlZGlyZWNpb25hZG8gcGFyYSBhIHDDoWdpbmEgaW5pY2lhbCBkYVxuICAgKiBhcGxpY2HDp8OjbyBgL2AuXG4gICAqXG4gICAqIGBgYFxuICAgKiAyMDA6XG4gICAqICB7XG4gICAqICAgIHVzZXI6IHVzZXJcbiAgICogIH1cbiAgICogYGBgXG4gICAqXG4gICAqIEVtIGNhc28gZGUgKiplcnJvKiogbmEgYXV0ZW50aWNhw6fDo28sIGVzcGVyYS1zZSBvIHNlZ3VpbnRlIHJldG9ybm86XG4gICAqXG4gICAqIGBgYFxuICAgKiA0MDAvNDAxXG4gICAqICB7XG4gICAqICAgIGNvZGU6IDQwMC80MDEsXG4gICAqICAgIG1lc3NhZ2U6IG1lc3NhZ2UsXG4gICAqICAgIGRldGFpbGVkTWVzc2FnZTogZGV0YWlsZWRNZXNzYWdlLFxuICAgKiAgICBoZWxwVXJsPzogaGVscFVybFxuICAgKiAgfVxuICAgKiBgYGBcbiAgICpcbiAgICogPiBQb2RlLXNlIGF0cmlidWlyIHVtYSBxdWFudGlkYWRlIG3DoXhpbWEgZGUgdGVudGF0aXZhcyByZXN0YW50ZXMgKG1heEF0dGVtcHRzUmVtYWluaW5nKSBwYXJhIG8gYXRyaWJ1dG8gYHAtZXhjZWVkZWQtYXR0ZW1wdHMtd2FybmluZ2AsXG4gICAqIGFzc2ltIGNvbW8gb3MgYXZpc29zIHJlbGFjaW9uYWRvcyBhb3MgY2FtcG9zIGxvZ2luIGUgcGFzc3dvcmQgKGxvZ2luV2FybmluZ3MsIHBhc3N3b3JkV2FybmluZ3MpIHBhcmEgb3MgYXRyaWJ1dG9zIGBwLWxvZ2luLWVycm9yc2AgZVxuICAgKiBgcC1wYXNzd29yZC1lcnJvcnNgIGNvbmZvcm1lIHJldG9ybm8gYWJhaXhvOlxuICAgKlxuICAgKiBgYGBcbiAgICogNDAwXG4gICAqICB7XG4gICAqICAgIGNvZGU6IDQwMC80MDEsXG4gICAqICAgIG1lc3NhZ2U6IG1lc3NhZ2UsXG4gICAqICAgIGRldGFpbGVkTWVzc2FnZTogZGV0YWlsZWRNZXNzYWdlLFxuICAgKiAgICBoZWxwVXJsPzogaGVscFVybCxcbiAgICogICAgbWF4QXR0ZW1wdHNSZW1haW5pbmc/OiBtYXhBdHRlbXB0c1JlbWFpbmluZyxcbiAgICogICAgbG9naW5XYXJuaW5ncz86IFtsb2dpbldhcm5pbmdzXSxcbiAgICogICAgcGFzc3dvcmRXYXJuaW5ncz86IFtwYXNzd29yZFdhcm5pbmdzXVxuICAgKiAgfVxuICAgKiBgYGBcbiAgICpcbiAgICogPiBDYXNvIG8gdmFsb3IgYXRyaWJ1w61kbyBwYXJhIGBwLWV4Y2VlZGVkLWF0dGVtcHRzLXdhcm5pbmdgIHNlamEgaWd1YWwgYSAwKHplcm8pLCBwb2RlcsOhIHNlciBwYXNzYWRvIHVtIHZhbG9yIHBhcmEgb1xuICAgKiBhdHJpYnV0byBgcC1ibG9ja2VkLXVybGAgZSBvIHVzdcOhcmlvIHNlcsOhIHJlZGlyZWNpb25hZG8gcGFyYSB1bWEgdGVsYSBkZSBibG9xdWVpby5cbiAgICpcbiAgICogKlByb2Nlc3NvIGZpbmFsaXphZG8uKlxuICAgKlxuICAgKiBfX19fX19fX19fX19fX19cbiAgICpcbiAgICogIyMjIyBQcmF0aWNpZGFkZVxuICAgKiBBcyBpbmZvcm1hw6fDtWVzIGRvIHNlcnZpw6dvIGRlIGF1dGVudGljYcOnw6NvIHRhbWLDqW0gcG9kZW0gc2VyIHRyYW5zbWl0aWRhcyBkaXJldGFtZW50ZSBwZWxhcyBjb25maWd1cmHDp8Ojb3MgZGUgcm90YSBlLCBkZXN0YSBtYW5laXJhLFxuICAgKiBkaXNwZW5zYS1zZSBxdWFscXVlciBtZW7Dp8OjbyBlL291IGltcG9ydGHDp8OjbyBkbyBjb21wb25lbnRlIGBwby1wYWdlLWxvZ2luYCBubyByZXN0YW50ZSBkYSBhcGxpY2HDp8Ojby4gTyBleGVtcGxvIGFiYWl4byBleGVtcGxpZmljYVxuICAgKiBhIGZvcm1hIGRpbsOibWljYSBjb20gYSBxdWFsIG8gdGVtcGxhdGUgZGUgdGVsYSBkZSBsb2dpbiBwb2RlIHNlciBnZXJhZG8gYW8gbmF2ZWdhciBwYXJhIHJvdGEgYC9sb2dpbmAsIGUgdGFtYsOpbSBjb21vIGVsZSBzZSBjb211bmljYVxuICAgKiBjb20gbyBzZXJ2acOnbyBwYXJhIGVmZXR1YcOnw6NvIGRvIHByb2Nlc3NvIGRlIGF1dGVudGljYcOnw6NvIGRvIHVzdcOhcmlvIGUgc29saWNpdGHDp8OjbyBkZSBub3ZhIHNlbmhhLlxuICAgKiBCYXN0YSBkZWZpbmlyIG5hcyBjb25maWd1cmHDp8O1ZXMgZGUgcm90YTpcbiAgICpcbiAgICpcbiAgICogYGBgXG4gICAqICAgaW1wb3J0IHsgUG9QYWdlTG9naW5Db21wb25lbnQsIFBvUGFnZUxvZ2luQXRoZW50aWNhdGlvblR5cGUgfSBmcm9tICdAcG8tdWkvbmctdGVtcGxhdGVzJztcbiAgICpcbiAgICogICAuLi5cbiAgICogICBjb25zdCByb3V0ZXM6IFJvdXRlcyA9IFtcbiAgICogICAgIHtcbiAgICogICAgICAgcGF0aDogJ2xvZ2luJywgY29tcG9uZW50OiBQb1BhZ2VMb2dpbkNvbXBvbmVudCwgZGF0YToge1xuICAgKiAgICAgICAgIHNlcnZpY2VBcGk6ICdodHRwczovL3BvLXVpLmlvL3NhbXBsZS9hcGkvdXNlcnMvYXV0aGVudGljYXRpb24nLFxuICAgKiAgICAgICAgIGVudmlyb25tZW50OiAnZGV2ZWxvcG1lbnQnLFxuICAgKiAgICAgICAgIHJlY292ZXJ5OiB7XG4gICAqICAgICAgICAgICB1cmw6ICdodHRwczovL3BvLXVpLmlvL3NhbXBsZS9hcGkvdXNlcnMnLFxuICAgKiAgICAgICAgICAgdHlwZTogUG9Nb2RhbFBhc3N3b3JkUmVjb3ZlcnlUeXBlLkFsbCxcbiAgICogICAgICAgICAgIGNvbnRhY3RNYWlsOiAnZGV2LnBvQHBvLXVpLmNvbScsXG4gICAqICAgICAgICAgICBwaG9uZU1hc2s6ICc5LTk5OS05OTktOTk5OSdcbiAgICogICAgICAgICB9LFxuICAgKiAgICAgICAgIHJlZ2lzdGVyVXJsOiAnL25ldy1wYXNzd29yZCcsXG4gICAqICAgICAgICAgYXV0aGVudGljYXRpb25UeXBlOiBQb1BhZ2VMb2dpbkF0aGVudGljYXRpb25UeXBlLkJhc2ljXG4gICAqICAgICAgIH1cbiAgICogICAgIH1cbiAgICogICAgIC4uLlxuICAgKiAgIF07XG4gICAqXG4gICAqICAgQE5nTW9kdWxlKHtcbiAgICogICAgIGltcG9ydHM6IFtSb3V0ZXJNb2R1bGUuZm9yUm9vdChyb3V0ZXMpXSxcbiAgICogICAgIGV4cG9ydHM6IFtSb3V0ZXJNb2R1bGVdXG4gICAqICAgfSlcbiAgICogICBleHBvcnQgY2xhc3MgQXBwUm91dGluZ01vZHVsZSB7IH1cbiAgICogYGBgXG4gICAqXG4gICAqXG4gICAqIE8gbWV0YWRhZG8gYHNlcnZpY2VBcGlgIGRldmUgc2VyIGEgKip1cmwqKiBwYXJhIHJlcXVpc2nDp8OjbyBkb3MgcmVjdXJzb3MgZGUgYXV0ZW50aWNhw6fDo28sIG8gYGVudmlyb25tZW50YCBhbGltZW50YSBhIHByb3ByaWVkYWRlXG4gICAqIGBwLWVudmlyb25tZW50YCwgYHJlY292ZXJ5YCDDqSBhIGludGVyZmFjZSBgUG9QYWdlTG9naW5SZWNvdmVyeWAgcmVzcG9uc8OhdmVsIHBlbGFzIGVzcGVjaWZpY2HDp8O1ZXMgY29udGlkYXMgbmEgbW9kYWwgZGUgcmVjdXBlcmHDp8OjbyBkZVxuICAgKiBzZW5oYSwgYHJlZ2lzdGVyVXJsYCBhbGltZW50YSBhIHByb3ByaWVkYWRlIGBwLXJlZ2lzdGVyLXVybGAgZSBgYXV0aGVudGljYXRpb25UeXBlYCBxdWUgZGVmaW5lIGEgcHJvcHJpZWRhZGUgYHAtYXV0aGVudGljYXRpb24tdHlwZWAuXG4gICAqXG4gICAqID4gw4kgZXNzZW5jaWFsIHF1ZSBzaWdhIGEgbm9tZW5jbGF0dXJhIGRvcyBhdHJpYnV0b3MgZXhlbXBsaWZpY2Fkb3MgYWNpbWEgcGFyYSBzdWEgZWZldGl2YSBmdW5jaW9uYWxpZGFkZS5cbiAgICpcbiAgICovXG4gIEBJbnB1dCgncC1hdXRoZW50aWNhdGlvbi11cmwnKSBzZXQgYXV0aGVudGljYXRpb25VcmwodmFsdWU6IHN0cmluZykge1xuICAgIHRoaXMuX2F1dGhlbnRpY2F0aW9uVXJsID0gaXNUeXBlb2YodmFsdWUsICdzdHJpbmcnKSA/IHZhbHVlIDogdW5kZWZpbmVkO1xuICB9XG5cbiAgZ2V0IGF1dGhlbnRpY2F0aW9uVXJsKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMuX2F1dGhlbnRpY2F0aW9uVXJsO1xuICB9XG5cbiAgLyoqXG4gICAqIEBvcHRpb25hbFxuICAgKlxuICAgKiBAZGVzY3JpcHRpb25cbiAgICpcbiAgICogQ2FzbyBvIHZhbG9yIGF0cmlidcOtZG8gcGFyYSBgcC1leGNlZWRlZC1hdHRlbXB0cy13YXJuaW5nYCBzZWphIGlndWFsIGEgMCh6ZXJvKSBlIGEgYXBsaWNhw6fDo28gdGVuaGEgdW0gbGluayBkZSBibG9xdWVpbyBkZSB1c3XDoXJpbyxcbiAgICogaW5mb3JtZSB1bWEgdXJsIGV4dGVybmEgb3UgdW1hIHJvdGEgdsOhbGlkYSwgZGVzc2EgZm9ybWEgZW0gY2FzbyBkZSBibG9xdWVpbyBvIHVzdcOhcmlvIHNlcsOhIHJlZGlyZWNpb25hZG8uXG4gICAqL1xuICBASW5wdXQoJ3AtYmxvY2tlZC11cmwnKSBzZXQgYmxvY2tlZFVybCh2YWx1ZTogc3RyaW5nKSB7XG4gICAgdGhpcy5fYmxvY2tlZFVybCA9IGlzVHlwZW9mKHZhbHVlLCAnc3RyaW5nJykgPyB2YWx1ZSA6IHVuZGVmaW5lZDtcbiAgfVxuXG4gIGdldCBibG9ja2VkVXJsKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMuX2Jsb2NrZWRVcmw7XG4gIH1cblxuICAvKipcbiAgICogRXZlbnRvIGRpc3BhcmFkbyBxdWFuZG8gbyB1c3XDoXJpbyBhbHRlcmFyIG8gaW5wdXQgZG8gY2FtcG8gbG9naW4uXG4gICAqXG4gICAqIEVzc2UgZXZlbnRvIHJlY2ViZXLDoSBjb21vIHBhcsOibWV0cm8gdW1hIHZhcmnDoXZlbCBkbyB0aXBvIGBzdHJpbmdgIGNvbSBvIHRleHRvIGluZm9ybWFkbyBubyBjYW1wby5cbiAgICpcbiAgICogPiBFc3RhIHByb3ByaWVkYWRlIHNlcsOhIGlnbm9yYWRhIHNlIGZvciBkZWZpbmlkbyB2YWxvciBwYXJhIGEgcHJvcHJpZWRhZGUgYHAtYXV0aGVudGljYXRpb24tdXJsYC5cbiAgICovXG4gIEBPdXRwdXQoJ3AtbG9naW4tY2hhbmdlJykgbG9naW5DaGFuZ2U/OiBFdmVudEVtaXR0ZXI8c3RyaW5nPiA9IG5ldyBFdmVudEVtaXR0ZXI8c3RyaW5nPigpO1xuXG4gIC8qKlxuICAgKiBFdmVudG8gZGlzcGFyYWRvIGFvIHN1Ym1ldGVyIG8gZm9ybXVsw6FyaW8gZGUgbG9naW4gKGFwZXJ0YW5kbyBgRW50ZXJgIGRlbnRybyBkb3MgY2FtcG9zIG91IHByZXNzaW9uYW5kbyBvIGJvdMOjbyBkZSBjb25maXJtYcOnw6NvKS5cbiAgICpcbiAgICogRXNzZSBldmVudG8gcmVjZWJlcsOhIGNvbW8gcGFyw6JtZXRybyB1bSBvYmpldG8gZG8gdGlwbyBgUG9QYWdlTG9naW5gIGNvbSBvcyBkYWRvcyBpbmZvcm1hZG9zIG5vIGZvcm11bMOhcmlvLlxuICAgKlxuICAgKiA+IEVzdGEgcHJvcHJpZWRhZGUgc2Vyw6EgaWdub3JhZGEgc2UgZm9yIGRlZmluaWRvIHZhbG9yIHBhcmEgYSBwcm9wcmllZGFkZSBgcC11cmwtcmVjb3ZlcnlgLlxuICAgKlxuICAgKiA+IFBhcmEgbWFpcyBkZXRhbGhlcyBjb25zdWx0ZSBhIGRvY3VtZW50YcOnw6NvIHNvYnJlIGEgaW50ZXJmYWNlIGBQb1BhZ2VMb2dpbmAgbWFpcyBhYmFpeG8uXG4gICAqL1xuICBAT3V0cHV0KCdwLWxvZ2luLXN1Ym1pdCcpIGxvZ2luU3VibWl0ID0gbmV3IEV2ZW50RW1pdHRlcjxQb1BhZ2VMb2dpbj4oKTtcblxuICAvKipcbiAgICogRXZlbnRvIGRpc3BhcmFkbyBxdWFuZG8gbyB1c3XDoXJpbyBhbHRlcmFyIG8gaW5wdXQgZG8gY2FtcG8gcGFzc3dvcmQuXG4gICAqXG4gICAqIEVzc2UgZXZlbnRvIHJlY2ViZXLDoSBjb21vIHBhcsOibWV0cm8gdW1hIHZhcmnDoXZlbCBkbyB0aXBvIGBzdHJpbmdgIGNvbSBvIHRleHRvIGluZm9ybWFkbyBubyBjYW1wby5cbiAgICpcbiAgICogPiBFc3RhIHByb3ByaWVkYWRlIHNlcsOhIGlnbm9yYWRhIHNlIGZvciBkZWZpbmlkbyB2YWxvciBwYXJhIGEgcHJvcHJpZWRhZGUgYHAtYXV0aGVudGljYXRpb24tdXJsYC5cbiAgICovXG4gIEBPdXRwdXQoJ3AtcGFzc3dvcmQtY2hhbmdlJykgcGFzc3dvcmRDaGFuZ2U/OiBFdmVudEVtaXR0ZXI8c3RyaW5nPiA9IG5ldyBFdmVudEVtaXR0ZXI8c3RyaW5nPigpO1xuXG4gIGdldCBsYW5ndWFnZSgpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLnNlbGVjdGVkTGFuZ3VhZ2UgfHwgZ2V0U2hvcnRCcm93c2VyTGFuZ3VhZ2UoKTtcbiAgfVxuXG4gIGdldCBwYWdlTG9naW5MaXRlcmFscygpOiBQb1BhZ2VMb2dpbkxpdGVyYWxzIHtcbiAgICBjb25zdCBsb2dpbkhpbnRXaXRoQ29udGFjdEVtYWlsID0gdGhpcy5jb250YWN0RW1haWxcbiAgICAgID8gdGhpcy5jb25jYXRlbmF0ZUxvZ2luSGludFdpdGhDb250YWN0RW1haWwodGhpcy5jb250YWN0RW1haWwpXG4gICAgICA6IHVuZGVmaW5lZDtcblxuICAgIGNvbnN0IHRpdGxlV2l0aFByb2R1Y3ROYW1lID0gdGhpcy5wcm9kdWN0TmFtZSA/IHRoaXMuY29uY2F0ZW5hdGVUaXRsZVdpdGhQcm9kdWN0TmFtZSh0aGlzLnByb2R1Y3ROYW1lKSA6IHVuZGVmaW5lZDtcblxuICAgIHJldHVybiB7XG4gICAgICAuLi5wb1BhZ2VMb2dpbkxpdGVyYWxzRGVmYXVsdFtwb0xvY2FsZURlZmF1bHRdLFxuICAgICAgLi4ucG9QYWdlTG9naW5MaXRlcmFsc0RlZmF1bHRbdGhpcy5sYW5ndWFnZV0sXG4gICAgICAuLi5sb2dpbkhpbnRXaXRoQ29udGFjdEVtYWlsLFxuICAgICAgLi4udGl0bGVXaXRoUHJvZHVjdE5hbWUsXG4gICAgICAuLi50aGlzLmxpdGVyYWxzXG4gICAgfTtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgbG9naW5TZXJ2aWNlOiBQb1BhZ2VMb2dpblNlcnZpY2UsIHB1YmxpYyByb3V0ZXI6IFJvdXRlcikge31cblxuICBuZ09uRGVzdHJveSgpIHtcbiAgICBpZiAodGhpcy5sb2dpblN1YnNjcmlwdGlvbikge1xuICAgICAgdGhpcy5sb2dpblN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xuICAgIH1cbiAgfVxuXG4gIGNsb3NlUG9wb3ZlcigpIHtcbiAgICB0aGlzLnNob3dFeGNlZWRlZEF0dGVtcHRzV2FybmluZyA9IGZhbHNlO1xuICB9XG5cbiAgb25Mb2dpblN1Ym1pdCgpOiB2b2lkIHtcbiAgICBjb25zdCBsb2dpbkZvcm06IFBvUGFnZUxvZ2luID0ge1xuICAgICAgbG9naW46IHRoaXMubG9naW4sXG4gICAgICBwYXNzd29yZDogdGhpcy5wYXNzd29yZCxcbiAgICAgIHJlbWVtYmVyVXNlcjogdGhpcy5yZW1lbWJlclVzZXJcbiAgICB9O1xuXG4gICAgaWYgKHRoaXMuY3VzdG9tRmllbGQpIHtcbiAgICAgIGxvZ2luRm9ybVt0aGlzLmN1c3RvbUZpZWxkT2JqZWN0LnByb3BlcnR5XSA9IHRoaXMuY3VzdG9tRmllbGRPYmplY3QudmFsdWU7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuYXV0aGVudGljYXRpb25VcmwpIHtcbiAgICAgIHRoaXMubG9naW5TdWJzY3JpcHRpb24gPSB0aGlzLmxvZ2luU2VydmljZVxuICAgICAgICAub25Mb2dpbih0aGlzLmF1dGhlbnRpY2F0aW9uVXJsLCB0aGlzLmF1dGhlbnRpY2F0aW9uVHlwZSwgbG9naW5Gb3JtKVxuICAgICAgICAuc3Vic2NyaWJlKFxuICAgICAgICAgIGRhdGEgPT4ge1xuICAgICAgICAgICAgdGhpcy5zZXRWYWx1ZXNUb1Byb3BlcnRpZXMoKTtcbiAgICAgICAgICAgIHNlc3Npb25TdG9yYWdlLnNldEl0ZW0oJ1BPX1VTRVJfTE9HSU4nLCBKU09OLnN0cmluZ2lmeShkYXRhKSk7XG4gICAgICAgICAgICB0aGlzLm9wZW5JbnRlcm5hbExpbmsoJy8nKTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIGVycm9yID0+IHtcbiAgICAgICAgICAgIGlmIChlcnJvci5lcnJvci5jb2RlID09PSAnNDAwJyB8fCBlcnJvci5lcnJvci5jb2RlID09PSAnNDAxJykge1xuICAgICAgICAgICAgICB0aGlzLnNldFZhbHVlc1RvUHJvcGVydGllcyhlcnJvcik7XG4gICAgICAgICAgICAgIHRoaXMucmVkaXJlY3RCbG9ja2VkVXJsKHRoaXMuZXhjZWVkZWRBdHRlbXB0c1dhcm5pbmcsIHRoaXMuYmxvY2tlZFVybCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICApO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmxvZ2luU3VibWl0LmVtaXQobG9naW5Gb3JtKTtcbiAgICAgIHRoaXMuc2hvd0V4Y2VlZGVkQXR0ZW1wdHNXYXJuaW5nID0gdGhpcy5leGNlZWRlZEF0dGVtcHRzV2FybmluZyA+IDA7XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBnZXREZWZhdWx0Q3VzdG9tRmllbGRPYmplY3QocHJvcGVydHkpOiBQb1BhZ2VMb2dpbkN1c3RvbUZpZWxkIHtcbiAgICByZXR1cm4geyBwcm9wZXJ0eSB9O1xuICB9XG5cbiAgcHJpdmF0ZSBvcGVuRXh0ZXJuYWxMaW5rKHVybDogc3RyaW5nKSB7XG4gICAgd2luZG93Lm9wZW4odXJsLCAnX2JsYW5rJyk7XG4gIH1cblxuICBwcml2YXRlIG9wZW5JbnRlcm5hbExpbmsodXJsOiBzdHJpbmcpIHtcbiAgICB0aGlzLnJvdXRlci5uYXZpZ2F0ZShbdXJsXSk7XG4gIH1cblxuICBwcml2YXRlIHJlZGlyZWN0QmxvY2tlZFVybChhdHRlbXB0czogbnVtYmVyLCBibG9ja2VkVXJsOiBzdHJpbmcpIHtcbiAgICBpZiAoYXR0ZW1wdHMgPT09IDAgJiYgYmxvY2tlZFVybCkge1xuICAgICAgdGhpcy5zaG93RXhjZWVkZWRBdHRlbXB0c1dhcm5pbmcgPSBmYWxzZTtcbiAgICAgIGlzRXh0ZXJuYWxMaW5rKGJsb2NrZWRVcmwpID8gdGhpcy5vcGVuRXh0ZXJuYWxMaW5rKGJsb2NrZWRVcmwpIDogdGhpcy5vcGVuSW50ZXJuYWxMaW5rKGJsb2NrZWRVcmwpO1xuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgc2V0VmFsdWVzVG9Qcm9wZXJ0aWVzKHJlc3VsdD8pIHtcbiAgICBpZiAocmVzdWx0KSB7XG4gICAgICB0aGlzLmV4Y2VlZGVkQXR0ZW1wdHNXYXJuaW5nID0gcmVzdWx0LmVycm9yLm1heEF0dGVtcHRzUmVtYWluaW5nO1xuICAgICAgdGhpcy5sb2dpbkVycm9ycyA9IHJlc3VsdC5lcnJvci5sb2dpbldhcm5pbmdzO1xuICAgICAgdGhpcy5wYXNzd29yZEVycm9ycyA9IHJlc3VsdC5lcnJvci5wYXNzd29yZFdhcm5pbmdzO1xuICAgICAgdGhpcy5ibG9ja2VkVXJsID0gcmVzdWx0LmVycm9yLmJsb2NrZWRVcmw7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuZXhjZWVkZWRBdHRlbXB0c1dhcm5pbmcgPSAwO1xuICAgICAgdGhpcy5sb2dpbkVycm9ycyA9IFtdO1xuICAgICAgdGhpcy5wYXNzd29yZEVycm9ycyA9IFtdO1xuICAgICAgdGhpcy5ibG9ja2VkVXJsID0gJyc7XG4gICAgfVxuICB9XG5cbiAgcHJvdGVjdGVkIGFic3RyYWN0IGNvbmNhdGVuYXRlTG9naW5IaW50V2l0aENvbnRhY3RFbWFpbChjb250YWN0RW1haWw6IHN0cmluZyk7XG5cbiAgcHJvdGVjdGVkIGFic3RyYWN0IGNvbmNhdGVuYXRlVGl0bGVXaXRoUHJvZHVjdE5hbWUocHJvZHVjdE5hbWU6IHN0cmluZyk7XG5cbiAgcHJvdGVjdGVkIGFic3RyYWN0IHNldExvZ2luRXJyb3JzKHZhbHVlOiBBcnJheTxzdHJpbmc+KTogdm9pZDtcblxuICBwcm90ZWN0ZWQgYWJzdHJhY3Qgc2V0UGFzc3dvcmRFcnJvcnModmFsdWU6IEFycmF5PHN0cmluZz4pOiB2b2lkO1xufVxuIl19