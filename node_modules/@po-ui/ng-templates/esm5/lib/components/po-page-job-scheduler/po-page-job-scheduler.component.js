import { __assign, __awaiter, __decorate, __extends, __generator, __metadata, __read, __spread } from "tslib";
import { ActivatedRoute, Router } from '@angular/router';
import { Component, ViewChild, ViewEncapsulation } from '@angular/core';
import { PoDialogService, PoDynamicFormField, PoNotificationService, PoPageAction, PoStepperItem, PoStepperStatus } from '@po-ui/ng-components';
import * as util from './../../utils/util';
import { PoPageJobSchedulerInternal } from './po-page-job-scheduler-internal';
import { PoPageJobSchedulerBaseComponent } from './po-page-job-scheduler-base.component';
import { poPageJobSchedulerLiteralsDefault } from './po-page-job-scheduler-literals';
import { PoPageJobSchedulerLookupService } from './po-page-job-scheduler-lookup.service';
import { PoPageJobSchedulerService } from './po-page-job-scheduler.service';
/**
 * @docsExtends PoPageJobSchedulerBaseComponent
 *
 * @example
 *
 * <example name="po-page-job-scheduler-background-process" title="PO Page Job Scheduler - Background Process">
 *  <file name="sample-po-page-job-scheduler-background-process/sample-po-page-job-scheduler-background-process.component.html"> </file>
 *  <file name="sample-po-page-job-scheduler-background-process/sample-po-page-job-scheduler-background-process.component.ts"> </file>
 * </example>
 *
 */
var PoPageJobSchedulerComponent = /** @class */ (function (_super) {
    __extends(PoPageJobSchedulerComponent, _super);
    function PoPageJobSchedulerComponent(poPageDynamicLookupService, activatedRoute, poDialogService, poNotification, poPageJobSchedulerService) {
        var _this = _super.call(this, poPageJobSchedulerService) || this;
        _this.poPageDynamicLookupService = poPageDynamicLookupService;
        _this.activatedRoute = activatedRoute;
        _this.poDialogService = poDialogService;
        _this.poNotification = poNotification;
        _this.poPageJobSchedulerService = poPageJobSchedulerService;
        _this.isEdit = false;
        _this.literals = __assign(__assign({}, poPageJobSchedulerLiteralsDefault[util.poLocaleDefault]), poPageJobSchedulerLiteralsDefault[util.browserLanguage()]);
        _this.parameters = [];
        _this.step = 1;
        _this.backPageAction = {
            label: _this.literals.back,
            action: _this.nextStepOperation.bind(_this, 'back'),
            disabled: _this.isDisabledBack.bind(_this)
        };
        _this.concludePageActions = [
            {
                label: _this.literals.conclude,
                action: _this.confirmJobScheduler.bind(_this)
            },
            __assign({}, _this.backPageAction)
        ];
        _this.nextPageActions = [
            {
                label: _this.literals.next,
                action: _this.nextStepOperation.bind(_this, 'next'),
                disabled: _this.isDisabledAdvance.bind(_this)
            },
            __assign({}, _this.backPageAction)
        ];
        _this.jobSchedulerActions = __spread(_this.nextPageActions);
        _this.steps = [
            { label: _this.literals.scheduling },
            { label: _this.literals.parameterization },
            { label: _this.literals.conclude }
        ];
        return _this;
    }
    Object.defineProperty(PoPageJobSchedulerComponent.prototype, "stepperOrientation", {
        get: function () {
            return window.innerWidth > 481 && window.innerWidth < 960 ? 'horizontal' : 'vertical';
        },
        enumerable: true,
        configurable: true
    });
    PoPageJobSchedulerComponent.prototype.ngOnInit = function () {
        var paramId = this.activatedRoute.snapshot.params['id'];
        this.isEdit = !!paramId;
        this.poPageJobSchedulerService.configServiceApi({ endpoint: this.serviceApi });
        this.loadData(paramId);
    };
    PoPageJobSchedulerComponent.prototype.changePageActionsBySteps = function (currentStep, nextStep) {
        var stepsLength = this.steps.length;
        if (nextStep === stepsLength) {
            this.jobSchedulerActions = __spread(this.concludePageActions);
        }
        else if (currentStep === stepsLength && nextStep < currentStep) {
            this.jobSchedulerActions = __spread(this.nextPageActions);
        }
    };
    PoPageJobSchedulerComponent.prototype.nextStep = function (stepNumber) {
        if (stepNumber > 1 && this.schedulerExecution.form.invalid) {
            this.markAsDirtyInvalidControls(this.schedulerExecution.form.controls);
            return;
        }
        if (stepNumber > 2 &&
            this.schedulerParameters &&
            this.schedulerParameters.form &&
            this.schedulerParameters.form.invalid) {
            this.markAsDirtyInvalidControls(this.schedulerParameters.form.controls);
            return;
        }
        this.setModelRecurrent();
        var model = JSON.parse(JSON.stringify(this.model));
        if (stepNumber === this.steps.length) {
            this.publicValues = this.hidesSecretValues(model);
        }
        this.changePageActionsBySteps(this.step, stepNumber);
        var steps = this.steps[this.step - 1];
        this.step = stepNumber;
        if (steps) {
            steps.status = PoStepperStatus.Done;
        }
    };
    PoPageJobSchedulerComponent.prototype.onChangeProcess = function (process) {
        if (process.existAPI && process.processId) {
            this.getParametersByProcess(process.processId);
            if (!this.isEdit) {
                this.model.executionParameter = {};
            }
            return;
        }
    };
    PoPageJobSchedulerComponent.prototype.confirmJobScheduler = function () {
        var _this = this;
        var paramId = this.activatedRoute.snapshot.params['id'];
        var confirmMessage = paramId ? this.literals.confirmUpdateMessage : this.literals.confirmSaveMessage;
        this.poDialogService.confirm({
            title: this.literals.confirmation,
            message: confirmMessage,
            confirm: function () {
                var model = __assign({}, _this.model);
                _this.save(model, paramId);
            }
        });
    };
    PoPageJobSchedulerComponent.prototype.emitSuccessMessage = function (msgSuccess, saveOperation) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, saveOperation.toPromise()];
                    case 1:
                        _a.sent();
                        this.poNotification.success(msgSuccess);
                        this.resetJobSchedulerForm();
                        return [2 /*return*/];
                }
            });
        });
    };
    PoPageJobSchedulerComponent.prototype.getParametersByProcess = function (process) {
        var _this = this;
        this.poPageJobSchedulerService.getParametersByProcess(process).subscribe(function (parameters) {
            _this.parameters = parameters;
        });
    };
    PoPageJobSchedulerComponent.prototype.hidesSecretValues = function (model) {
        var _this = this;
        var hiddenSecretValue = '**********';
        this.parameters.forEach(function (parameter) {
            if (_this.isSecretParameter(model, parameter)) {
                model.executionParameter[parameter.property] = hiddenSecretValue;
            }
        });
        return model;
    };
    PoPageJobSchedulerComponent.prototype.isDisabledAdvance = function () {
        var _a, _b;
        var componentByStep = {
            1: this.schedulerExecution,
            2: this.schedulerParameters
        };
        return ((_b = (_a = componentByStep[this.step]) === null || _a === void 0 ? void 0 : _a.form) === null || _b === void 0 ? void 0 : _b.invalid) || false;
    };
    PoPageJobSchedulerComponent.prototype.isDisabledBack = function () {
        return this.step === 1;
    };
    PoPageJobSchedulerComponent.prototype.isSecretParameter = function (model, parameter) {
        return (model.executionParameter &&
            parameter.hasOwnProperty('secret') &&
            parameter['secret'] === true &&
            model.executionParameter.hasOwnProperty(parameter.property));
    };
    PoPageJobSchedulerComponent.prototype.nextStepOperation = function (operation) {
        var stepNumber = operation === 'back' ? this.step - 1 : this.step + 1;
        this.nextStep(stepNumber);
    };
    PoPageJobSchedulerComponent.prototype.resetJobSchedulerForm = function () {
        var _this = this;
        this.schedulerExecution.form.reset();
        // radiogroup n√£o estava atribuindo novo valor, fica vermelho sem o timetout.
        setTimeout(function () {
            _this.model = new PoPageJobSchedulerInternal();
            _this.step = 1;
            _this.steps.forEach(function (step) {
                step.status = PoStepperStatus.Default;
            });
            _this.jobSchedulerActions = __spread(_this.nextPageActions);
        });
    };
    PoPageJobSchedulerComponent.prototype.save = function (model, paramId) {
        var saveOperation = paramId
            ? this.poPageJobSchedulerService.updateResource(paramId, model)
            : this.poPageJobSchedulerService.createResource(model);
        var msgSuccess = paramId
            ? this.literals.saveNotificationSuccessUpdate
            : this.literals.saveNotificationSuccessSave;
        this.emitSuccessMessage(msgSuccess, saveOperation);
    };
    PoPageJobSchedulerComponent.prototype.setModelRecurrent = function () {
        this.model.recurrent = this.model.periodicity === 'single' ? false : this.model.recurrent;
    };
    PoPageJobSchedulerComponent.ctorParameters = function () { return [
        { type: PoPageJobSchedulerLookupService },
        { type: ActivatedRoute },
        { type: PoDialogService },
        { type: PoNotificationService },
        { type: PoPageJobSchedulerService }
    ]; };
    __decorate([
        ViewChild('schedulerExecution', { static: true }),
        __metadata("design:type", Object)
    ], PoPageJobSchedulerComponent.prototype, "schedulerExecution", void 0);
    __decorate([
        ViewChild('schedulerParameters'),
        __metadata("design:type", Object)
    ], PoPageJobSchedulerComponent.prototype, "schedulerParameters", void 0);
    PoPageJobSchedulerComponent = __decorate([
        Component({
            selector: 'po-page-job-scheduler',
            template: "<po-page-default [p-actions]=\"jobSchedulerActions\" [p-breadcrumb]=\"breadcrumb\" [p-title]=\"title\">\n  <div class=\"po-row\">\n    <po-stepper\n      class=\"po-lg-3 po-xl-2\"\n      p-sequential=\"true\"\n      [p-orientation]=\"stepperOrientation\"\n      [p-step]=\"step\"\n      [p-steps]=\"steps\"\n      (p-change-step)=\"nextStep($event)\"\n    >\n    </po-stepper>\n\n    <po-container class=\"po-lg-8 po-xl-6\">\n      <form #formScheduler=\"ngForm\">\n        <div class=\"po-row\">\n          <po-page-job-scheduler-execution\n            [hidden]=\"step !== 1\"\n            #schedulerExecution\n            class=\"po-md-12\"\n            [p-is-edit]=\"isEdit\"\n            [p-literals]=\"literals\"\n            [p-value]=\"model\"\n            (p-change-process)=\"onChangeProcess($event)\"\n          >\n          </po-page-job-scheduler-execution>\n\n          <po-page-job-scheduler-parameters\n            *ngIf=\"step === 2\"\n            #schedulerParameters\n            class=\"po-md-12\"\n            [p-literals]=\"literals\"\n            [p-parameters]=\"parameters || []\"\n            [(p-value)]=\"model.executionParameter\"\n          >\n          </po-page-job-scheduler-parameters>\n\n          <po-page-job-scheduler-summary\n            *ngIf=\"step === 3\"\n            class=\"po-md-12\"\n            [p-literals]=\"literals\"\n            [p-parameters]=\"parameters\"\n            [p-value]=\"publicValues\"\n          >\n          </po-page-job-scheduler-summary>\n        </div>\n      </form>\n    </po-container>\n  </div>\n</po-page-default>\n",
            encapsulation: ViewEncapsulation.None,
            styles: ["\n      po-container .po-container {\n        overflow-y: unset;\n      }\n    "]
        }),
        __metadata("design:paramtypes", [PoPageJobSchedulerLookupService,
            ActivatedRoute,
            PoDialogService,
            PoNotificationService,
            PoPageJobSchedulerService])
    ], PoPageJobSchedulerComponent);
    return PoPageJobSchedulerComponent;
}(PoPageJobSchedulerBaseComponent));
export { PoPageJobSchedulerComponent };
//# sourceMappingURL=data:application/json;base64,