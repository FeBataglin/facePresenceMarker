import { __decorate, __metadata } from "tslib";
import { Component, Input } from '@angular/core';
import { DatePipe } from '@angular/common';
import { PoInfoOrientation } from '@po-ui/ng-components';
var PoPageJobSchedulerSummaryComponent = /** @class */ (function () {
    function PoPageJobSchedulerSummaryComponent(datePipe) {
        this.datePipe = datePipe;
        this.executionValue = '';
        this.firstExecutionValue = '';
        this.infoOrientation = PoInfoOrientation.Horizontal;
        this.periodicityValue = '';
        this.recurrentValue = '';
        this.literals = {};
        this.parameters = [];
        this.value = {};
    }
    PoPageJobSchedulerSummaryComponent.prototype.ngOnInit = function () {
        var _a = this.value, periodicity = _a.periodicity, hour = _a.hour, dayOfMonth = _a.dayOfMonth, daysOfWeek = _a.daysOfWeek, recurrent = _a.recurrent, firstExecution = _a.firstExecution, firstExecutionHour = _a.firstExecutionHour;
        this.periodicityValue = this.getPeriodicityLabel(periodicity);
        this.executionValue = this.getExecutionValue(periodicity, hour, daysOfWeek, dayOfMonth);
        this.firstExecutionValue = this.getFirstExecutionLabel(firstExecution, firstExecutionHour);
        this.recurrentValue = this.getRecurrentValue(recurrent);
    };
    PoPageJobSchedulerSummaryComponent.prototype.getExecutionValue = function (periodicity, hour, daysOfWeek, dayOfMonth) {
        switch (periodicity) {
            case 'daily':
                return this.getHourLabel(hour);
            case 'monthly':
                return this.getMonthlyLabelExecution(dayOfMonth, hour);
            case 'weekly':
                return this.getWeeklyLabelExecution(daysOfWeek, hour);
            default:
                return this.literals.notReported;
        }
    };
    PoPageJobSchedulerSummaryComponent.prototype.getFirstExecutionLabel = function (firstExecution, firstExecutionHour) {
        if (firstExecution) {
            var date = this.datePipe.transform(firstExecution, 'dd/MM/yyyy', '-0200');
            return date + " " + this.getHourLabel(firstExecutionHour);
        }
        else {
            return this.literals.notReported;
        }
    };
    PoPageJobSchedulerSummaryComponent.prototype.getHourLabel = function (hour) {
        return this.literals.at + " " + (hour || '00:00') + "h";
    };
    PoPageJobSchedulerSummaryComponent.prototype.getMonthlyLabelExecution = function (dayOfMonth, hour) {
        var hourLabel = this.getHourLabel(hour);
        return this.literals.day + " " + dayOfMonth + " " + hourLabel;
    };
    PoPageJobSchedulerSummaryComponent.prototype.getPeriodicityLabel = function (periodicity) {
        switch (periodicity) {
            case 'daily':
                return this.literals.daily;
            case 'monthly':
                return this.literals.monthly;
            case 'weekly':
                return this.literals.weekly;
            default:
                return this.literals.single;
        }
    };
    PoPageJobSchedulerSummaryComponent.prototype.getRecurrentValue = function (recurrent) {
        return recurrent ? this.literals.yes : this.literals.no;
    };
    PoPageJobSchedulerSummaryComponent.prototype.getSorterWeekDays = function () {
        return {
            'sunday': 0,
            'monday': 1,
            'tuesday': 2,
            'wednesday': 3,
            'thursday': 4,
            'friday': 5,
            'saturday': 6
        };
    };
    PoPageJobSchedulerSummaryComponent.prototype.getTranslateWeekDay = function (day) {
        var days = {
            Sunday: this.literals.sunday,
            Monday: this.literals.monday,
            Tuesday: this.literals.tuesday,
            Wednesday: this.literals.wednesday,
            Thursday: this.literals.thursday,
            Friday: this.literals.friday,
            Saturday: this.literals.saturday
        };
        return days[day] || '';
    };
    PoPageJobSchedulerSummaryComponent.prototype.getWeekDaysLabel = function (days) {
        var _this = this;
        if (days === void 0) { days = []; }
        var weekDaysSorted = this.sortWeekDays(days);
        return weekDaysSorted.map(function (day) { return _this.getTranslateWeekDay(day); }).join(', ');
    };
    PoPageJobSchedulerSummaryComponent.prototype.getWeeklyLabelExecution = function (daysOfWeek, hour) {
        if (daysOfWeek && Array.isArray(daysOfWeek)) {
            return this.getWeekDaysLabel(daysOfWeek) + " " + this.getHourLabel(hour);
        }
        else {
            return this.literals.notReported;
        }
    };
    PoPageJobSchedulerSummaryComponent.prototype.sortWeekDays = function (days) {
        if (days === void 0) { days = []; }
        var sorterWeekDays = this.getSorterWeekDays();
        return days.sort(function (a, b) {
            var currDay = a.toLowerCase();
            var nextDay = b.toLowerCase();
            return sorterWeekDays[currDay] > sorterWeekDays[nextDay] ? 1 : -1;
        });
    };
    PoPageJobSchedulerSummaryComponent.ctorParameters = function () { return [
        { type: DatePipe }
    ]; };
    __decorate([
        Input('p-literals'),
        __metadata("design:type", Object)
    ], PoPageJobSchedulerSummaryComponent.prototype, "literals", void 0);
    __decorate([
        Input('p-parameters'),
        __metadata("design:type", Array)
    ], PoPageJobSchedulerSummaryComponent.prototype, "parameters", void 0);
    __decorate([
        Input('p-value'),
        __metadata("design:type", Object)
    ], PoPageJobSchedulerSummaryComponent.prototype, "value", void 0);
    PoPageJobSchedulerSummaryComponent = __decorate([
        Component({
            selector: 'po-page-job-scheduler-summary',
            template: "<div class=\"po-md-12\">\n  <po-info [p-label]=\"literals.process\" [p-orientation]=\"infoOrientation\" [p-value]=\"value.processID\"> </po-info>\n\n  <po-info [p-label]=\"literals.periodicity\" [p-orientation]=\"infoOrientation\" [p-value]=\"periodicityValue\"> </po-info>\n\n  <po-info\n    *ngIf=\"value.periodicity !== 'single'\"\n    [p-label]=\"literals.execution\"\n    [p-orientation]=\"infoOrientation\"\n    [p-value]=\"executionValue\"\n  >\n  </po-info>\n\n  <po-info [p-label]=\"literals.recurrent\" [p-orientation]=\"infoOrientation\" [p-value]=\"recurrentValue\"> </po-info>\n\n  <po-info [p-label]=\"literals.firstExecution\" [p-orientation]=\"infoOrientation\" [p-value]=\"firstExecutionValue\">\n  </po-info>\n</div>\n\n<po-widget *ngIf=\"parameters && parameters.length\" class=\"po-pt-1 po-pb-1 po-md-12\" [p-title]=\"literals.parameters\">\n  <po-dynamic-view [p-fields]=\"parameters\" [p-value]=\"value.executionParameter\"> </po-dynamic-view>\n</po-widget>\n"
        }),
        __metadata("design:paramtypes", [DatePipe])
    ], PoPageJobSchedulerSummaryComponent);
    return PoPageJobSchedulerSummaryComponent;
}());
export { PoPageJobSchedulerSummaryComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tcGFnZS1qb2Itc2NoZWR1bGVyLXN1bW1hcnkuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHBvLXVpL25nLXRlbXBsYXRlcy8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3BvLXBhZ2Utam9iLXNjaGVkdWxlci9wby1wYWdlLWpvYi1zY2hlZHVsZXItc3VtbWFyeS9wby1wYWdlLWpvYi1zY2hlZHVsZXItc3VtbWFyeS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBQ3pELE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUUzQyxPQUFPLEVBQXNCLGlCQUFpQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFRN0U7SUFhRSw0Q0FBb0IsUUFBa0I7UUFBbEIsYUFBUSxHQUFSLFFBQVEsQ0FBVTtRQVp0QyxtQkFBYyxHQUFHLEVBQUUsQ0FBQztRQUNwQix3QkFBbUIsR0FBRyxFQUFFLENBQUM7UUFDekIsb0JBQWUsR0FBRyxpQkFBaUIsQ0FBQyxVQUFVLENBQUM7UUFDL0MscUJBQWdCLEdBQUcsRUFBRSxDQUFDO1FBQ3RCLG1CQUFjLEdBQUcsRUFBRSxDQUFDO1FBRUMsYUFBUSxHQUFRLEVBQUUsQ0FBQztRQUVqQixlQUFVLEdBQThCLEVBQUUsQ0FBQztRQUVoRCxVQUFLLEdBQWdDLEVBQUUsQ0FBQztJQUVqQixDQUFDO0lBRTFDLHFEQUFRLEdBQVI7UUFDUSxJQUFBLGVBQXlHLEVBQXZHLDRCQUFXLEVBQUUsY0FBSSxFQUFFLDBCQUFVLEVBQUUsMEJBQVUsRUFBRSx3QkFBUyxFQUFFLGtDQUFjLEVBQUUsMENBQWlDLENBQUM7UUFFaEgsSUFBSSxDQUFDLGdCQUFnQixHQUFHLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUM5RCxJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQyxp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QWMsR0FBRyxJQUFJLENBQUMsaUJBQWlCLEVBQUUsQ0FBQztRQUVoRCxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBQyxDQUFTLEVBQUUsQ0FBUztZQUNwQyxJQUFNLE9BQU8sR0FBRyxDQUFDLENBQUMsV0FBVyxFQUFFLENBQUM7WUFDaEMsSUFBTSxPQUFPLEdBQUcsQ0FBQyxDQUFDLFdBQVcsRUFBRSxDQUFDO1lBRWhDLE9BQU8sY0FBYyxDQUFDLE9BQU8sQ0FBQyxHQUFHLGNBQWMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNwRSxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7O2dCQTlHNkIsUUFBUTs7SUFOakI7UUFBcEIsS0FBSyxDQUFDLFlBQVksQ0FBQzs7d0VBQW9CO0lBRWpCO1FBQXRCLEtBQUssQ0FBQyxjQUFjLENBQUM7a0NBQWEsS0FBSzswRUFBMEI7SUFFaEQ7UUFBakIsS0FBSyxDQUFDLFNBQVMsQ0FBQzs7cUVBQXlDO0lBWC9DLGtDQUFrQztRQUo5QyxTQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUsK0JBQStCO1lBQ3pDLGkrQkFBMkQ7U0FDNUQsQ0FBQzt5Q0FjOEIsUUFBUTtPQWIzQixrQ0FBa0MsQ0E0SDlDO0lBQUQseUNBQUM7Q0FBQSxBQTVIRCxJQTRIQztTQTVIWSxrQ0FBa0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IERhdGVQaXBlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcblxuaW1wb3J0IHsgUG9EeW5hbWljVmlld0ZpZWxkLCBQb0luZm9PcmllbnRhdGlvbiB9IGZyb20gJ0Bwby11aS9uZy1jb21wb25lbnRzJztcblxuaW1wb3J0IHsgUG9Kb2JTY2hlZHVsZXJJbnRlcm5hbCB9IGZyb20gJy4uL2ludGVyZmFjZXMvcG8tam9iLXNjaGVkdWxlci1pbnRlcm5hbC5pbnRlcmZhY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdwby1wYWdlLWpvYi1zY2hlZHVsZXItc3VtbWFyeScsXG4gIHRlbXBsYXRlVXJsOiAncG8tcGFnZS1qb2Itc2NoZWR1bGVyLXN1bW1hcnkuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIFBvUGFnZUpvYlNjaGVkdWxlclN1bW1hcnlDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBleGVjdXRpb25WYWx1ZSA9ICcnO1xuICBmaXJzdEV4ZWN1dGlvblZhbHVlID0gJyc7XG4gIGluZm9PcmllbnRhdGlvbiA9IFBvSW5mb09yaWVudGF0aW9uLkhvcml6b250YWw7XG4gIHBlcmlvZGljaXR5VmFsdWUgPSAnJztcbiAgcmVjdXJyZW50VmFsdWUgPSAnJztcblxuICBASW5wdXQoJ3AtbGl0ZXJhbHMnKSBsaXRlcmFscyA9IDxhbnk+e307XG5cbiAgQElucHV0KCdwLXBhcmFtZXRlcnMnKSBwYXJhbWV0ZXJzOiBBcnJheTxQb0R5bmFtaWNWaWV3RmllbGQ+ID0gW107XG5cbiAgQElucHV0KCdwLXZhbHVlJykgdmFsdWU6IFBvSm9iU2NoZWR1bGVySW50ZXJuYWwgPSA8YW55Pnt9O1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgZGF0ZVBpcGU6IERhdGVQaXBlKSB7fVxuXG4gIG5nT25Jbml0KCkge1xuICAgIGNvbnN0IHsgcGVyaW9kaWNpdHksIGhvdXIsIGRheU9mTW9udGgsIGRheXNPZldlZWssIHJlY3VycmVudCwgZmlyc3RFeGVjdXRpb24sIGZpcnN0RXhlY3V0aW9uSG91ciB9ID0gdGhpcy52YWx1ZTtcblxuICAgIHRoaXMucGVyaW9kaWNpdHlWYWx1ZSA9IHRoaXMuZ2V0UGVyaW9kaWNpdHlMYWJlbChwZXJpb2RpY2l0eSk7XG4gICAgdGhpcy5leGVjdXRpb25WYWx1ZSA9IHRoaXMuZ2V0RXhlY3V0aW9uVmFsdWUocGVyaW9kaWNpdHksIGhvdXIsIGRheXNPZldlZWssIGRheU9mTW9udGgpO1xuICAgIHRoaXMuZmlyc3RFeGVjdXRpb25WYWx1ZSA9IHRoaXMuZ2V0Rmlyc3RFeGVjdXRpb25MYWJlbChmaXJzdEV4ZWN1dGlvbiwgZmlyc3RFeGVjdXRpb25Ib3VyKTtcbiAgICB0aGlzLnJlY3VycmVudFZhbHVlID0gdGhpcy5nZXRSZWN1cnJlbnRWYWx1ZShyZWN1cnJlbnQpO1xuICB9XG5cbiAgcHJpdmF0ZSBnZXRFeGVjdXRpb25WYWx1ZShwZXJpb2RpY2l0eTogc3RyaW5nLCBob3VyPzogc3RyaW5nLCBkYXlzT2ZXZWVrPzogQXJyYXk8c3RyaW5nPiwgZGF5T2ZNb250aD86IG51bWJlcikge1xuICAgIHN3aXRjaCAocGVyaW9kaWNpdHkpIHtcbiAgICAgIGNhc2UgJ2RhaWx5JzpcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0SG91ckxhYmVsKGhvdXIpO1xuICAgICAgY2FzZSAnbW9udGhseSc6XG4gICAgICAgIHJldHVybiB0aGlzLmdldE1vbnRobHlMYWJlbEV4ZWN1dGlvbihkYXlPZk1vbnRoLCBob3VyKTtcbiAgICAgIGNhc2UgJ3dlZWtseSc6XG4gICAgICAgIHJldHVybiB0aGlzLmdldFdlZWtseUxhYmVsRXhlY3V0aW9uKGRheXNPZldlZWssIGhvdXIpO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgcmV0dXJuIHRoaXMubGl0ZXJhbHMubm90UmVwb3J0ZWQ7XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBnZXRGaXJzdEV4ZWN1dGlvbkxhYmVsKGZpcnN0RXhlY3V0aW9uOiBEYXRlLCBmaXJzdEV4ZWN1dGlvbkhvdXI/OiBzdHJpbmcpOiBzdHJpbmcge1xuICAgIGlmIChmaXJzdEV4ZWN1dGlvbikge1xuICAgICAgY29uc3QgZGF0ZSA9IHRoaXMuZGF0ZVBpcGUudHJhbnNmb3JtKGZpcnN0RXhlY3V0aW9uLCAnZGQvTU0veXl5eScsICctMDIwMCcpO1xuXG4gICAgICByZXR1cm4gYCR7ZGF0ZX0gJHt0aGlzLmdldEhvdXJMYWJlbChmaXJzdEV4ZWN1dGlvbkhvdXIpfWA7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiB0aGlzLmxpdGVyYWxzLm5vdFJlcG9ydGVkO1xuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgZ2V0SG91ckxhYmVsKGhvdXI6IHN0cmluZykge1xuICAgIHJldHVybiBgJHt0aGlzLmxpdGVyYWxzLmF0fSAke2hvdXIgfHwgJzAwOjAwJ31oYDtcbiAgfVxuXG4gIHByaXZhdGUgZ2V0TW9udGhseUxhYmVsRXhlY3V0aW9uKGRheU9mTW9udGg6IG51bWJlciwgaG91cjogc3RyaW5nKSB7XG4gICAgY29uc3QgaG91ckxhYmVsID0gdGhpcy5nZXRIb3VyTGFiZWwoaG91cik7XG5cbiAgICByZXR1cm4gYCR7dGhpcy5saXRlcmFscy5kYXl9ICR7ZGF5T2ZNb250aH0gJHtob3VyTGFiZWx9YDtcbiAgfVxuXG4gIHByaXZhdGUgZ2V0UGVyaW9kaWNpdHlMYWJlbChwZXJpb2RpY2l0eSkge1xuICAgIHN3aXRjaCAocGVyaW9kaWNpdHkpIHtcbiAgICAgIGNhc2UgJ2RhaWx5JzpcbiAgICAgICAgcmV0dXJuIHRoaXMubGl0ZXJhbHMuZGFpbHk7XG4gICAgICBjYXNlICdtb250aGx5JzpcbiAgICAgICAgcmV0dXJuIHRoaXMubGl0ZXJhbHMubW9udGhseTtcbiAgICAgIGNhc2UgJ3dlZWtseSc6XG4gICAgICAgIHJldHVybiB0aGlzLmxpdGVyYWxzLndlZWtseTtcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHJldHVybiB0aGlzLmxpdGVyYWxzLnNpbmdsZTtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIGdldFJlY3VycmVudFZhbHVlKHJlY3VycmVudDogYm9vbGVhbik6IHN0cmluZyB7XG4gICAgcmV0dXJuIHJlY3VycmVudCA/IHRoaXMubGl0ZXJhbHMueWVzIDogdGhpcy5saXRlcmFscy5ubztcbiAgfVxuXG4gIHByaXZhdGUgZ2V0U29ydGVyV2Vla0RheXMoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICdzdW5kYXknOiAwLFxuICAgICAgJ21vbmRheSc6IDEsXG4gICAgICAndHVlc2RheSc6IDIsXG4gICAgICAnd2VkbmVzZGF5JzogMyxcbiAgICAgICd0aHVyc2RheSc6IDQsXG4gICAgICAnZnJpZGF5JzogNSxcbiAgICAgICdzYXR1cmRheSc6IDZcbiAgICB9O1xuICB9XG5cbiAgcHJpdmF0ZSBnZXRUcmFuc2xhdGVXZWVrRGF5KGRheTogc3RyaW5nKTogc3RyaW5nIHtcbiAgICBjb25zdCBkYXlzID0ge1xuICAgICAgU3VuZGF5OiB0aGlzLmxpdGVyYWxzLnN1bmRheSxcbiAgICAgIE1vbmRheTogdGhpcy5saXRlcmFscy5tb25kYXksXG4gICAgICBUdWVzZGF5OiB0aGlzLmxpdGVyYWxzLnR1ZXNkYXksXG4gICAgICBXZWRuZXNkYXk6IHRoaXMubGl0ZXJhbHMud2VkbmVzZGF5LFxuICAgICAgVGh1cnNkYXk6IHRoaXMubGl0ZXJhbHMudGh1cnNkYXksXG4gICAgICBGcmlkYXk6IHRoaXMubGl0ZXJhbHMuZnJpZGF5LFxuICAgICAgU2F0dXJkYXk6IHRoaXMubGl0ZXJhbHMuc2F0dXJkYXlcbiAgICB9O1xuXG4gICAgcmV0dXJuIGRheXNbZGF5XSB8fCAnJztcbiAgfVxuXG4gIHByaXZhdGUgZ2V0V2Vla0RheXNMYWJlbChkYXlzOiBBcnJheTxzdHJpbmc+ID0gW10pOiBzdHJpbmcge1xuICAgIGNvbnN0IHdlZWtEYXlzU29ydGVkID0gdGhpcy5zb3J0V2Vla0RheXMoZGF5cyk7XG5cbiAgICByZXR1cm4gd2Vla0RheXNTb3J0ZWQubWFwKGRheSA9PiB0aGlzLmdldFRyYW5zbGF0ZVdlZWtEYXkoZGF5KSkuam9pbignLCAnKTtcbiAgfVxuXG4gIHByaXZhdGUgZ2V0V2Vla2x5TGFiZWxFeGVjdXRpb24oZGF5c09mV2VlazogQXJyYXk8c3RyaW5nPiwgaG91cjogc3RyaW5nKSB7XG4gICAgaWYgKGRheXNPZldlZWsgJiYgQXJyYXkuaXNBcnJheShkYXlzT2ZXZWVrKSkge1xuICAgICAgcmV0dXJuIGAke3RoaXMuZ2V0V2Vla0RheXNMYWJlbChkYXlzT2ZXZWVrKX0gJHt0aGlzLmdldEhvdXJMYWJlbChob3VyKX1gO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gdGhpcy5saXRlcmFscy5ub3RSZXBvcnRlZDtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIHNvcnRXZWVrRGF5cyhkYXlzOiBBcnJheTxzdHJpbmc+ID0gW10pIHtcbiAgICBjb25zdCBzb3J0ZXJXZWVrRGF5cyA9IHRoaXMuZ2V0U29ydGVyV2Vla0RheXMoKTtcblxuICAgIHJldHVybiBkYXlzLnNvcnQoKGE6IHN0cmluZywgYjogc3RyaW5nKSA9PiB7XG4gICAgICBjb25zdCBjdXJyRGF5ID0gYS50b0xvd2VyQ2FzZSgpO1xuICAgICAgY29uc3QgbmV4dERheSA9IGIudG9Mb3dlckNhc2UoKTtcblxuICAgICAgcmV0dXJuIHNvcnRlcldlZWtEYXlzW2N1cnJEYXldID4gc29ydGVyV2Vla0RheXNbbmV4dERheV0gPyAxIDogLTE7XG4gICAgfSk7XG4gIH1cbn1cbiJdfQ==