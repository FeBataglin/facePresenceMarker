import { __decorate, __metadata } from "tslib";
import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import { NgForm } from '@angular/forms';
import { isTypeof } from '../../../utils/util';
import { PoPageJobSchedulerLookupService } from '../po-page-job-scheduler-lookup.service';
import { PoPageJobSchedulerService } from '../po-page-job-scheduler.service';
var PoPageJobSchedulerExecutionComponent = /** @class */ (function () {
    function PoPageJobSchedulerExecutionComponent(poPageJobSchedulerService, poPageJobSchedulerLookup) {
        this.poPageJobSchedulerService = poPageJobSchedulerService;
        this.poPageJobSchedulerLookup = poPageJobSchedulerLookup;
        this._value = {};
        this.dayPattern = '^(3[0-1]|[0-2][0-9]|[1-9]|0[1-9])$';
        this.existProcessAPI = true;
        this.minDateFirstExecution = new Date();
        this.periodicityOptions = [];
        this.timePattern = '^(2[0-3]|[01][0-9]):?([0-5][0-9])$';
        this.weekDays = [];
        this.isEdit = false;
        this.literals = {};
        this.changeProcess = new EventEmitter();
    }
    Object.defineProperty(PoPageJobSchedulerExecutionComponent.prototype, "value", {
        get: function () {
            return this._value;
        },
        set: function (value) {
            this._value = value && isTypeof(value, 'object') ? value : {};
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageJobSchedulerExecutionComponent.prototype, "startDateFirstExecution", {
        get: function () {
            return this.isEdit ? undefined : this.minDateFirstExecution;
        },
        enumerable: true,
        configurable: true
    });
    PoPageJobSchedulerExecutionComponent.prototype.ngAfterViewInit = function () {
        var _this = this;
        setTimeout(function () {
            _this.subscribeProcessIdValueChanges();
        });
    };
    PoPageJobSchedulerExecutionComponent.prototype.ngOnInit = function () {
        this.periodicityTemplates = {
            daily: this.dailyTemplate,
            monthly: this.monthlyTemplate,
            weekly: this.weeklyTempalte
        };
        this.checkExistsProcessesAPI();
        this.periodicityOptions = this.getPeriodicityOptions();
        this.weekDays = this.getWeekDays();
    };
    PoPageJobSchedulerExecutionComponent.prototype.checkExistsProcessesAPI = function () {
        var _this = this;
        this.poPageJobSchedulerService.getHeadProcesses().subscribe(undefined, function (error) {
            _this.existProcessAPI = false;
        });
    };
    PoPageJobSchedulerExecutionComponent.prototype.getPeriodicityOptions = function () {
        return [
            { label: this.literals.single, value: 'single' },
            { label: this.literals.daily, value: 'daily' },
            { label: this.literals.weekly, value: 'weekly' },
            { label: this.literals.monthly, value: 'monthly' }
        ];
    };
    PoPageJobSchedulerExecutionComponent.prototype.getWeekDays = function () {
        return [
            { label: this.literals.sunday, value: 'Sunday' },
            { label: this.literals.monday, value: 'Monday' },
            { label: this.literals.tuesday, value: 'Tuesday' },
            { label: this.literals.wednesday, value: 'Wednesday' },
            { label: this.literals.thursday, value: 'Thursday' },
            { label: this.literals.friday, value: 'Friday' },
            { label: this.literals.saturday, value: 'Saturday' }
        ];
    };
    PoPageJobSchedulerExecutionComponent.prototype.subscribeProcessIdValueChanges = function () {
        var _this = this;
        this.form.controls['processID'].valueChanges.subscribe(function (processId) {
            _this.changeProcess.emit({ processId: processId, existAPI: _this.existProcessAPI });
        });
    };
    PoPageJobSchedulerExecutionComponent.ctorParameters = function () { return [
        { type: PoPageJobSchedulerService },
        { type: PoPageJobSchedulerLookupService }
    ]; };
    __decorate([
        ViewChild('formExecution', { static: true }),
        __metadata("design:type", NgForm)
    ], PoPageJobSchedulerExecutionComponent.prototype, "form", void 0);
    __decorate([
        ViewChild('dailyTemplate', { static: true }),
        __metadata("design:type", Object)
    ], PoPageJobSchedulerExecutionComponent.prototype, "dailyTemplate", void 0);
    __decorate([
        ViewChild('monthlyTemplate', { static: true }),
        __metadata("design:type", Object)
    ], PoPageJobSchedulerExecutionComponent.prototype, "monthlyTemplate", void 0);
    __decorate([
        ViewChild('weeklyTemplate', { static: true }),
        __metadata("design:type", Object)
    ], PoPageJobSchedulerExecutionComponent.prototype, "weeklyTempalte", void 0);
    __decorate([
        Input('p-is-edit'),
        __metadata("design:type", Boolean)
    ], PoPageJobSchedulerExecutionComponent.prototype, "isEdit", void 0);
    __decorate([
        Input('p-literals'),
        __metadata("design:type", Object)
    ], PoPageJobSchedulerExecutionComponent.prototype, "literals", void 0);
    __decorate([
        Input('p-value'),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], PoPageJobSchedulerExecutionComponent.prototype, "value", null);
    __decorate([
        Output('p-change-process'),
        __metadata("design:type", EventEmitter)
    ], PoPageJobSchedulerExecutionComponent.prototype, "changeProcess", void 0);
    PoPageJobSchedulerExecutionComponent = __decorate([
        Component({
            selector: 'po-page-job-scheduler-execution',
            template: "<form #formExecution=\"ngForm\">\n  <div class=\"po-row\">\n    <ng-container *ngIf=\"existProcessAPI; then lookupProcessesID; else inputProcessesID\"></ng-container>\n  </div>\n\n  <div class=\"po-row\">\n    <po-divider class=\"po-md-12\" [p-label]=\"literals.firstExecution\"></po-divider>\n\n    <po-datepicker\n      class=\"po-md-4\"\n      name=\"firstExecution\"\n      [(ngModel)]=\"value.firstExecution\"\n      p-placeholder=\"dd/mm/aaaa\"\n      p-required\n      [p-disabled]=\"isEdit\"\n      [p-label]=\"literals.day\"\n      [p-min-date]=\"startDateFirstExecution\"\n    >\n    </po-datepicker>\n\n    <po-input\n      class=\"po-md-2\"\n      name=\"firstExecutionHour\"\n      [(ngModel)]=\"value.firstExecutionHour\"\n      p-mask=\"99:99\"\n      p-mask-format-model\n      p-placeholder=\"HH:mm\"\n      p-required\n      [p-disabled]=\"isEdit\"\n      [p-label]=\"literals.hour\"\n      [p-pattern]=\"timePattern\"\n    >\n    </po-input>\n  </div>\n\n  <hr />\n\n  <div class=\"po-row\">\n    <po-radio-group\n      class=\"po-sm-12\"\n      name=\"periodicity\"\n      [(ngModel)]=\"value.periodicity\"\n      p-columns=\"4\"\n      p-required\n      [p-label]=\"literals.periodicity\"\n      [p-options]=\"periodicityOptions\"\n    >\n    </po-radio-group>\n\n    <ng-container *ngIf=\"value.periodicity !== 'single'\">\n      <po-divider class=\"po-md-12\" [p-label]=\"literals.periodicityData\"> </po-divider>\n\n      <div class=\"po-row\">\n        <ng-container *ngTemplateOutlet=\"periodicityTemplates[value.periodicity]\"> </ng-container>\n      </div>\n\n      <div class=\"po-row\">\n        <po-switch\n          class=\"po-md-3\"\n          name=\"recurrent\"\n          [(ngModel)]=\"value.recurrent\"\n          [p-label]=\"literals.recurrent\"\n          [p-label-off]=\"literals.no\"\n          [p-label-on]=\"literals.yes\"\n        >\n        </po-switch>\n      </div>\n    </ng-container>\n  </div>\n\n  <ng-template #lookupProcessesID>\n    <po-lookup\n      class=\"po-md-12\"\n      name=\"processID\"\n      [(ngModel)]=\"value.processID\"\n      p-field-label=\"description\"\n      p-field-value=\"processID\"\n      p-required\n      [p-disabled]=\"isEdit\"\n      [p-filter-service]=\"poPageJobSchedulerLookup\"\n      [p-label]=\"literals.process\"\n      [p-placeholder]=\"literals.enterProcess\"\n    >\n    </po-lookup>\n  </ng-template>\n\n  <ng-template #inputProcessesID>\n    <po-input\n      class=\"po-md-12\"\n      name=\"processID\"\n      [(ngModel)]=\"value.processID\"\n      p-required\n      [p-disabled]=\"isEdit\"\n      [p-label]=\"literals.process\"\n      [p-placeholder]=\"literals.enterProcess\"\n    >\n    </po-input>\n  </ng-template>\n\n  <ng-template #dailyTemplate>\n    <ng-container *ngTemplateOutlet=\"inputHourTemplate\"> </ng-container>\n  </ng-template>\n\n  <ng-template #weeklyTemplate>\n    <div class=\"po-row\">\n      <ng-container *ngTemplateOutlet=\"inputHourTemplate\"> </ng-container>\n    </div>\n\n    <po-checkbox-group\n      class=\"po-md-12\"\n      name=\"daysOfWeek\"\n      [(ngModel)]=\"value.daysOfWeek\"\n      p-columns=\"4\"\n      p-required\n      [p-label]=\"literals.weekDays\"\n      [p-options]=\"weekDays\"\n    >\n    </po-checkbox-group>\n  </ng-template>\n\n  <ng-template #monthlyTemplate>\n    <po-number\n      class=\"po-md-3\"\n      name=\"dayOfMonth\"\n      [(ngModel)]=\"value.dayOfMonth\"\n      p-required\n      [p-error-pattern]=\"'Dia inv\u00E1lido'\"\n      [p-label]=\"literals.day\"\n      [p-max]=\"31\"\n      [p-pattern]=\"dayPattern\"\n    >\n    </po-number>\n\n    <ng-container *ngTemplateOutlet=\"inputHourTemplate\"> </ng-container>\n  </ng-template>\n\n  <ng-template #inputHourTemplate>\n    <po-input\n      class=\"po-md-2\"\n      name=\"hour\"\n      [(ngModel)]=\"value.hour\"\n      p-mask=\"99:99\"\n      p-mask-format-model\n      p-placeholder=\"HH:mm\"\n      p-required\n      [p-label]=\"literals.hour\"\n      [p-pattern]=\"timePattern\"\n    >\n    </po-input>\n  </ng-template>\n</form>\n"
        }),
        __metadata("design:paramtypes", [PoPageJobSchedulerService,
            PoPageJobSchedulerLookupService])
    ], PoPageJobSchedulerExecutionComponent);
    return PoPageJobSchedulerExecutionComponent;
}());
export { PoPageJobSchedulerExecutionComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tcGFnZS1qb2Itc2NoZWR1bGVyLWV4ZWN1dGlvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AcG8tdWkvbmctdGVtcGxhdGVzLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tcGFnZS1qb2Itc2NoZWR1bGVyL3BvLXBhZ2Utam9iLXNjaGVkdWxlci1leGVjdXRpb24vcG8tcGFnZS1qb2Itc2NoZWR1bGVyLWV4ZWN1dGlvbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBaUIsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQVUsTUFBTSxFQUFlLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN0SCxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFJeEMsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBRS9DLE9BQU8sRUFBRSwrQkFBK0IsRUFBRSxNQUFNLHlDQUF5QyxDQUFDO0FBQzFGLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBTTdFO0lBZ0NFLDhDQUNVLHlCQUFvRCxFQUNyRCx3QkFBeUQ7UUFEeEQsOEJBQXlCLEdBQXpCLHlCQUF5QixDQUEyQjtRQUNyRCw2QkFBd0IsR0FBeEIsd0JBQXdCLENBQWlDO1FBakMxRCxXQUFNLEdBQVEsRUFBRSxDQUFDO1FBRXpCLGVBQVUsR0FBRyxvQ0FBb0MsQ0FBQztRQUNsRCxvQkFBZSxHQUFHLElBQUksQ0FBQztRQUN2QiwwQkFBcUIsR0FBRyxJQUFJLElBQUksRUFBRSxDQUFDO1FBQ25DLHVCQUFrQixHQUE4QixFQUFFLENBQUM7UUFFbkQsZ0JBQVcsR0FBRyxvQ0FBb0MsQ0FBQztRQUNuRCxhQUFRLEdBQWlDLEVBQUUsQ0FBQztRQVN4QixXQUFNLEdBQVksS0FBSyxDQUFDO1FBRXZCLGFBQVEsR0FBUSxFQUFFLENBQUM7UUFVWixrQkFBYSxHQUFzQixJQUFJLFlB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b0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBZnRlclZpZXdJbml0LCBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE9uSW5pdCwgT3V0cHV0LCBUZW1wbGF0ZVJlZiwgVmlld0NoaWxkIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOZ0Zvcm0gfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5cbmltcG9ydCB7IFBvQ2hlY2tib3hHcm91cE9wdGlvbiwgUG9SYWRpb0dyb3VwT3B0aW9uIH0gZnJvbSAnQHBvLXVpL25nLWNvbXBvbmVudHMnO1xuXG5pbXBvcnQgeyBpc1R5cGVvZiB9IGZyb20gJy4uLy4uLy4uL3V0aWxzL3V0aWwnO1xuXG5pbXBvcnQgeyBQb1BhZ2VKb2JTY2hlZHVsZXJMb29rdXBTZXJ2aWNlIH0gZnJvbSAnLi4vcG8tcGFnZS1qb2Itc2NoZWR1bGVyLWxvb2t1cC5zZXJ2aWNlJztcbmltcG9ydCB7IFBvUGFnZUpvYlNjaGVkdWxlclNlcnZpY2UgfSBmcm9tICcuLi9wby1wYWdlLWpvYi1zY2hlZHVsZXIuc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3BvLXBhZ2Utam9iLXNjaGVkdWxlci1leGVjdXRpb24nLFxuICB0ZW1wbGF0ZVVybDogJ3BvLXBhZ2Utam9iLXNjaGVkdWxlci1leGVjdXRpb24uY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIFBvUGFnZUpvYlNjaGVkdWxlckV4ZWN1dGlvbkNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgQWZ0ZXJWaWV3SW5pdCB7XG4gIHByaXZhdGUgX3ZhbHVlOiBhbnkgPSB7fTtcblxuICBkYXlQYXR0ZXJuID0gJ14oM1swLTFdfFswLTJdWzAtOV18WzEtOV18MFsxLTldKSQnO1xuICBleGlzdFByb2Nlc3NBUEkgPSB0cnVlO1xuICBtaW5EYXRlRmlyc3RFeGVjdXRpb24gPSBuZXcgRGF0ZSgpO1xuICBwZXJpb2RpY2l0eU9wdGlvbnM6IEFycmF5PFBvUmFkaW9Hcm91cE9wdGlvbj4gPSBbXTtcbiAgcGVyaW9kaWNpdHlUZW1wbGF0ZXM6IHsgZGFpbHk6IFRlbXBsYXRlUmVmPGFueT47IHdlZWtseTogVGVtcGxhdGVSZWY8YW55PjsgbW9udGhseTogVGVtcGxhdGVSZWY8YW55PiB9O1xuICB0aW1lUGF0dGVybiA9ICdeKDJbMC0zXXxbMDFdWzAtOV0pOj8oWzAtNV1bMC05XSkkJztcbiAgd2Vla0RheXM6IEFycmF5PFBvQ2hlY2tib3hHcm91cE9wdGlvbj4gPSBbXTtcblxuICBAVmlld0NoaWxkKCdmb3JtRXhlY3V0aW9uJywgeyBzdGF0aWM6IHRydWUgfSkgZm9ybTogTmdGb3JtO1xuXG4gIC8vIHRlbXBsYXRlc1xuICBAVmlld0NoaWxkKCdkYWlseVRlbXBsYXRlJywgeyBzdGF0aWM6IHRydWUgfSkgZGFpbHlUZW1wbGF0ZTtcbiAgQFZpZXdDaGlsZCgnbW9udGhseVRlbXBsYXRlJywgeyBzdGF0aWM6IHRydWUgfSkgbW9udGhseVRlbXBsYXRlO1xuICBAVmlld0NoaWxkKCd3ZWVrbHlUZW1wbGF0ZScsIHsgc3RhdGljOiB0cnVlIH0pIHdlZWtseVRlbXBhbHRlO1xuXG4gIEBJbnB1dCgncC1pcy1lZGl0JykgaXNFZGl0OiBib29sZWFuID0gZmFsc2U7XG5cbiAgQElucHV0KCdwLWxpdGVyYWxzJykgbGl0ZXJhbHMgPSA8YW55Pnt9O1xuXG4gIEBJbnB1dCgncC12YWx1ZScpIHNldCB2YWx1ZSh2YWx1ZTogYW55KSB7XG4gICAgdGhpcy5fdmFsdWUgPSB2YWx1ZSAmJiBpc1R5cGVvZih2YWx1ZSwgJ29iamVjdCcpID8gdmFsdWUgOiB7fTtcbiAgfVxuXG4gIGdldCB2YWx1ZSgpIHtcbiAgICByZXR1cm4gdGhpcy5fdmFsdWU7XG4gIH1cblxuICBAT3V0cHV0KCdwLWNoYW5nZS1wcm9jZXNzJykgY2hhbmdlUHJvY2VzczogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIHBvUGFnZUpvYlNjaGVkdWxlclNlcnZpY2U6IFBvUGFnZUpvYlNjaGVkdWxlclNlcnZpY2UsXG4gICAgcHVibGljIHBvUGFnZUpvYlNjaGVkdWxlckxvb2t1cDogUG9QYWdlSm9iU2NoZWR1bGVyTG9va3VwU2VydmljZVxuICApIHt9XG5cbiAgZ2V0IHN0YXJ0RGF0ZUZpcnN0RXhlY3V0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLmlzRWRpdCA/IHVuZGVmaW5lZCA6IHRoaXMubWluRGF0ZUZpcnN0RXhlY3V0aW9uO1xuICB9XG5cbiAgbmdBZnRlclZpZXdJbml0KCkge1xuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgdGhpcy5zdWJzY3JpYmVQcm9jZXNzSWRWYWx1ZUNoYW5nZXMoKTtcbiAgICB9KTtcbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMucGVyaW9kaWNpdHlUZW1wbGF0ZXMgPSB7XG4gICAgICBkYWlseTogdGhpcy5kYWlseVRlbXBsYXRlLFxuICAgICAgbW9udGhseTogdGhpcy5tb250aGx5VGVtcGxhdGUsXG4gICAgICB3ZWVrbHk6IHRoaXMud2Vla2x5VGVtcGFsdGVcbiAgICB9O1xuXG4gICAgdGhpcy5jaGVja0V4aXN0c1Byb2Nlc3Nlc0FQSSgpO1xuXG4gICAgdGhpcy5wZXJpb2RpY2l0eU9wdGlvbnMgPSB0aGlzLmdldFBlcmlvZGljaXR5T3B0aW9ucygpO1xuICAgIHRoaXMud2Vla0RheXMgPSB0aGlzLmdldFdlZWtEYXlzKCk7XG4gIH1cblxuICBwcml2YXRlIGNoZWNrRXhpc3RzUHJvY2Vzc2VzQVBJKCkge1xuICAgIHRoaXMucG9QYWdlSm9iU2NoZWR1bGVyU2VydmljZS5nZXRIZWFkUHJvY2Vzc2VzKCkuc3Vic2NyaWJlKHVuZGVmaW5lZCwgZXJyb3IgPT4ge1xuICAgICAgdGhpcy5leGlzdFByb2Nlc3NBUEkgPSBmYWxzZTtcbiAgICB9KTtcbiAgfVxuXG4gIHByaXZhdGUgZ2V0UGVyaW9kaWNpdHlPcHRpb25zKCkge1xuICAgIHJldHVybiBbXG4gICAgICB7IGxhYmVsOiB0aGlzLmxpdGVyYWxzLnNpbmdsZSwgdmFsdWU6ICdzaW5nbGUnIH0sXG4gICAgICB7IGxhYmVsOiB0aGlzLmxpdGVyYWxzLmRhaWx5LCB2YWx1ZTogJ2RhaWx5JyB9LFxuICAgICAgeyBsYWJlbDogdGhpcy5saXRlcmFscy53ZWVrbHksIHZhbHVlOiAnd2Vla2x5JyB9LFxuICAgICAgeyBsYWJlbDogdGhpcy5saXRlcmFscy5tb250aGx5LCB2YWx1ZTogJ21vbnRobHknIH1cbiAgICBdO1xuICB9XG5cbiAgcHJpdmF0ZSBnZXRXZWVrRGF5cygpIHtcbiAgICByZXR1cm4gW1xuICAgICAgeyBsYWJlbDogdGhpcy5saXRlcmFscy5zdW5kYXksIHZhbHVlOiAnU3VuZGF5JyB9LFxuICAgICAgeyBsYWJlbDogdGhpcy5saXRlcmFscy5tb25kYXksIHZhbHVlOiAnTW9uZGF5JyB9LFxuICAgICAgeyBsYWJlbDogdGhpcy5saXRlcmFscy50dWVzZGF5LCB2YWx1ZTogJ1R1ZXNkYXknIH0sXG4gICAgICB7IGxhYmVsOiB0aGlzLmxpdGVyYWxzLndlZG5lc2RheSwgdmFsdWU6ICdXZWRuZXNkYXknIH0sXG4gICAgICB7IGxhYmVsOiB0aGlzLmxpdGVyYWxzLnRodXJzZGF5LCB2YWx1ZTogJ1RodXJzZGF5JyB9LFxuICAgICAgeyBsYWJlbDogdGhpcy5saXRlcmFscy5mcmlkYXksIHZhbHVlOiAnRnJpZGF5JyB9LFxuICAgICAgeyBsYWJlbDogdGhpcy5saXRlcmFscy5zYXR1cmRheSwgdmFsdWU6ICdTYXR1cmRheScgfVxuICAgIF07XG4gIH1cblxuICBwcml2YXRlIHN1YnNjcmliZVByb2Nlc3NJZFZhbHVlQ2hhbmdlcygpIHtcbiAgICB0aGlzLmZvcm0uY29udHJvbHNbJ3Byb2Nlc3NJRCddLnZhbHVlQ2hhbmdlcy5zdWJzY3JpYmUocHJvY2Vzc0lkID0+IHtcbiAgICAgIHRoaXMuY2hhbmdlUHJvY2Vzcy5lbWl0KHsgcHJvY2Vzc0lkLCBleGlzdEFQSTogdGhpcy5leGlzdFByb2Nlc3NBUEkgfSk7XG4gICAgfSk7XG4gIH1cbn1cbiJdfQ==