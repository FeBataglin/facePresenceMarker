import { __decorate, __metadata } from "tslib";
import { Injectable } from '@angular/core';
import { HttpClient, HttpHeaders } from '@angular/common/http';
import { of } from 'rxjs';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common/http";
var PoPageDynamicEditActionsService = /** @class */ (function () {
    function PoPageDynamicEditActionsService(http) {
        this.http = http;
        this.headers = new HttpHeaders({
            'X-PO-SCREEN-LOCK': 'true'
        });
    }
    PoPageDynamicEditActionsService.prototype.beforeCancel = function (action) {
        return this.executeAction({ action: action });
    };
    PoPageDynamicEditActionsService.prototype.beforeSave = function (action, id, body) {
        var resource = body !== null && body !== void 0 ? body : {};
        return this.executeAction({ action: action, resource: resource, id: id });
    };
    PoPageDynamicEditActionsService.prototype.beforeSaveNew = function (action, id, body) {
        var resource = body !== null && body !== void 0 ? body : {};
        return this.executeAction({ action: action, resource: resource, id: id });
    };
    PoPageDynamicEditActionsService.prototype.executeAction = function (_a) {
        var action = _a.action, _b = _a.resource, resource = _b === void 0 ? {} : _b, id = _a.id;
        if (!action) {
            return of({});
        }
        if (typeof action === 'string') {
            var url = id ? action + "/" + id : action;
            return this.http.post(url, resource, { headers: this.headers });
        }
        return of(action(resource, id));
    };
    PoPageDynamicEditActionsService.ctorParameters = function () { return [
        { type: HttpClient }
    ]; };
    PoPageDynamicEditActionsService.ɵprov = i0.ɵɵdefineInjectable({ factory: function PoPageDynamicEditActionsService_Factory() { return new PoPageDynamicEditActionsService(i0.ɵɵinject(i1.HttpClient)); }, token: PoPageDynamicEditActionsService, providedIn: "root" });
    PoPageDynamicEditActionsService = __decorate([
        Injectable({
            providedIn: 'root'
        }),
        __metadata("design:paramtypes", [HttpClient])
    ], PoPageDynamicEditActionsService);
    return PoPageDynamicEditActionsService;
}());
export { PoPageDynamicEditActionsService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tcGFnZS1keW5hbWljLWVkaXQtYWN0aW9ucy5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHBvLXVpL25nLXRlbXBsYXRlcy8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3BvLXBhZ2UtZHluYW1pYy1lZGl0L3BvLXBhZ2UtZHluYW1pYy1lZGl0LWFjdGlvbnMuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsVUFBVSxFQUFFLFdBQVcsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQy9ELE9BQU8sRUFBRSxFQUFFLEVBQWMsTUFBTSxNQUFNLENBQUM7OztBQWdCdEM7SUFLRSx5Q0FBb0IsSUFBZ0I7UUFBaEIsU0FBSSxHQUFKLElBQUksQ0FBWTtRQUozQixZQUFPLEdBQWdCLElBQUksV0FBVyxDQUFDO1lBQzlDLGtCQUFrQixFQUFFLE1BQU07U0FDM0IsQ0FBQyxDQUFDO0lBRW9DLENBQUM7SUFFeEMsc0RBQVksR0FBWixVQUFhLE1BQWdEO1FBQzNELE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQyxFQUFFLE1BQU0sUUFBQSxFQUFFLENBQUMsQ0FBQztJQUN4QyxDQUFDO0lBRUQsb0RBQVUsR0FBVixVQUNFLE1BQThDLEVBQzlDLEVBQVUsRUFDVixJQUFTO1FBRVQsSUFBTSxRQUFRLEdBQUcsSUFBSSxhQUFKLElBQUksY0FBSixJQUFJLEdBQUksRUFBRSxDQUFDO1FBQzVCLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQyxFQUFFLE1BQU0sUUFBQSxFQUFFLFFBQVEsVUFBQSxFQUFFLEVBQUUsSUFBQSxFQUFFLENBQUMsQ0FBQztJQUN0RCxDQUFDO0lBRUQsdURBQWEsR0FBYixVQUNFLE1BQWlELEVBQ2pELEVBQVUsRUFDVixJQUFTO1FBRVQsSUFBTSxRQUFRLEdBQUcsSUFBSSxhQUFKLElBQUksY0FBSixJQUFJLEdBQUksRUFBRSxDQUFDO1FBQzVCLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQyxFQUFFLE1BQU0sUUFBQSxFQUFFLFFBQVEsVUFBQSxFQUFFLEVBQUUsSUFBQSxFQUFFLENBQUMsQ0FBQztJQUN0RCxDQUFDO0lBRU8sdURBQWEsR0FBckIsVUFBeUIsRUFBcUQ7WUFBbkQsa0JBQU0sRUFBRSxnQkFBYSxFQUFiLGtDQUFhLEVBQUUsVUFBRTtRQUNsRCxJQUFJLENBQUMsTUFBTSxFQUFFO1lBQ1gsT0FBTyxFQUFFLENBQUksRUFBRSxDQUFDLENBQUM7U0FDbEI7UUFFRCxJQUFJLE9BQU8sTUFBTSxLQUFLLFFBQVEsRUFBRTtZQUM5QixJQUFNLEdBQUcsR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFJLE1BQU0sU0FBSSxFQUFJLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQztZQUU1QyxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFJLEdBQUcsRUFBRSxRQUFRLEVBQUUsRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUM7U0FDcEU7UUFFRCxPQUFPLEVBQUUsQ0FBQyxNQUFNLENBQUMsUUFBUSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDbEMsQ0FBQzs7Z0JBcEN5QixVQUFVOzs7SUFMekIsK0JBQStCO1FBSDNDLFVBQVUsQ0FBQztZQUNWLFVBQVUsRUFBRSxNQUFNO1NBQ25CLENBQUM7eUNBTTBCLFVBQVU7T0FMekIsK0JBQStCLENBMEMzQzswQ0E1REQ7Q0E0REMsQUExQ0QsSUEwQ0M7U0ExQ1ksK0JBQStCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSHR0cENsaWVudCwgSHR0cEhlYWRlcnMgfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XG5pbXBvcnQgeyBvZiwgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuXG5pbXBvcnQgeyBQb1BhZ2VEeW5hbWljRWRpdEFjdGlvbnMgfSBmcm9tICcuL2ludGVyZmFjZXMvcG8tcGFnZS1keW5hbWljLWVkaXQtYWN0aW9ucy5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgUG9QYWdlRHluYW1pY0VkaXRCZWZvcmVDYW5jZWwgfSBmcm9tICcuL2ludGVyZmFjZXMvcG8tcGFnZS1keW5hbWljLWVkaXQtYmVmb3JlLWNhbmNlbC5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgUG9QYWdlRHluYW1pY0VkaXRCZWZvcmVTYXZlIH0gZnJvbSAnLi9pbnRlcmZhY2VzL3BvLXBhZ2UtZHluYW1pYy1lZGl0LWJlZm9yZS1zYXZlLmludGVyZmFjZSc7XG5pbXBvcnQgeyBQb1BhZ2VEeW5hbWljRWRpdEJlZm9yZVNhdmVOZXcgfSBmcm9tICcuL2ludGVyZmFjZXMvcG8tcGFnZS1keW5hbWljLWVkaXQtYmVmb3JlLXNhdmUtbmV3LmludGVyZmFjZSc7XG5cbmludGVyZmFjZSBFeGVjdXRlQWN0aW9uUGFyYW1ldGVyIHtcbiAgYWN0aW9uOiBzdHJpbmcgfCBGdW5jdGlvbjtcbiAgaWQ/OiBzdHJpbmcgfCBudW1iZXI7XG4gIHJlc291cmNlPzogYW55O1xufVxuXG5ASW5qZWN0YWJsZSh7XG4gIHByb3ZpZGVkSW46ICdyb290J1xufSlcbmV4cG9ydCBjbGFzcyBQb1BhZ2VEeW5hbWljRWRpdEFjdGlvbnNTZXJ2aWNlIHtcbiAgcmVhZG9ubHkgaGVhZGVyczogSHR0cEhlYWRlcnMgPSBuZXcgSHR0cEhlYWRlcnMoe1xuICAgICdYLVBPLVNDUkVFTi1MT0NLJzogJ3RydWUnXG4gIH0pO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgaHR0cDogSHR0cENsaWVudCkge31cblxuICBiZWZvcmVDYW5jZWwoYWN0aW9uOiBQb1BhZ2VEeW5hbWljRWRpdEFjdGlvbnNbJ2JlZm9yZUNhbmNlbCddKTogT2JzZXJ2YWJsZTxQb1BhZ2VEeW5hbWljRWRpdEJlZm9yZUNhbmNlbD4ge1xuICAgIHJldHVybiB0aGlzLmV4ZWN1dGVBY3Rpb24oeyBhY3Rpb24gfSk7XG4gIH1cblxuICBiZWZvcmVTYXZlKFxuICAgIGFjdGlvbjogUG9QYWdlRHluYW1pY0VkaXRBY3Rpb25zWydiZWZvcmVTYXZlJ10sXG4gICAgaWQ6IHN0cmluZyxcbiAgICBib2R5OiBhbnlcbiAgKTogT2JzZXJ2YWJsZTxQb1BhZ2VEeW5hbWljRWRpdEJlZm9yZVNhdmU+IHtcbiAgICBjb25zdCByZXNvdXJjZSA9IGJvZHkgPz8ge307XG4gICAgcmV0dXJuIHRoaXMuZXhlY3V0ZUFjdGlvbih7IGFjdGlvbiwgcmVzb3VyY2UsIGlkIH0pO1xuICB9XG5cbiAgYmVmb3JlU2F2ZU5ldyhcbiAgICBhY3Rpb246IFBvUGFnZUR5bmFtaWNFZGl0QWN0aW9uc1snYmVmb3JlU2F2ZU5ldyddLFxuICAgIGlkOiBzdHJpbmcsXG4gICAgYm9keTogYW55XG4gICk6IE9ic2VydmFibGU8UG9QYWdlRHluYW1pY0VkaXRCZWZvcmVTYXZlTmV3PiB7XG4gICAgY29uc3QgcmVzb3VyY2UgPSBib2R5ID8/IHt9O1xuICAgIHJldHVybiB0aGlzLmV4ZWN1dGVBY3Rpb24oeyBhY3Rpb24sIHJlc291cmNlLCBpZCB9KTtcbiAgfVxuXG4gIHByaXZhdGUgZXhlY3V0ZUFjdGlvbjxUPih7IGFjdGlvbiwgcmVzb3VyY2UgPSB7fSwgaWQgfTogRXhlY3V0ZUFjdGlvblBhcmFtZXRlcik6IE9ic2VydmFibGU8VD4ge1xuICAgIGlmICghYWN0aW9uKSB7XG4gICAgICByZXR1cm4gb2YoPFQ+e30pO1xuICAgIH1cblxuICAgIGlmICh0eXBlb2YgYWN0aW9uID09PSAnc3RyaW5nJykge1xuICAgICAgY29uc3QgdXJsID0gaWQgPyBgJHthY3Rpb259LyR7aWR9YCA6IGFjdGlvbjtcblxuICAgICAgcmV0dXJuIHRoaXMuaHR0cC5wb3N0PFQ+KHVybCwgcmVzb3VyY2UsIHsgaGVhZGVyczogdGhpcy5oZWFkZXJzIH0pO1xuICAgIH1cblxuICAgIHJldHVybiBvZihhY3Rpb24ocmVzb3VyY2UsIGlkKSk7XG4gIH1cbn1cbiJdfQ==