import { __assign, __decorate, __metadata, __extends, __spread, __read, __awaiter, __generator } from 'tslib';
import { EventEmitter, Input, Output, Directive, Injectable, ViewChild, Component, NgModule, ChangeDetectorRef, ElementRef, ChangeDetectionStrategy, ViewContainerRef, ɵɵdefineInjectable, ɵɵinject, ViewEncapsulation, IterableDiffers } from '@angular/core';
import { CommonModule, DatePipe } from '@angular/common';
import { NgForm, FormsModule } from '@angular/forms';
import { PoI18nPipe, PoModalComponent, PoFieldModule, PoModalModule, PoDividerModule, PoModule, PoComponentInjectorService, PoNotificationService, PoLanguageService, PoDialogService, PoDynamicModule, PoPageModule, PoWidgetModule, PoDynamicFormComponent, PoGridComponent, PoButtonModule, PoGridModule, InputBoolean, PoDynamicFieldType, PoLanguageModule, PoTableColumnSortType, PoTableModule, PoStepperStatus, PoInfoOrientation, PoContainerModule, PoDialogModule, PoInfoModule, PoStepperModule } from '@po-ui/ng-components';
import { Router, RouterModule, ActivatedRoute } from '@angular/router';
import { HttpClient, HttpHeaders, HttpClientModule } from '@angular/common/http';
import { of, merge, throwError, from, EMPTY, concat, Subscription } from 'rxjs';
import { map, catchError, switchMap, tap } from 'rxjs/operators';

// Idiomas suportados pelas páginas
var poLocales = ['pt', 'en', 'es', 'ru'];
// Idioma padrão
var poLocaleDefault = 'pt';
/**
 * @deprecated
 * Utilize o método `getShortBrowserLanguage`.
 *
 * @description
 * Retorna idioma do browser ou o idioma padrão.
 */
function browserLanguage() {
    return getShortBrowserLanguage();
}
/**
 * Retorna o idioma atual do navegador
 */
function getBrowserLanguage() {
    // navigator.userLanguage is the value for IE10
    return navigator.language || navigator['userLanguage'];
}
/**
 * Retorna o idioma do navegador, com somente as duas primeiras letras. Por exemplo: "pt" ou "es".
 *
 * Caso o valor retornado pelo navegador não estiver dentro dos idiomas suportados pelo PO,
 * será retornado a linguagem padrão (poLocaleDefault).
 */
function getShortBrowserLanguage() {
    var language = (getBrowserLanguage() || poLocaleDefault).toLowerCase().substring(0, 2);
    if (!poLocales.includes(language)) {
        return poLocaleDefault;
    }
    return language;
}
function convertToBoolean(val) {
    if (typeof val === 'string') {
        val = val.toLowerCase().trim();
        return val === 'true' || val === 'on' || val === '';
    }
    if (typeof val === 'number') {
        return val === 1;
    }
    return !!val;
}
function convertToInt(value, valueDefault) {
    var validNumber = parseInt(value, 10);
    var validDefaultValue = parseInt(valueDefault, 10);
    var defaultValue = validDefaultValue || validDefaultValue === 0 ? validDefaultValue : undefined;
    return validNumber || validNumber === 0 ? validNumber : defaultValue;
}
function isTypeof(object, type) {
    return typeof object === type;
}
/**
 *
 * @param fn Função que será executada dentro do contexto. Podendo ser o nome da função
 * ou a referência da mesma.
 *
 * @param context Contexto do qual a função será executada.
 */
function callFunction(fn, context, param) {
    if (isTypeof(fn, 'function')) {
        fn.call(context, param);
    }
    else {
        context[fn](param);
    }
}
function convertIsoToDate(value, start, end) {
    if (value) {
        var day = parseInt(value.substring(8, 10), 10);
        var month = parseInt(value.substring(5, 7), 10);
        var year = parseInt(value.substring(0, 4), 10);
        if (start) {
            var date = new Date(year, month - 1, day, 0, 0, 0);
            setYearFrom0To100(date, year);
            return date;
        }
        else if (end) {
            var date = new Date(year, month - 1, day, 23, 59, 59);
            setYearFrom0To100(date, year);
            return date;
        }
        else {
            var milliseconds = Date.parse(value);
            var timezone = new Date().getTimezoneOffset() * 60000;
            return new Date(milliseconds + timezone);
        }
    }
}
function convertDateToISOExtended(date, time) {
    if (date) {
        var getMonth = date.getMonth() + 1;
        var day = date.getDate() < 10 ? '0' + date.getDate() : date.getDate();
        var month = getMonth < 10 ? '0' + getMonth : getMonth;
        var year = formatYear(date.getFullYear());
        var dateString = date.toString();
        if (time) {
            return year + '-' + month + '-' + day + time;
        }
        else {
            return (year +
                '-' +
                month +
                '-' +
                day +
                'T' +
                dateString.substring(16, 24) +
                dateString.substring(28, 31) +
                ':' +
                dateString.substring(31, 33));
        }
    }
    else {
        return null;
    }
}
/**
 * Transforma o ano em uma string no formato yyyy e caso o ano seja menor que 1000 preenche com zeros a esquerda.
 * @param year Ano
 */
function formatYear(year) {
    if (year >= 1000) {
        return year.toString();
    }
    if (year > 99 && year < 1000) {
        return "0" + year;
    }
    if (year > 9 && year < 100) {
        return "00" + year;
    }
    if (year >= 0 && year < 10) {
        return "000" + year;
    }
}
function isEquals(value, comparedValue) {
    return JSON.stringify(value) === JSON.stringify(comparedValue);
}
/**
 * Caso o ano original da data seja entre 0 e 100 atribui esse valor ao ano, pois o `new Date` do javascript transforma o ano para 190X.
 * @param date Data
 * @param year Ano original
 */
function setYearFrom0To100(date, year) {
    if (year >= 0 && year < 100) {
        date.setFullYear(year);
    }
}
function sortOptionsByProperty(options, property) {
    options.sort(function (optionA, optionB) {
        optionA = optionA[property].toString().toLowerCase();
        optionB = optionB[property].toString().toLowerCase();
        if (optionA < optionB) {
            return -1;
        }
        if (optionA > optionB) {
            return 1;
        }
        return 0;
    });
}
function removeDuplicatedOptions(list) {
    var _loop_1 = function (i) {
        if (i === 0) {
            return out_i_1 = i, "continue";
        }
        if (list.findIndex(function (op) { return op.value === list[i].value; }) !== i) {
            list.splice(i, 1);
            i--;
        }
        out_i_1 = i;
    };
    var out_i_1;
    for (var i = 0; i < list.length; i++) {
        _loop_1(i);
        i = out_i_1;
    }
}
function removeUndefinedAndNullOptions(list) {
    for (var i = 0; i < list.length; i++) {
        if (list[i].value === undefined || list[i].value === null) {
            list.splice(i, 1);
            i--;
        }
    }
}
function validValue(value) {
    return (value !== null && value !== undefined && value !== '') || value === false;
}
function isExternalLink(url) {
    return url ? url.startsWith('http') : false;
}
function openExternalLink(url) {
    window.open(url, '_blank');
}
function getFormattedLink(link) {
    var formattedLink = '';
    // Retira todos os pontos no começo da URL.
    if (link) {
        formattedLink = link.replace(/^(\.)+/g, '');
    }
    // Verifica se foi utilizado uma rota que não comece com barra.
    if (!formattedLink.startsWith('/')) {
        formattedLink = '/'.concat(formattedLink);
    }
    return formattedLink;
}
/**
 * Método responsável por ordenar dois valores.
 *
 * @param leftSide Primeiro valor a ser comparado.
 * @param rightSide Segundo valor a ser comparado.
 * @param ascending Determina se será em ordem ascendente ou descendente.
 */
function sortValues(leftSide, rightSide, ascending) {
    if (ascending === void 0) { ascending = true; }
    if (ascending) {
        if (leftSide < rightSide) {
            return -1;
        }
        else if (leftSide > rightSide) {
            return 1;
        }
    }
    else if (ascending === false) {
        if (leftSide < rightSide) {
            return 1;
        }
        else if (leftSide > rightSide) {
            return -1;
        }
    }
    return 0;
}
function validateDateRange(date, dateStart, dateEnd) {
    if (dateStart && dateEnd) {
        return date >= dateStart && date <= dateEnd;
    }
    else if (dateStart && !dateEnd) {
        return date >= dateStart;
    }
    else if (!dateStart && dateEnd) {
        return date <= dateEnd;
    }
    else {
        return true;
    }
}
function capitalizeFirstLetter(text) {
    return "" + text.charAt(0).toUpperCase() + text.slice(1);
}
/**
 * Mapeia um novo array apenas com as propriedades definidas pelo desenvolvedor baseado em um array de
 * origem.
 *
 * Exemplo:
 *
 * ```
 * const people = [
 *  { id: 1, name: 'Fulano', birthdate: '1980-11-01', genre: 'Male', city: 'São Paulo', dependents: 2 },
 *  { id: 2, name: 'Beltrano', birthdate: '1997-01-21', genre: 'Female', city: 'Joinville', dependents: 0 },
 *  { id: 3, name: 'Siclano', birthdate: '1995-07-15', genre: 'Male', city: 'Joinville', dependents: 0 }
 * ];
 *
 * const properties = ['id', 'name'];
 *
 * const idAndName = mapArrayByProperties(people, properties);
 *
 * console.log(idAndName); // [{ id: 1, name: 'Fulano' }, { id: 2, name: 'Beltrano' }, { id: 3, name: 'Siclano' }]
 * ```
 *
 * Um outro uso para o método é "parear" todos os objetos do array com as mesmas propriedades.
 *
 * ```
 * const customers = [
 *  { id: 1, name: 'Fulano', city: 'São Paulo', dependents: 2 }, // sem genre
 *  { id: 2, name: 'Beltrano', genre: 'Female', city: 'Joinville' }, // sem dependents
 *  { id: 3, name: 'Siclano', genre: 'Male', city: 'Joinville', dependents: 0 }
 * ];
 * const properties = ['id', 'name', 'city', 'genre', 'dependents'];
 *
 * const pattern = mapArrayByProperties(customers, properties);
 * console.log(pattern);
 *
 * // [
 * //   { id: 1, name: 'Fulano', city: 'São Paulo', genre: undefined, dependents: 2 },
 * //   { id: 2, name: 'Beltrano', city: 'Joinville', genre: 'Female', dependents: undefined },
 * //   { id: 3, name: 'Siclano', city: 'Joinville', genre: 'Male', dependents: 0 }
 * // ]
 * ```
 *
 * @param items {Array<any>} Array de items original.
 * @param properties {Array<string>} Array de string com a lista de propriedades que devem ser retornadas.
 *
 * @returns Array<any>
 */
function mapArrayByProperties(items, properties) {
    if (items === void 0) { items = []; }
    if (properties === void 0) { properties = []; }
    return items.map(function (item) { return mapObjectByProperties(item, properties); });
}
/**
 * Mapeia um novo objeto apenas com as propriedades definidas pelo desenvolvedor.
 *
 * Exemplo:
 *
 * ```
 * const person = { id: 1, name: 'Fulano', birthdate: '1980-11-01', genre: 'Male', city: 'São Paulo', dependents: 2 };
 *
 * const properties = ['id', 'name'];
 *
 * const idAndName = mapObjectByProperties(person, properties);
 *
 * console.log(idAndName); // { id: 1, name: 'Fulano' }
 * ```
 *
 * @param object {Array<any>} Array de items original.
 * @param properties {Array<string>} Array de string com a lista de propriedades que devem ser retornadas.
 *
 * @returns Array<any>
 */
function mapObjectByProperties(object, properties) {
    if (object === void 0) { object = {}; }
    if (properties === void 0) { properties = []; }
    var getSelectedProperties = function (selectedProperties, property) {
        var _a;
        return (__assign(__assign({}, selectedProperties), (_a = {}, _a[property] = object[property], _a)));
    };
    return properties.reduce(getSelectedProperties, {});
}
/**
 * Retorna os valores de um objeto dentro de um array.
 *
 * > Simula o Object.values(obj), o mesmo deve ser removido assim que a versão typescrit for atualizada.
 *
 * @param object Objeto de onde será pego os valores.
 */
function valuesFromObject(object) {
    if (object === void 0) { object = {}; }
    return Object.keys(object).map(function (property) { return object[property]; });
}
/**
 * adiciona 0 no tempo informado, caso menor q 10
 *
 * @param time
 */
function addZero(time) {
    if (!time) {
        return '00';
    }
    if (time < 10) {
        return "0" + time;
    }
    return time;
}
/**
 * Remove do objeto as propriedades especificadas.
 *
 * Exemplo:
 *
 * ```
 * key: ['id', 'cpf']
 * newItemValue: { id: '123', cpf: '456', name: 'Test' }
 * Resultado: { name: 'Test' }
 * ```
 *
 * @param keys lista de propriedades para ser removida do objeto.
 * @param newItemValue objeto que se deseja remover as propriedades.
 * @returns objeto sem as propriedades especificadas.
 */
function removeKeysProperties(keys, newItemValue) {
    keys.forEach(function (key) { return delete newItemValue[key]; });
    return newItemValue;
}
/**
 * @deprecated
 * Retorna um ViewContainerRef compatível para projetos com Ivy habilitado ou não.
 *
 * @param viewRef ViewContainerRef
 *
 * @returns ViewContainerRef
 */
function getParentRef(viewRef) {
    return viewRef['_hostView'] ? viewRef['_hostView'][8] : viewRef['_view']['component'];
}

var poModalPasswordRecoveryLiterals = {
    en: {
        cancelButton: 'Cancel',
        closeButton: 'Close',
        continueButton: 'Continue',
        email: 'e-mail',
        emailErrorMessagePhrase: 'Invalid e-mail format',
        emailSentConfirmationPhrase: "We have sent the instructions and new password creation link to your e-mail.\n    If you did not receive it after a few minutes, check your spam box or click Resend.",
        emailSentTitle: 'E-mail sent',
        forgotPasswordTitle: 'Forgot your password?',
        insertCode: 'Type the code',
        insertEmail: 'Enter your e-mail',
        insertPhone: 'Enter your mobile number',
        phoneErrorMessagePhrase: 'Invalid phone number',
        prepositionIn: 'in',
        prepositionOr: 'or',
        recoveryPasswordPhrase: 'To recover your password we will send you a {0} with instructions.',
        resendEmailButton: 'Resend',
        resendSmsCodePhrase: 'If the code does not arrive within a few minutes, please send it again.',
        sendAgainPhrase: 'If the code does not arrive within a few minutes',
        sendAgain: 'send again.',
        sendButton: 'Submit',
        sentSmsCodePhrase: 'We sent a code for your mobile phone.',
        sms: 'SMS',
        smsCodeErrorMessagePhrase: 'Invalid code. Please re-enter or contact support',
        supportContact: 'If you do not have access to {0} contact support',
        telephone: 'telephone',
        typeCodeTitle: 'Enter sent code'
    },
    es: {
        cancelButton: 'Cancelar',
        closeButton: 'Cerrar',
        continueButton: 'Continuar',
        email: 'e-mail',
        emailErrorMessagePhrase: 'Formato de correo electrónico no válido',
        emailSentConfirmationPhrase: "Enviamos las instrucciones y enlace de creaci\u00F3n de nueva contrase\u00F1a para su correo electr\u00F3nico.\n    Si no ha recibido despu\u00E9s de unos minutos, compruebe su caja de spam o haga clic en Reenviar",
        emailSentTitle: 'E-mail enviado',
        forgotPasswordTitle: 'Olvidaste tu contraseña?',
        insertCode: 'Introduzca el código',
        insertEmail: 'Introduce tu e-mail',
        insertPhone: 'Introduce tu número de celular',
        phoneErrorMessagePhrase: 'Número de teléfono no válido',
        prepositionIn: 'en',
        prepositionOr: 'u',
        recoveryPasswordPhrase: 'Para recuperar su contraseña vamos a enviar un {0} con instrucciones.',
        resendEmailButton: 'Reenviar',
        resendSmsCodePhrase: 'Si el código no llega dentro de unos minutos, vuelva a enviar.',
        sendAgain: 'envíe de nuevo.',
        sendAgainPhrase: 'Si el código no llega dentro de unos minutos',
        sendButton: 'Enviar',
        sentSmsCodePhrase: 'Enviamos un código para su celular.',
        sms: 'SMS',
        smsCodeErrorMessagePhrase: 'Código no válido. Escriba de nuevo o póngase en contacto con el soporte',
        supportContact: 'Si no tiene acceso a {0} póngase en contacto con el soporte',
        telephone: 'teléfono',
        typeCodeTitle: 'Escribir código enviado'
    },
    pt: {
        cancelButton: 'Cancelar',
        closeButton: 'Fechar',
        continueButton: 'Continuar',
        email: 'e-mail',
        emailErrorMessagePhrase: 'Formato de e-mail inválido',
        emailSentConfirmationPhrase: "Enviamos as instru\u00E7\u00F5es e link de cria\u00E7\u00E3o de nova senha para o seu e-mail.\n    Caso n\u00E3o tenha recebido ap\u00F3s alguns minutos, verifique sua caixa de spam ou clique em Reenviar.",
        emailSentTitle: 'E-mail enviado',
        forgotPasswordTitle: 'Esqueceu sua senha?',
        insertCode: 'Digite o código',
        insertEmail: 'Insira seu e-mail',
        insertPhone: 'Insira seu número de celular',
        phoneErrorMessagePhrase: 'Número de telefone inválido',
        prepositionIn: 'em',
        prepositionOr: 'ou',
        recoveryPasswordPhrase: 'Para recuperar sua senha vamos enviar um {0} com instruções.',
        resendEmailButton: 'Reenviar',
        resendSmsCodePhrase: 'Se o código não chegar dentro de alguns minutos envie novamente',
        sendAgain: 'envie novamente.',
        sendAgainPhrase: 'Se o código não chegar dentro de alguns minutos',
        sendButton: 'Enviar',
        sentSmsCodePhrase: 'Enviamos um código para seu celular cadastrado.',
        sms: 'SMS',
        smsCodeErrorMessagePhrase: 'Código inválido. Digite novamente ou contacte o suporte',
        supportContact: 'Se não tiver acesso ao {0} contacte o suporte',
        telephone: 'telefone',
        typeCodeTitle: 'Digitar código enviado'
    },
    ru: {
        cancelButton: 'отменить',
        closeButton: 'близко',
        continueButton: 'близко',
        email: 'по электронной почте',
        emailErrorMessagePhrase: 'Неверный формат электронной почты',
        emailSentConfirmationPhrase: "\u041C\u044B \u043E\u0442\u043F\u0440\u0430\u0432\u0438\u043B\u0438 \u0438\u043D\u0441\u0442\u0440\u0443\u043A\u0446\u0438\u0438 \u0438 \u043D\u043E\u0432\u0443\u044E \u0441\u0441\u044B\u043B\u043A\u0443 \u0434\u043B\u044F \u0441\u043E\u0437\u0434\u0430\u043D\u0438\u044F \u043F\u0430\u0440\u043E\u043B\u044F \u0434\u043B\u044F \u0432\u0430\u0448\u0435\u0439 \u044D\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u043E\u0439 \u043F\u043E\u0447\u0442\u044B.\n\u0415\u0441\u043B\u0438 \u0432\u044B \u043D\u0435 \u043F\u043E\u043B\u0443\u0447\u0438\u043B\u0438 \u0435\u0433\u043E \u0432 \u0442\u0435\u0447\u0435\u043D\u0438\u0435 \u043D\u0435\u0441\u043A\u043E\u043B\u044C\u043A\u0438\u0445 \u043C\u0438\u043D\u0443\u0442, \u0443\u0441\u0442\u0430\u043D\u043E\u0432\u0438\u0442\u0435 \u0444\u043B\u0430\u0436\u043E\u043A \u0421\u043F\u0430\u043C \u0438\u043B\u0438 \u043D\u0430\u0436\u043C\u0438\u0442\u0435 \u0414\u0430\u043B\u0435\u0435.",
        emailSentTitle: 'Письмо отправлено',
        forgotPasswordTitle: 'Забыли пароль?',
        insertCode: 'Введите код',
        insertEmail: 'Введите адрес электронной почты',
        insertPhone: 'Введите номер вашего мобильного телефона',
        phoneErrorMessagePhrase: 'Неверный номер телефона',
        prepositionIn: 'в',
        prepositionOr: 'или',
        recoveryPasswordPhrase: 'Для восстановления вашего пароля мы вышлем {0} с инструкциями.',
        resendEmailButton: 'Отправить еще раз',
        resendSmsCodePhrase: 'Если код не приходит через несколько минут, попробуйте еще раз.',
        sendAgain: 'отправить снова.',
        sendAgainPhrase: 'Если код не приходит через несколько минут',
        sendButton: 'послать',
        sentSmsCodePhrase: 'Мы отправляем код на ваш зарегистрированный мобильный телефон.',
        sms: 'SMS',
        smsCodeErrorMessagePhrase: 'Неверный код. Повторите или обратитесь в службу поддержки',
        supportContact: 'Если у вас нет доступа к {0}, обратитесь в службу поддержки',
        telephone: 'телефон',
        typeCodeTitle: 'Введите отправленный код'
    }
};

/**
 * @usedBy PoModalPasswordRecoveryComponent
 *
 * @description
 *
 * *Enum* para especificação do tipo de recuperação de senha.
 */
var PoModalPasswordRecoveryType;
(function (PoModalPasswordRecoveryType) {
    /** Possibilita ao usuário optar por envio via email ou SMS */
    PoModalPasswordRecoveryType["All"] = "all";
    /** Definição para recuperação apenas por email */
    PoModalPasswordRecoveryType["Email"] = "email";
    /** Definição para recuperação apenas por SMS */
    PoModalPasswordRecoveryType["SMS"] = "sms";
})(PoModalPasswordRecoveryType || (PoModalPasswordRecoveryType = {}));

var PoModalPasswordRecoveryDefaultMaxLength = 15;
var PoModalPasswordRecoveryDefaultMinLength = 15;
var PoModalPasswordRecoveryDefaultPhone = '(99) 99999-9999';
var PoModalPasswordRecoveryTypeDefault = PoModalPasswordRecoveryType.Email;
/**
 * @description
 *
 * O componente `po-modal-password-recovery` é utilizado como template para solicitação de troca de senha.
 *
 * É composto por uma modal que possui três telas, cada uma com as seguintes características:
 *
 * - A primeira possui campos para preenchimento de email ou número de telefone;
 * - Tela com campo para preenchimento de código SMS enviado para o número de telefone enviado;
 * - A terceira se trata de uma confirmação de envio de link para a caixa de email do usuário.
 *
 *
 * A propriedade `p-url-recovery` automatiza a rotina do componente e simplifica o processo
 * para recuperação de senha, bastando definir uma url para requisição dos recursos.
 * Seu detalhamento para uso pode ser visto logo abaixo em *propriedades*.
 * Caso julgue necessário, pode-se também definir manualmente a rotina do componente.
 *
 *
 * Para a modal de digitação de código SMS, é possível definir uma mensagem de erro
 * customizada com a propriedade `p-code-error` e há um link para
 * reenvio de código por SMS. Ao reenviar, o evento `p-code-submit` envia um objeto com o telefone do usuário e a quantidade
 * de vezes em que o usuário fez a solicitação de reenvio.
 *
 * > É indicada a utilização da tela de digitação para envio de código SMS apenas
 * se a opção por envio SMS for disponibilizada para o usuário.
 *
 *
 * A modal de confirmação contém uma ação de reenvio e o evento `p-submit`
 * é quem passa o objeto contendo o email em conjunto com a quantidade de tentativas de reenvio.
 *
 * > A tela de confirmação é indicada para quando o usuário solicitar a troca através do email.
 *
 * > Os textos das modals são pré-definidos, imutáveis e são traduzidos de acordo com o idioma do *browser* (pt, en e es)
 *
 * Para que as imagens sejam exibidas corretamente, é necessário incluir o caminho delas ao projeto. Para isso, edite
 * o *assets* no arquivo **angular.json** da aplicação na seguinte ordem:
 * ```
 *   "assets": [
 *     "src/assets",
 *     "src/favicon.ico",
 *     {
 *       "glob": "**\/*",
 *       "input": "node_modules/@po-ui/style/images",
 *       "output": "assets/images"
 *     }
 *   ]
 * ```
 */
var PoModalPasswordRecoveryBaseComponent = /** @class */ (function () {
    function PoModalPasswordRecoveryBaseComponent() {
        this._phoneMask = PoModalPasswordRecoveryDefaultPhone;
        this._type = PoModalPasswordRecoveryTypeDefault;
        this.maxLength = PoModalPasswordRecoveryDefaultMaxLength;
        this.minLength = PoModalPasswordRecoveryDefaultMinLength;
        this.literals = __assign(__assign({}, poModalPasswordRecoveryLiterals[poLocaleDefault]), poModalPasswordRecoveryLiterals[browserLanguage()]);
        /**
         * @optional
         *
         * @description
         *
         * Ação contendo como parâmetro o código enviado por SMS e digitado pelo usuário.
         *
         * > Esta propriedade será ignorada se for definido valor para a propriedade `p-url-recovery`.
         */
        this.codeSubmit = new EventEmitter();
        /**
         * @optional
         *
         * @description
         *
         * Ação contendo o email como parâmetro e que é executada quando o usuário clica sobres os botões de 'enviar' e 'reenviar' e-mail.
         *
         * > Esta propriedade será ignorada se for definido valor para a propriedade `p-url-recovery`.
         */
        this.submit = new EventEmitter();
    }
    Object.defineProperty(PoModalPasswordRecoveryBaseComponent.prototype, "contactEmail", {
        get: function () {
            return this._contactEmail;
        },
        /**
         * @optional
         *
         * @description
         *
         * Definição do e-mail que é exibido na mensagem para contato de suporte.
         */
        set: function (value) {
            this._contactEmail = value;
            this.smsCodeErrorMessage = this.concatenateSMSErrorMessage(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoModalPasswordRecoveryBaseComponent.prototype, "phoneMask", {
        get: function () {
            return this._phoneMask;
        },
        /**
         * @optional
         *
         * @description
         *
         * Definição da mascara do campo de telefone.
         *
         * @default `(99) 99999-9999`
         */
        set: function (value) {
            this._phoneMask = value || PoModalPasswordRecoveryDefaultPhone;
            this.minLength = this.maxLength = this._phoneMask.length;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoModalPasswordRecoveryBaseComponent.prototype, "type", {
        get: function () {
            return this._type;
        },
        /**
         * @optional
         *
         * @description
         *
         * Define o tipo de recuperação de senha que será exibido.
         *
         * @default `PoModalPasswordRecoveryType.Email`
         *
         */
        set: function (value) {
            this._type = Object.values(PoModalPasswordRecoveryType).includes(value)
                ? value
                : PoModalPasswordRecoveryTypeDefault;
        },
        enumerable: true,
        configurable: true
    });
    PoModalPasswordRecoveryBaseComponent.prototype.concatenateSMSErrorMessage = function (value) {
        var literalCodeErrorMessage = this.literals.smsCodeErrorMessagePhrase;
        return value && value !== ''
            ? literalCodeErrorMessage + " " + this.literals.prepositionIn + " " + value + "."
            : literalCodeErrorMessage;
    };
    __decorate([
        Input('p-contact-email'),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], PoModalPasswordRecoveryBaseComponent.prototype, "contactEmail", null);
    __decorate([
        Input('p-code-error'),
        __metadata("design:type", String)
    ], PoModalPasswordRecoveryBaseComponent.prototype, "codeError", void 0);
    __decorate([
        Input('p-phone-mask'),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], PoModalPasswordRecoveryBaseComponent.prototype, "phoneMask", null);
    __decorate([
        Input('p-type'),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], PoModalPasswordRecoveryBaseComponent.prototype, "type", null);
    __decorate([
        Input('p-url-recovery'),
        __metadata("design:type", String)
    ], PoModalPasswordRecoveryBaseComponent.prototype, "urlRecovery", void 0);
    __decorate([
        Output('p-code-submit'),
        __metadata("design:type", Object)
    ], PoModalPasswordRecoveryBaseComponent.prototype, "codeSubmit", void 0);
    __decorate([
        Output('p-submit'),
        __metadata("design:type", Object)
    ], PoModalPasswordRecoveryBaseComponent.prototype, "submit", void 0);
    PoModalPasswordRecoveryBaseComponent = __decorate([
        Directive()
    ], PoModalPasswordRecoveryBaseComponent);
    return PoModalPasswordRecoveryBaseComponent;
}());

/**
 * @docsPrivate
 *
 * @description
 *
 * Enum para definição do tipo de conteúdo exibido na modal.
 */
var PoModalPasswordRecoveryModalContent;
(function (PoModalPasswordRecoveryModalContent) {
    /** Exibição de modal contendo campo para preenchimento de email ou número de telefone */
    PoModalPasswordRecoveryModalContent["Email"] = "email";
    /** Exibição de modal contendo campo para inserção de código enviado por SMS */
    PoModalPasswordRecoveryModalContent["SMSCode"] = "smsCode";
    /** Exibição de modal de confirmação de envio */
    PoModalPasswordRecoveryModalContent["Confirmation"] = "confirmation";
})(PoModalPasswordRecoveryModalContent || (PoModalPasswordRecoveryModalContent = {}));

var PoModalPasswordRecoveryService = /** @class */ (function () {
    function PoModalPasswordRecoveryService(http) {
        this.http = http;
    }
    PoModalPasswordRecoveryService.prototype.post = function (urlRecovery, item, params) {
        return this.http.post(urlRecovery, item, { observe: 'response', params: params });
    };
    PoModalPasswordRecoveryService.ctorParameters = function () { return [
        { type: HttpClient }
    ]; };
    PoModalPasswordRecoveryService = __decorate([
        Injectable(),
        __metadata("design:paramtypes", [HttpClient])
    ], PoModalPasswordRecoveryService);
    return PoModalPasswordRecoveryService;
}());

/**
 * @docsExtends PoModalPasswordRecoveryBaseComponent
 *
 * @example
 *
 * <example name="po-modal-password-recovery-basic" title="PO Modal Password Recovery Basic">
 *  <file name="sample-po-modal-password-recovery-basic/sample-po-modal-password-recovery-basic.component.html"> </file>
 *  <file name="sample-po-modal-password-recovery-basic/sample-po-modal-password-recovery-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-modal-password-recovery-labs" title="PO Modal Password Recovery Labs">
 *  <file name="sample-po-modal-password-recovery-labs/sample-po-modal-password-recovery-labs.component.html"> </file>
 *  <file name="sample-po-modal-password-recovery-labs/sample-po-modal-password-recovery-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-modal-password-recovery-request" title="PO Modal Password Recovery Request">
 *  <file name="sample-po-modal-password-recovery-request/sample-po-modal-password-recovery-request.component.html"> </file>
 *  <file name="sample-po-modal-password-recovery-request/sample-po-modal-password-recovery-request.component.ts"> </file>
 * </example>
 */
var PoModalPasswordRecoveryComponent = /** @class */ (function (_super) {
    __extends(PoModalPasswordRecoveryComponent, _super);
    function PoModalPasswordRecoveryComponent(router, poI18nPipe, poModalPasswordRecoveryService) {
        var _this = _super.call(this) || this;
        _this.router = router;
        _this.poI18nPipe = poI18nPipe;
        _this.poModalPasswordRecoveryService = poModalPasswordRecoveryService;
        _this.chosenTypeFormOption = PoModalPasswordRecoveryType.Email;
        _this.codeMask = '9 9 9 9 9 9';
        _this.emailModal = true;
        _this.emailModalPhrases = { firstPhrase: null, secondPhrase: null };
        _this.endpoint = '.';
        _this.invalidCode = false;
        _this.invalidEmail = false;
        _this.modalType = PoModalPasswordRecoveryModalContent.Email;
        _this.submittedCodeValue = {};
        _this.submittedContactValue = {};
        _this.primaryAction = { label: undefined, action: function () { } };
        _this.secondaryAction = { label: undefined, action: function () { } };
        _this.typeFormOptions = [
            { label: 'e-mail', value: PoModalPasswordRecoveryType.Email },
            { label: 'SMS', value: PoModalPasswordRecoveryType.SMS }
        ];
        return _this;
    }
    PoModalPasswordRecoveryComponent.prototype.ngOnDestroy = function () {
        if (this.passwordRecoverySubscription) {
            this.passwordRecoverySubscription.unsubscribe();
        }
        if (this.smsCodeSubscription) {
            this.smsCodeSubscription.unsubscribe();
        }
    };
    PoModalPasswordRecoveryComponent.prototype.completed = function () {
        this.cancelAction();
    };
    PoModalPasswordRecoveryComponent.prototype.formModelChangesCheck = function (form) {
        var invalidForm = form.invalid;
        this.invalidEmail = invalidForm && form.dirty;
        this.primaryAction.disabled = invalidForm;
        if (this.modalType === PoModalPasswordRecoveryModalContent.SMSCode) {
            var codeError = this.codeError !== undefined && this.codeError !== '';
            this.showCustomCodeError = codeError && form.pristine;
        }
    };
    PoModalPasswordRecoveryComponent.prototype.getInputType = function (type) {
        var _this = this;
        this.type = type;
        this.pipeModalPhrases();
        setTimeout(function () {
            _this.control = _this.emailForm.controls[type];
            _this.formModelChangesCheck(_this.emailForm);
            _this.resetFormFields(_this.control);
        });
    };
    PoModalPasswordRecoveryComponent.prototype.open = function () {
        var control = this.checkFormType(this.type);
        this.control = this.emailForm.controls[control];
        this.setEmailModalPhrasesAndActions();
        this.formModelChangesCheck(this.emailForm);
        this.recoveryModalElement.open();
    };
    PoModalPasswordRecoveryComponent.prototype.openConfirmation = function () {
        this.modalTitle = this.literals.emailSentTitle;
        this.modalType = PoModalPasswordRecoveryModalContent.Confirmation;
        this.setActions(this.cancelAction, this.literals.closeButton, this.submitAction, this.literals.resendEmailButton, false);
    };
    PoModalPasswordRecoveryComponent.prototype.openSmsCode = function () {
        var _this = this;
        this.modalTitle = this.literals.typeCodeTitle;
        this.modalType = PoModalPasswordRecoveryModalContent.SMSCode;
        this.setActions(this.submitSmsCodeAction, this.literals.continueButton, this.cancelAction, this.literals.cancelButton, true);
        setTimeout(function () {
            _this.control = _this.smsCodeForm.controls['sms'];
            _this.formModelChangesCheck(_this.smsCodeForm);
        });
    };
    PoModalPasswordRecoveryComponent.prototype.resendSmsCode = function () {
        this.incrementRetryAttempts();
        if (this.urlRecovery) {
            this.submitActionRequest(this.submittedContactValue, this.type);
        }
        else {
            this.submit.emit(this.submittedContactValue);
        }
    };
    PoModalPasswordRecoveryComponent.prototype.assignSmsResponse = function (responseObj) {
        this.smsBodyResponse = Object.assign({}, { hash: responseObj.hash });
        if (responseObj.urlValidationCode) {
            this.smsBodyResponse = Object.assign(this.smsBodyResponse, { urlValidationCode: responseObj.urlValidationCode });
        }
    };
    PoModalPasswordRecoveryComponent.prototype.cancelAction = function () {
        this.resetFormFields(this.control);
        this.submittedContactValue = {};
        this.chosenTypeFormOption = PoModalPasswordRecoveryType.Email;
        this.modalType = PoModalPasswordRecoveryModalContent.Email;
        this.type = this.modalPasswordRecoveryTypeAll ? PoModalPasswordRecoveryType.All : this.type;
        this.recoveryModalElement.close();
    };
    PoModalPasswordRecoveryComponent.prototype.checkFormType = function (type) {
        return type !== PoModalPasswordRecoveryType.All ? type : PoModalPasswordRecoveryType.Email;
    };
    PoModalPasswordRecoveryComponent.prototype.formReset = function (control) {
        control.markAsPristine();
        control.markAsUntouched();
        control.updateValueAndValidity();
    };
    PoModalPasswordRecoveryComponent.prototype.getEmitValue = function (type) {
        return type === PoModalPasswordRecoveryType.SMS ? this.phone : this.email;
    };
    PoModalPasswordRecoveryComponent.prototype.incrementRetryAttempts = function () {
        this.submittedContactValue.retry = this.submittedContactValue.retry + 1 || 1;
    };
    PoModalPasswordRecoveryComponent.prototype.openExternalLink = function (url, queryParam) {
        window.open(url + "?token=" + queryParam, '_self');
    };
    PoModalPasswordRecoveryComponent.prototype.openInternalLink = function (url, endpoint, queryParam) {
        this.router.navigate([url + "/" + endpoint], { queryParams: { token: queryParam } });
    };
    PoModalPasswordRecoveryComponent.prototype.pipeModalPhrases = function () {
        if (this.type === PoModalPasswordRecoveryType.SMS) {
            this.emailModalPhrases.firstPhrase = this.setPipeArguments(this.literals.recoveryPasswordPhrase, this.literals.sms);
            this.emailModalPhrases.secondPhrase = this.setPipeArguments(this.literals.supportContact, this.literals.telephone);
        }
        else {
            this.emailModalPhrases.firstPhrase = this.setPipeArguments(this.literals.recoveryPasswordPhrase, this.literals.email);
            this.emailModalPhrases.secondPhrase = this.setPipeArguments(this.literals.supportContact, this.literals.email);
        }
    };
    PoModalPasswordRecoveryComponent.prototype.redirectToChangePassword = function (recoveryToken) {
        var urlChangePassword = recoveryToken.urlChangePassword;
        if (urlChangePassword) {
            isExternalLink(urlChangePassword)
                ? this.openExternalLink(urlChangePassword, recoveryToken.token)
                : this.openInternalLink(this.urlRecovery, urlChangePassword, recoveryToken.token);
        }
        else {
            var changePasswordEndpoint = 'changePassword';
            this.openInternalLink(this.urlRecovery, changePasswordEndpoint, recoveryToken.token);
        }
    };
    PoModalPasswordRecoveryComponent.prototype.resetFormFields = function (control) {
        this.formReset(control);
        this.email = undefined;
        this.phone = undefined;
        this.smsCode = undefined;
    };
    PoModalPasswordRecoveryComponent.prototype.setActions = function (primaryAction, primarylabel, secondaryAction, secondaryLabel, disabled) {
        var _this = this;
        this.primaryAction.action = function () { return primaryAction.call(_this); };
        this.primaryAction.label = primarylabel;
        this.secondaryAction.action = function () { return secondaryAction.call(_this); };
        this.secondaryAction.label = secondaryLabel;
        this.primaryAction.disabled = disabled;
    };
    PoModalPasswordRecoveryComponent.prototype.setEmailModalPhrasesAndActions = function () {
        this.modalTitle = this.literals.forgotPasswordTitle;
        this.pipeModalPhrases();
        this.modalPasswordRecoveryTypeAll = this.type === PoModalPasswordRecoveryType.All;
        this.setActions(this.submitAction, this.literals.sendButton, this.cancelAction, this.literals.cancelButton, true);
    };
    PoModalPasswordRecoveryComponent.prototype.setRequestEndpoint = function (urlValidationCode) {
        var endpoint = urlValidationCode || 'validation';
        return this.urlRecovery + "/" + endpoint;
    };
    PoModalPasswordRecoveryComponent.prototype.setPipeArguments = function (literalAttr, arg) {
        return this.poI18nPipe.transform(literalAttr, arg);
    };
    PoModalPasswordRecoveryComponent.prototype.submitAction = function () {
        this.modalType === PoModalPasswordRecoveryModalContent.Confirmation
            ? this.incrementRetryAttempts()
            : this.formReset(this.control);
        this.submittedContactValue[this.checkFormType(this.type)] = this.getEmitValue(this.type);
        if (this.urlRecovery) {
            this.submitActionRequest(this.submittedContactValue, this.type);
        }
        else {
            this.submit.emit(this.submittedContactValue);
        }
    };
    PoModalPasswordRecoveryComponent.prototype.submitActionRequest = function (data, modalType) {
        var _this = this;
        var params = modalType === PoModalPasswordRecoveryType.SMS ? { type: 'sms' } : undefined;
        this.passwordRecoverySubscription = this.poModalPasswordRecoveryService
            .post(this.urlRecovery, data, params)
            .subscribe(function (response) {
            if ((modalType === PoModalPasswordRecoveryType.Email || modalType === PoModalPasswordRecoveryType.All) &&
                response.status === 204) {
                _this.openConfirmation();
            }
            else if (modalType === PoModalPasswordRecoveryType.SMS && response.status === 200) {
                _this.assignSmsResponse(response.body);
                _this.openSmsCode();
            }
        });
    };
    PoModalPasswordRecoveryComponent.prototype.submitSmsCodeAction = function () {
        this.submittedCodeValue.code = this.smsCode;
        if (this.urlRecovery) {
            this.submittedCodeValue = Object.assign(this.submittedCodeValue, { hash: this.smsBodyResponse.hash });
            this.submitSmsCodeRequest(this.submittedCodeValue);
        }
        else {
            this.codeSubmit.emit(this.submittedCodeValue);
        }
        this.resetFormFields(this.control);
    };
    PoModalPasswordRecoveryComponent.prototype.submitSmsCodeRequest = function (data) {
        var _this = this;
        this.smsCodeSubscription = this.poModalPasswordRecoveryService
            .post(this.setRequestEndpoint(this.smsBodyResponse.urlValidationCode), data)
            .subscribe(function (response) {
            var successStatus = response.status === 200;
            if (successStatus) {
                _this.completed();
                _this.redirectToChangePassword(response.body);
            }
        }, function (error) {
            _this.codeError = error.error.message;
            _this.openSmsCode();
        });
    };
    PoModalPasswordRecoveryComponent.ctorParameters = function () { return [
        { type: Router },
        { type: PoI18nPipe },
        { type: PoModalPasswordRecoveryService }
    ]; };
    __decorate([
        ViewChild('emailForm'),
        __metadata("design:type", NgForm)
    ], PoModalPasswordRecoveryComponent.prototype, "emailForm", void 0);
    __decorate([
        ViewChild('recoveryModal', { static: true }),
        __metadata("design:type", PoModalComponent)
    ], PoModalPasswordRecoveryComponent.prototype, "recoveryModalElement", void 0);
    __decorate([
        ViewChild('smsCodeForm'),
        __metadata("design:type", NgForm)
    ], PoModalPasswordRecoveryComponent.prototype, "smsCodeForm", void 0);
    PoModalPasswordRecoveryComponent = __decorate([
        Component({
            selector: 'po-modal-password-recovery',
            template: "<po-modal\n  #recoveryModal\n  p-hide-close\n  p-size=\"auto\"\n  [ngSwitch]=\"modalType\"\n  [p-primary-action]=\"primaryAction\"\n  [p-secondary-action]=\"secondaryAction\"\n  [p-title]=\"modalTitle\"\n>\n  <div class=\"po-modal-password-recovery-wrapper\">\n    <div *ngSwitchCase=\"'email'\" class=\"po-modal-password-recovery-content po-row\">\n      <div class=\"po-modal-password-recovery-text po-md-12 po-mb-1\">\n        {{ emailModalPhrases.firstPhrase }}\n      </div>\n      <div class=\"po-mb-2 po-md-12\">\n        <form #emailForm=\"ngForm\">\n          <div *ngIf=\"modalPasswordRecoveryTypeAll\">\n            <po-radio-group\n              name=\"type\"\n              [(ngModel)]=\"chosenTypeFormOption\"\n              [p-options]=\"typeFormOptions\"\n              (p-change)=\"getInputType($event)\"\n            >\n            </po-radio-group>\n          </div>\n\n          <div class=\"po-mt-1\">\n            <po-email\n              *ngIf=\"type === 'email' || type === 'all'\"\n              name=\"email\"\n              [(ngModel)]=\"email\"\n              p-required\n              [p-label]=\"literals.insertEmail\"\n              (p-change-model)=\"formModelChangesCheck(emailForm)\"\n            >\n            </po-email>\n\n            <po-input\n              *ngIf=\"type === 'sms'\"\n              name=\"sms\"\n              [(ngModel)]=\"phone\"\n              p-icon=\"po-icon-telephone\"\n              p-required\n              [p-label]=\"literals.insertPhone\"\n              [p-mask]=\"phoneMask\"\n              [p-maxlength]=\"maxLength\"\n              [p-minlength]=\"minLength\"\n              (p-change-model)=\"formModelChangesCheck(emailForm)\"\n            >\n            </po-input>\n          </div>\n\n          <div class=\"po-field-container-bottom po-field-container-error-container\">\n            <po-modal-password-recovery-error-message\n              *ngIf=\"invalidEmail && control.dirty\"\n              [p-text]=\"type === 'sms' ? literals.phoneErrorMessagePhrase : literals.emailErrorMessagePhrase\"\n            >\n            </po-modal-password-recovery-error-message>\n          </div>\n        </form>\n      </div>\n      <div class=\"po-modal-password-recovery-text po-md-12\">\n        {{ emailModalPhrases.secondPhrase }}\n        <span *ngIf=\"contactEmail\">\n          {{ literals.prepositionIn }}\n          <a class=\"po-modal-password-recovery-link\" href=\"mailto:{{ contactEmail }}\" target=\"_self\">\n            {{ contactEmail }}\n          </a>\n        </span>\n        {{ endpoint }}\n      </div>\n    </div>\n\n    <div #smsCodeModal *ngSwitchCase=\"'smsCode'\" class=\"po-modal-password-recovery-content po-row\">\n      <div class=\"po-modal-password-recovery-text po-md-12 po-mb-1\">{{ literals.sentSmsCodePhrase }}</div>\n      <div class=\"po-mb-2 po-md-12\">\n        <form #smsCodeForm=\"ngForm\">\n          <po-input\n            name=\"sms\"\n            [(ngModel)]=\"smsCode\"\n            p-maxlength=\"11\"\n            p-minlength=\"11\"\n            p-required\n            [p-label]=\"literals.insertCode\"\n            [p-mask]=\"codeMask\"\n            (p-change-model)=\"formModelChangesCheck(smsCodeForm)\"\n          >\n          </po-input>\n          <div class=\"po-field-container-bottom po-field-container-error-container\">\n            <po-modal-password-recovery-error-message\n              *ngIf=\"invalidEmail\"\n              [p-text]=\"smsCodeErrorMessage || this.literals.smsCodeErrorMessagePhrase\"\n            >\n            </po-modal-password-recovery-error-message>\n            <po-modal-password-recovery-error-message *ngIf=\"showCustomCodeError\" [p-text]=\"codeError\">\n            </po-modal-password-recovery-error-message>\n          </div>\n        </form>\n      </div>\n      <div class=\"po-modal-password-recovery-text po-md-12\">\n        {{ literals.sendAgainPhrase }}\n        <span class=\"po-modal-password-recovery-link\" (click)=\"resendSmsCode()\">{{ literals.sendAgain }}</span>\n      </div>\n    </div>\n\n    <div #confirmationModal *ngSwitchCase=\"'confirmation'\" class=\"po-modal-password-recovery-content po-row\">\n      <img class=\"po-modal-password-recovery-user-image po-mb-2\" src=\"./assets/images/email-sent.svg\" />\n      <div class=\"po-modal-password-recovery-text\">\n        {{ literals.emailSentConfirmationPhrase }}\n      </div>\n    </div>\n  </div>\n</po-modal>\n"
        }),
        __metadata("design:paramtypes", [Router,
            PoI18nPipe,
            PoModalPasswordRecoveryService])
    ], PoModalPasswordRecoveryComponent);
    return PoModalPasswordRecoveryComponent;
}(PoModalPasswordRecoveryBaseComponent));

/**
 * @docsPrivate
 *
 * @description
 *
 * Componente utilizado para exibição da mensagem customizada de erro em um campo de formulário.
 */
var PoModalPasswordRecoveryErrorMessageComponent = /** @class */ (function () {
    function PoModalPasswordRecoveryErrorMessageComponent() {
    }
    __decorate([
        Input('p-text'),
        __metadata("design:type", String)
    ], PoModalPasswordRecoveryErrorMessageComponent.prototype, "text", void 0);
    PoModalPasswordRecoveryErrorMessageComponent = __decorate([
        Component({
            selector: 'po-modal-password-recovery-error-message',
            template: "<div class=\"po-field-container-bottom-text-error po-field-container-error-item\">\n  <span class=\"po-icon po-icon-exclamation\"></span>\n  <span class=\"po-field-container-error-text\">{{ text }}</span>\n</div>\n"
        })
    ], PoModalPasswordRecoveryErrorMessageComponent);
    return PoModalPasswordRecoveryErrorMessageComponent;
}());

/**
 * @description
 *
 * Módulo do template do po-modal-password-recovery.
 */
var PoModalPasswordRecoveryModule = /** @class */ (function () {
    function PoModalPasswordRecoveryModule() {
    }
    PoModalPasswordRecoveryModule = __decorate([
        NgModule({
            imports: [CommonModule, FormsModule, PoFieldModule, PoModalModule],
            declarations: [PoModalPasswordRecoveryComponent, PoModalPasswordRecoveryErrorMessageComponent],
            exports: [PoModalPasswordRecoveryComponent, PoModalPasswordRecoveryErrorMessageComponent],
            providers: [PoI18nPipe, PoModalPasswordRecoveryService]
        })
    ], PoModalPasswordRecoveryModule);
    return PoModalPasswordRecoveryModule;
}());

var PoPageBackgroundComponent = /** @class */ (function () {
    /**
     * @docsPrivate
     *
     * @description
     *
     * Componente para definição de cor de fundo e dos logotipos primário e secundário para os templates
     * de `po-page-login` e demais templates de login.
     */
    function PoPageBackgroundComponent() {
        this._showSelectLanguage = false;
        this.selectLanguageOptions = [
            { label: 'English', value: 'en' },
            { label: 'Español', value: 'es' },
            { label: 'Português', value: 'pt' },
            { label: 'Pусский', value: 'ru' }
        ];
        /**
         * Evento disparado ao selecionar alguma opção no seletor de idiomas.
         * Para este evento será passado como parâmetro o valor de idioma selecionado.
         */
        this.selectedLanguage = new EventEmitter();
    }
    Object.defineProperty(PoPageBackgroundComponent.prototype, "logo", {
        get: function () {
            return this._logo;
        },
        /** Caminho para a logomarca localizada na parte superior. */
        set: function (value) {
            this._logo = isTypeof(value, 'string') && value.trim() ? value : undefined;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageBackgroundComponent.prototype, "secondaryLogo", {
        get: function () {
            return this._secondaryLogo;
        },
        /**
         * @optional
         *
         * @description
         *
         * Caminho para a logomarca localizada no rodapé.
         */
        set: function (value) {
            this._secondaryLogo = isTypeof(value, 'string') && value.trim() ? value : undefined;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageBackgroundComponent.prototype, "showSelectLanguage", {
        get: function () {
            return this._showSelectLanguage;
        },
        /** Define se o seletor de idiomas deve ser exibido. */
        set: function (showSelectLanguage) {
            this._showSelectLanguage = convertToBoolean(showSelectLanguage);
        },
        enumerable: true,
        configurable: true
    });
    PoPageBackgroundComponent.prototype.ngOnInit = function () {
        this.selectedLanguageOption = browserLanguage();
    };
    PoPageBackgroundComponent.prototype.onChangeLanguage = function () {
        this.selectedLanguage.emit(this.selectedLanguageOption);
    };
    __decorate([
        Input('p-background'),
        __metadata("design:type", String)
    ], PoPageBackgroundComponent.prototype, "background", void 0);
    __decorate([
        Input('p-hide-logo'),
        __metadata("design:type", Boolean)
    ], PoPageBackgroundComponent.prototype, "hideLogo", void 0);
    __decorate([
        Input('p-highlight-info'),
        __metadata("design:type", String)
    ], PoPageBackgroundComponent.prototype, "highlightInfo", void 0);
    __decorate([
        Input('p-logo'),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], PoPageBackgroundComponent.prototype, "logo", null);
    __decorate([
        Input('p-secondary-logo'),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], PoPageBackgroundComponent.prototype, "secondaryLogo", null);
    __decorate([
        Input('p-show-select-language'),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], PoPageBackgroundComponent.prototype, "showSelectLanguage", null);
    __decorate([
        Output('p-selected-language'),
        __metadata("design:type", EventEmitter)
    ], PoPageBackgroundComponent.prototype, "selectedLanguage", void 0);
    PoPageBackgroundComponent = __decorate([
        Component({
            selector: 'po-page-background',
            template: "<div class=\"po-page-login-container\">\n  <div class=\"po-page-login-panel\">\n    <img\n      *ngIf=\"logo\"\n      class=\"po-page-background-main-logo\"\n      [class.po-page-background-hide-logo]=\"hideLogo\"\n      alt=\"main-logo\"\n      [src]=\"logo\"\n    />\n\n    <div class=\"po-page-login-body\">\n      <div class=\"po-page-login-panel-content\">\n        <ng-content></ng-content>\n      </div>\n    </div>\n    <div class=\"po-page-background-footer po-sm-12\">\n      <po-divider class=\"po-page-background-footer-mobile-only\"></po-divider>\n\n      <div class=\"po-page-background-footer-content\">\n        <div *ngIf=\"showSelectLanguage\" class=\"po-page-background-footer-select\">\n          <po-select\n            name=\"selectedLanguageOption\"\n            [(ngModel)]=\"selectedLanguageOption\"\n            [p-options]=\"selectLanguageOptions\"\n            (p-change)=\"onChangeLanguage()\"\n          >\n          </po-select>\n        </div>\n\n        <div\n          class=\"po-page-background-secondary-logo\"\n          [ngClass]=\"\n            showSelectLanguage\n              ? 'po-page-background-secondary-logo-right'\n              : 'po-page-background-secondary-logo-centered'\n          \"\n        >\n          <img\n            *ngIf=\"secondaryLogo\"\n            class=\"po-page-background-secondary-logo-image\"\n            alt=\"secondary-logo\"\n            [src]=\"secondaryLogo\"\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div\n    *ngIf=\"background\"\n    [ngClass]=\"background ? 'po-page-login-highlight-image' : 'po-page-login-highlight-image-off'\"\n    [style.background-image]=\"'url(' + background + ')'\"\n  >\n    <div class=\"po-page-login-highlight-text\">\n      <div class=\"po-font-display\">{{ highlightInfo }}</div>\n    </div>\n  </div>\n</div>\n"
        })
        /**
         * @docsPrivate
         *
         * @description
         *
         * Componente para definição de cor de fundo e dos logotipos primário e secundário para os templates
         * de `po-page-login` e demais templates de login.
         */
    ], PoPageBackgroundComponent);
    return PoPageBackgroundComponent;
}());

/**
 * @description
 *
 * Módulo do template do po-page-background.
 */
var PoPageBackgroundModule = /** @class */ (function () {
    function PoPageBackgroundModule() {
    }
    PoPageBackgroundModule = __decorate([
        NgModule({
            imports: [CommonModule, FormsModule, RouterModule, PoDividerModule, PoFieldModule],
            declarations: [PoPageBackgroundComponent],
            exports: [PoPageBackgroundComponent]
        })
    ], PoPageBackgroundModule);
    return PoPageBackgroundModule;
}());

/**
 * @usedBy PoPageBlockedUserComponent
 *
 * @description
 *
 * *Enum* para os tipos de motivo de bloqueio de usuário. As informações modificam conforme o motivo selecionado pelo desenvolvedor.
 */
var PoPageBlockedUserReason;
(function (PoPageBlockedUserReason) {
    /** Sem definição; a tela exibirá conteúdo de bloqueio genérico. */
    PoPageBlockedUserReason["None"] = "none";
    /** Definição para tentativas de acesso esgotadas. */
    PoPageBlockedUserReason["ExceededAttempts"] = "exceededAttempts";
    /** Definição para senha expirada. */
    PoPageBlockedUserReason["ExpiredPassword"] = "expiredPassword";
})(PoPageBlockedUserReason || (PoPageBlockedUserReason = {}));

var PoPageBlockedUserReasonDefault = PoPageBlockedUserReason.None;
var PoPageBlockedUserParamsDefault = { attempts: 5, days: 90, hours: 24 };
/**
 * @description
 *
 * O componente `po-page-blocked-user` é utilizado como template para tela de bloqueio de usuário.
 * É possível definir entre três tipos de telas para alertar o usuário sobre um eventual bloqueio de login.
 *
 * Cada modelo de bloqueio possui uma imagem e texto adequados à situação.
 * Os textos das telas são pré-definidos e imutáveis, porém,
 * é possível estipular parâmetros como dias, horas e tentativas de acesso esgotadas.
 *
 * Por fim, há propriedades para adição de telefone e/ou email para contato e também a definição para a url de retorno.
 *
 * Para que as imagens sejam exibidas corretamente, é necessário incluir o caminho delas ao projeto. Para isso, edite
 * o *assets* no arquivo **angular.json** da aplicação na seguinte ordem:
 * ```
 *   "assets": [
 *     "src/assets",
 *     "src/favicon.ico",
 *     {
 *       "glob": "**\/*",
 *       "input": "node_modules/@po-ui/style/images",
 *       "output": "assets/images"
 *     }
 *   ]
 * ```
 *
 * _______________
 *
 * #### Praticidade
 * O `po-page-blocked-user`, assim como suas propriedades, pode também ser transmitido diretamente pelas configuraçãos de rota e,
 * desta maneira, dispensa-se qualquer menção e/ou importação no restante da aplicação. O exemplo abaixo exemplifica
 * a forma dinâmica com a qual o template pode ser gerado se navegasse para uma rota denominada como `/access-denied`:
 *
 *
 * ```
 *   import { PoPageBlockedUserComponent, PoPageBlockedUserReason } from '@po-ui/ng-templates';
 *
 *   ...
 *   const routes: Routes = [
 *     {
 *       path: 'access-denied', component: PoPageBlockedUserComponent, data: {
 *         contactEmail: 'dev.po@po-ui.com',
 *         contactPhone: '0800 1234 000',
 *         reason: PoPageBlockedUserReason.ExpiredPassword,
 *         urlBack: '/home'
 *       }
 *     }
 *     ...
 *   ];
 *
 *   @NgModule({
 *     imports: [RouterModule.forRoot(routes)],
 *     exports: [RouterModule]
 *   })
 *   export class AppRoutingModule { }
 * ```
 *
 * > É essencial que siga a nomenclatura dos atributos exemplificados acima para sua efetiva funcionalidade.
 *
 */
var PoPageBlockedUserBaseComponent = /** @class */ (function () {
    function PoPageBlockedUserBaseComponent() {
        this._params = __assign({}, PoPageBlockedUserParamsDefault);
        this._reason = PoPageBlockedUserReason.None;
        this._urlBack = '/';
    }
    Object.defineProperty(PoPageBlockedUserBaseComponent.prototype, "params", {
        get: function () {
            return this._params;
        },
        /**
         * @optional
         *
         * @description
         *
         * Designação de valores usados para a customização da mensagem de bloqueio.
         * Confira abaixo os valores pré-definidos.
         *
         * ```
         *  const customLiterals: PoPageBlockedUserReasonParams = {
         *    attempts: 5,
         *    days: 90,
         *    hours: 24
         *  };
         * ```
         *
         * > Salientamos a importância e atenção para configuração desses valores conforme definidos no projeto.
         *
         * > Veja os parâmetros customizáveis na interface `PoPageBlockedUserReasonParams`.
         *
         */
        set: function (value) {
            if (value instanceof Object) {
                var keys = Object.keys(value);
                var newParams_1 = __assign({}, PoPageBlockedUserParamsDefault);
                keys.forEach(function (key) {
                    newParams_1[key] = value[key];
                });
                this._params = newParams_1;
            }
            else {
                this._params = __assign({}, PoPageBlockedUserParamsDefault);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageBlockedUserBaseComponent.prototype, "reason", {
        get: function () {
            return this._reason;
        },
        /**
         * @optional
         *
         * @description
         *
         * Definição de motivo de bloqueio de usuário. As informações modificam conforme o motivo selecionado.
         *
         * > Veja os valores válidos no *enum* `PoPageBlockedUserReason`.
         *
         * @default `PoPageBlockedUserReason.None`
         */
        set: function (value) {
            this._reason = Object.values(PoPageBlockedUserReason).includes(value)
                ? value
                : PoPageBlockedUserReasonDefault;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageBlockedUserBaseComponent.prototype, "urlBack", {
        get: function () {
            return this._urlBack;
        },
        /**
         * @optional
         *
         * @description
         *
         * URL para a ação de retorno da página.
         *
         * @default `/`
         */
        set: function (url) {
            this._urlBack = url;
        },
        enumerable: true,
        configurable: true
    });
    __decorate([
        Input('p-contact-email'),
        __metadata("design:type", String)
    ], PoPageBlockedUserBaseComponent.prototype, "contactEmail", void 0);
    __decorate([
        Input('p-contact-phone'),
        __metadata("design:type", String)
    ], PoPageBlockedUserBaseComponent.prototype, "contactPhone", void 0);
    __decorate([
        Input('p-params'),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], PoPageBlockedUserBaseComponent.prototype, "params", null);
    __decorate([
        Input('p-logo'),
        __metadata("design:type", String)
    ], PoPageBlockedUserBaseComponent.prototype, "logo", void 0);
    __decorate([
        Input('p-reason'),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], PoPageBlockedUserBaseComponent.prototype, "reason", null);
    __decorate([
        Input('p-secondary-logo'),
        __metadata("design:type", String)
    ], PoPageBlockedUserBaseComponent.prototype, "secondaryLogo", void 0);
    __decorate([
        Input('p-url-back'),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], PoPageBlockedUserBaseComponent.prototype, "urlBack", null);
    PoPageBlockedUserBaseComponent = __decorate([
        Directive()
    ], PoPageBlockedUserBaseComponent);
    return PoPageBlockedUserBaseComponent;
}());

var poPageBlockedUserButtonLiterals = {
    en: {
        primaryButton: 'Back to home screen'
    },
    es: {
        primaryButton: 'Volver al inicio'
    },
    pt: {
        primaryButton: 'Voltar para o início'
    },
    ru: {
        primaryButton: 'Перейти к началу страницы'
    }
};
/**
 * @docsExtends PoPageBlockedUserBaseComponent
 *
 * @example
 *
 * <example name="po-page-blocked-user-basic" title="PO Page Blocked User Basic">
 *  <file name="sample-po-page-blocked-user-basic/sample-po-page-blocked-user-basic.component.html"> </file>
 *  <file name="sample-po-page-blocked-user-basic/sample-po-page-blocked-user-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-page-blocked-user-labs" title="PO Page Blocked User Labs">
 *  <file name="sample-po-page-blocked-user-labs/sample-po-page-blocked-user-labs.component.html"> </file>
 *  <file name="sample-po-page-blocked-user-labs/sample-po-page-blocked-user-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-page-blocked-user-exceeded-attempts" title="PO Page Blocked User Exceeded Attempts">
 *  <file name="sample-po-page-blocked-user-exceeded-attempts/sample-po-page-blocked-user-exceeded-attempts.component.html"> </file>
 *  <file name="sample-po-page-blocked-user-exceeded-attempts/sample-po-page-blocked-user-exceeded-attempts.component.ts"> </file>
 * </example>
 *
 * <example name="po-page-blocked-user-expired-password" title="PO Page Blocked User Expired Password">
 *  <file name="sample-po-page-blocked-user-expired-password/sample-po-page-blocked-user-expired-password.component.html"> </file>
 *  <file name="sample-po-page-blocked-user-expired-password/sample-po-page-blocked-user-expired-password.component.ts"> </file>
 * </example>
 */
var PoPageBlockedUserComponent = /** @class */ (function (_super) {
    __extends(PoPageBlockedUserComponent, _super);
    function PoPageBlockedUserComponent(activatedRoute, router) {
        var _this = _super.call(this) || this;
        _this.activatedRoute = activatedRoute;
        _this.router = router;
        _this.literals = __assign(__assign({}, poPageBlockedUserButtonLiterals[poLocaleDefault]), poPageBlockedUserButtonLiterals[browserLanguage()]);
        return _this;
    }
    PoPageBlockedUserComponent.prototype.ngOnInit = function () {
        this.checkingForRouteMetadata(this.activatedRoute.snapshot.data);
    };
    PoPageBlockedUserComponent.prototype.navigateTo = function (url) {
        isExternalLink(url) ? window.open(url) : this.router.navigate([url || '/']);
    };
    PoPageBlockedUserComponent.prototype.checkingForMetadataProperty = function (object, property) {
        if (Object.prototype.hasOwnProperty.call(object, property)) {
            return object[property];
        }
    };
    PoPageBlockedUserComponent.prototype.checkingForRouteMetadata = function (data) {
        if (Object.keys(data).length !== 0) {
            this.contactEmail = this.checkingForMetadataProperty(data, 'contactEmail') || this.contactEmail;
            this.contactPhone = this.checkingForMetadataProperty(data, 'contactPhone') || this.contactPhone;
            this.reason = this.checkingForMetadataProperty(data, 'reason') || this.reason;
            this.urlBack = this.checkingForMetadataProperty(data, 'urlBack') || this.urlBack;
        }
    };
    PoPageBlockedUserComponent.ctorParameters = function () { return [
        { type: ActivatedRoute },
        { type: Router }
    ]; };
    PoPageBlockedUserComponent = __decorate([
        Component({
            selector: 'po-page-blocked-user',
            template: "<div class=\"po-page-blocked-user-wrapper\">\n  <div class=\"po-page-background-wrap\">\n    <po-page-background [p-hide-logo]=\"true\" [p-logo]=\"logo\" [p-secondary-logo]=\"secondaryLogo\">\n      <po-page-blocked-user-reason [p-params]=\"params\" [p-reason]=\"reason\"> </po-page-blocked-user-reason>\n\n      <div class=\"po-page-blocked-user-mobile-bottom-alignment\">\n        <po-page-blocked-user-contacts [p-email]=\"contactEmail\" [p-phone]=\"contactPhone\">\n        </po-page-blocked-user-contacts>\n\n        <div class=\"po-row\">\n          <po-button\n            class=\"po-lg-12 po-sm-12 po-page-blocked-user-button\"\n            p-type=\"primary\"\n            [p-label]=\"literals.primaryButton\"\n            (p-click)=\"navigateTo(urlBack)\"\n          >\n          </po-button>\n        </div>\n      </div>\n    </po-page-background>\n  </div>\n</div>\n"
        }),
        __metadata("design:paramtypes", [ActivatedRoute, Router])
    ], PoPageBlockedUserComponent);
    return PoPageBlockedUserComponent;
}(PoPageBlockedUserBaseComponent));

var poPageBlockedUserContactItemMargin = 16;
var PoPageBlockedUserContactsComponent = /** @class */ (function () {
    function PoPageBlockedUserContactsComponent(changeDetector) {
        this.changeDetector = changeDetector;
        this.overflowItem = true;
    }
    Object.defineProperty(PoPageBlockedUserContactsComponent.prototype, "email", {
        get: function () {
            return this._email;
        },
        set: function (value) {
            this._email = value;
            this.checkContactItemWidth();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageBlockedUserContactsComponent.prototype, "phone", {
        get: function () {
            return this._phone;
        },
        set: function (value) {
            this._phone = value;
            this.checkContactItemWidth();
        },
        enumerable: true,
        configurable: true
    });
    PoPageBlockedUserContactsComponent.prototype.checkContactItemWidth = function () {
        this.overflowItem = true;
        if (this.phone && this.email) {
            this.changeDetector.detectChanges();
            var phoneWidth = this.phoneItem.nativeElement.offsetWidth;
            var mailWidth = this.mailItem.nativeElement.offsetWidth;
            var contactGroupHalfWidth = this.contactGroup.nativeElement.offsetWidth / 2 - poPageBlockedUserContactItemMargin;
            this.overflowItem =
                phoneWidth > contactGroupHalfWidth || mailWidth > contactGroupHalfWidth - poPageBlockedUserContactItemMargin;
        }
    };
    PoPageBlockedUserContactsComponent.ctorParameters = function () { return [
        { type: ChangeDetectorRef }
    ]; };
    __decorate([
        Input('p-email'),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], PoPageBlockedUserContactsComponent.prototype, "email", null);
    __decorate([
        Input('p-phone'),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], PoPageBlockedUserContactsComponent.prototype, "phone", null);
    __decorate([
        ViewChild('contactGroup', { static: true }),
        __metadata("design:type", ElementRef)
    ], PoPageBlockedUserContactsComponent.prototype, "contactGroup", void 0);
    __decorate([
        ViewChild('mailItem', { static: true }),
        __metadata("design:type", ElementRef)
    ], PoPageBlockedUserContactsComponent.prototype, "mailItem", void 0);
    __decorate([
        ViewChild('phoneItem', { static: true }),
        __metadata("design:type", ElementRef)
    ], PoPageBlockedUserContactsComponent.prototype, "phoneItem", void 0);
    PoPageBlockedUserContactsComponent = __decorate([
        Component({
            selector: 'po-page-blocked-user-contacts',
            template: "<div #contactGroup class=\"po-page-blocked-user-contact-group po-row po-mb-3\">\n  <div\n    class=\"po-page-blocked-user-contact-item\"\n    [class.po-invisible]=\"!phone\"\n    [ngClass]=\"overflowItem ? 'po-md-12' : 'po-md-6'\"\n  >\n    <a\n      class=\"po-page-blocked-user-link po-clickable\"\n      [class.po-page-blocked-user-contact-content-inline]=\"overflowItem\"\n      href=\"tel:{{ phone }}\"\n      target=\"_self\"\n    >\n      <div class=\"po-page-blocked-user-contact-group-item\">\n        <span class=\"po-page-blocked-user-contact-icon po-icon po-icon-telephone po-pr-1\"></span>\n        <div #phoneItem class=\"po-page-blocked-user-contact-text po-font-text\">{{ phone }}</div>\n      </div>\n    </a>\n  </div>\n  <div\n    class=\"po-page-blocked-user-contact-item po-page-blocked-user-contact-mail\"\n    [class.po-invisible]=\"!email\"\n    [ngClass]=\"overflowItem ? 'po-md-12' : 'po-md-6'\"\n  >\n    <a\n      class=\"po-page-blocked-user-link po-clickable\"\n      [class.po-page-blocked-user-contact-content-inline]=\"overflowItem\"\n      href=\"mailto:{{ email }}\"\n      target=\"_self\"\n    >\n      <div class=\"po-page-blocked-user-contact-group-item\">\n        <span class=\"po-page-blocked-user-contact-icon po-icon po-icon-mail po-pr-1\"></span>\n        <div #mailItem class=\"po-page-blocked-user-contact-text po-font-text\">{{ email }}</div>\n      </div>\n    </a>\n  </div>\n</div>\n",
            changeDetection: ChangeDetectionStrategy.OnPush
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef])
    ], PoPageBlockedUserContactsComponent);
    return PoPageBlockedUserContactsComponent;
}());

var poPageBlockedUserLiterals = {
    none: {
        pt: {
            title: 'Opa!',
            firstPhrase: 'Tivemos que bloquear essa tela temporariamente.',
            secondPhrase: 'Mas não se preocupe! Basta fazer seu login novamente.'
        },
        en: {
            title: 'Oops!',
            firstPhrase: 'We had to temporarily block this screen.',
            secondPhrase: 'But do not worry! Just sign in again.'
        },
        es: {
            title: 'Opa!',
            firstPhrase: 'Tuvimos que bloquear esta pantalla temporalmente.',
            secondPhrase: '¡Pero no se preocupe! Sólo tienes que iniciar sesión de nuevo.'
        }
    },
    exceededAttempts: {
        pt: {
            title: 'Opa!',
            firstPhrase: "Para sua seguran\u00E7a, ap\u00F3s {0} tentativa(s) de senha seu usu\u00E1rio fica bloqueado e n\u00E3o pode ser acessado em {1} hora(s) :( ",
            secondPhrase: 'Isso é para evitar que hackers invadam sua conta.',
            thirdPhrase: 'Mas não se preocupe! Se você for o dono da conta e apenas esqueceu sua senha, basta entrar em contato com o suporte.'
        },
        en: {
            title: 'Oops!',
            firstPhrase: "For your security, after {0} attempt(s) of password\n        your user gets blocked and can not be accessed in {1} hour(s) :(",
            secondPhrase: 'This is to prevent hackers from hacking into your account.',
            thirdPhrase: 'But do not worry! If you are the owner of the account and just forgot your password, just contact support.'
        },
        es: {
            title: 'Opa!',
            firstPhrase: "Para su seguridad, despu\u00E9s de {0} intento(s) de contrase\u00F1a\n        su usuario queda bloqueado y no puede ser accedido en {1} hora(s) :(",
            secondPhrase: 'Esto es para evitar que los hackers invadan su cuenta.',
            thirdPhrase: "\u00A1Pero no se preocupe! Si usted es el due\u00F1o de la cuenta\n        y acaba de olvidar su contrase\u00F1a, simplemente p\u00F3ngase en contacto con el soporte."
        }
    },
    expiredPassword: {
        pt: {
            title: 'Opa! Sua senha expirou',
            firstPhrase: "A cada {0} dia(s) \u00E9 preciso criar uma nova senha por quest\u00E3o de seguran\u00E7a. Ap\u00F3s esses {0} dia(s) seu acesso \u00E9 bloqueado :(",
            secondPhrase: 'Mas não se preocupe! Basta entrar em contato com o administrador do sistema.'
        },
        en: {
            title: 'Oops! Your Password has expired',
            firstPhrase: "Every {0} day(s) you need to create a new password for security reasons.\n        After these {0} day(s) your access is blocked :(",
            secondPhrase: 'But do not worry! Just contact your system administrator.'
        },
        es: {
            title: 'Opa! Su contraseña ha caducado',
            firstPhrase: "Cada {0} d\u00EDa(s) es necesario crear una nueva contrase\u00F1a por razones de seguridad.\n        Despu\u00E9s de estos {0} d\u00EDa(s) su acceso est\u00E1 bloqueado :(",
            secondPhrase: '¡Pero no se preocupe! Sólo tienes que ponerse en contacto con el administrador del sistema.'
        }
    }
};

var PoPageBlockedUserReasonComponent = /** @class */ (function () {
    function PoPageBlockedUserReasonComponent(changeDetector) {
        this.changeDetector = changeDetector;
    }
    PoPageBlockedUserReasonComponent.prototype.ngOnChanges = function (changes) {
        if (changes.reason || changes.params) {
            this.getLiterals();
        }
    };
    PoPageBlockedUserReasonComponent.prototype.ngOnInit = function () {
        this.getLiterals();
    };
    PoPageBlockedUserReasonComponent.prototype.getImageByReasonType = function () {
        var reasonImage;
        switch (this.reason) {
            case 'none': {
                reasonImage = 'big-lock';
                break;
            }
            case 'exceededAttempts': {
                reasonImage = 'blocked-user';
                break;
            }
            case 'expiredPassword': {
                reasonImage = 'expired';
                break;
            }
        }
        return "./assets/images/" + reasonImage + ".svg";
    };
    PoPageBlockedUserReasonComponent.prototype.getParams = function () {
        this.literalParams =
            this.reason === 'expiredPassword'
                ? [this.params.days, this.params.days]
                : [this.params.attempts, this.params.hours];
    };
    PoPageBlockedUserReasonComponent.prototype.getLiterals = function () {
        this.getParams();
        this.literals = __assign(__assign({}, poPageBlockedUserLiterals[this.reason][poLocaleDefault]), poPageBlockedUserLiterals[this.reason][browserLanguage()]);
        this.changeDetector.detectChanges();
    };
    PoPageBlockedUserReasonComponent.ctorParameters = function () { return [
        { type: ChangeDetectorRef }
    ]; };
    __decorate([
        Input('p-params'),
        __metadata("design:type", Object)
    ], PoPageBlockedUserReasonComponent.prototype, "params", void 0);
    __decorate([
        Input('p-reason'),
        __metadata("design:type", String)
    ], PoPageBlockedUserReasonComponent.prototype, "reason", void 0);
    PoPageBlockedUserReasonComponent = __decorate([
        Component({
            selector: 'po-page-blocked-user-reason',
            template: "<div class=\"po-page-blocked-user-reason-content\">\n  <img class=\"po-page-blocked-user-image po-mb-3\" [src]=\"getImageByReasonType()\" />\n  <div class=\"po-page-blocked-user-header po-mb-md-3 po-row\">\n    <div class=\"po-md-12\">{{ literals?.title }}</div>\n  </div>\n  <div class=\"po-page-blocked-user-text po-font-text po-row\">\n    <div class=\"po-mb-sm-2 po-mb-md-3 po-md-12 po-page-blocked-user-text-bold\">\n      {{ literals?.firstPhrase | poI18n: literalParams }}\n    </div>\n    <div class=\"po-mb-sm-2 po-mb-md-3 po-md-12\">{{ literals?.secondPhrase }}</div>\n    <div class=\"po-mb-sm-2 po-mb-md-3 po-md-12\" *ngIf=\"literals?.thirdPhrase\">{{ literals?.thirdPhrase }}</div>\n  </div>\n</div>\n"
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef])
    ], PoPageBlockedUserReasonComponent);
    return PoPageBlockedUserReasonComponent;
}());

/**
 * @description
 *
 * Módulo do template do po-page-blocked-user.
 */
var PoPageBlockedUserModule = /** @class */ (function () {
    function PoPageBlockedUserModule() {
    }
    PoPageBlockedUserModule = __decorate([
        NgModule({
            imports: [CommonModule, RouterModule, PoModule, PoPageBackgroundModule],
            declarations: [PoPageBlockedUserComponent, PoPageBlockedUserContactsComponent, PoPageBlockedUserReasonComponent],
            exports: [PoPageBlockedUserComponent, PoPageBlockedUserContactsComponent, PoPageBlockedUserReasonComponent]
        })
    ], PoPageBlockedUserModule);
    return PoPageBlockedUserModule;
}());

/**
 * @description
 *
 * O componente `po-page-change-password` é utilizado como template para tela de cadastro ou alteração de senha.
 *
 * Apresenta dicas e regras para senhas mais seguras e também possibilidade de personalizar o redirecionamento para as telas
 * 'esqueceu a senha', 'voltar' e 'entrar no sistema'. Os textos das telas são pré-definidos e imutáveis.
 *
 * A propriedade `p-url-new-password` automatiza a rotina do template e simplifica o processo de cadastro/alteração de senha, bastando
 * definir uma url para POST das informações digitadas pelo usuário.  A flexibilidade e praticidade podem chegar a um nível em que o
 * desenvolvimento da aplicação no *client side* é desprovida de qualquer código-fonte relacionado à rotina de cadastro/alteração de senha.
 * Seu detalhamento para uso pode ser visto logo abaixo em *propriedades*.
 * Caso julgue necessário, pode-se também definir manualmente a rotina do componente.
 *
 * Para que as imagens sejam exibidas corretamente, é necessário incluir o caminho delas ao projeto. Para isso, edite
 * o *assets* no arquivo **angular.json** da aplicação na seguinte ordem:
 * ```
 *   "assets": [
 *     "src/assets",
 *     "src/favicon.ico",
 *     {
 *       "glob": "**\/*",
 *       "input": "node_modules/@po-ui/style/images",
 *       "output": "assets/images"
 *     }
 *   ]
 * ```
 */
var PoPageChangePasswordBaseComponent = /** @class */ (function () {
    function PoPageChangePasswordBaseComponent() {
        this._hideCurrentPassword = false;
        this._requirements = [];
        this._urlHome = '/';
        /**
         * @optional
         *
         * @description
         *
         * URL para a ação de retorno da página.
         *
         * > O botão `Voltar` aparece apenas para telas de alteração de senha, ou seja, só aparece se a propriedade `p-hide-current-password` for
         * falsa.
         *
         * @default `/`
         */
        this.urlBack = '/';
        /**
         * @optional
         *
         * @description
         *
         * Função executada ao submeter o form pelo botão salvar.
         *
         * Caso definida essa função, a modal de confirmação não aparece, mas pode ser chamada pelo
         * método `openConfirmation`. Exemplo:
         *
         * ```
         * @ViewChild(PoPageChangePasswordComponent) changePassword: PoPageChangePasswordComponent;
         *
         * onSubmit() {
         *  this.changePassword.openConfirmation();
         * }
         *
         * ```
         * > Esta propriedade será ignorada se for definido valor para a propriedade `p-url-new-password`.
         */
        this.submit = new EventEmitter();
    }
    Object.defineProperty(PoPageChangePasswordBaseComponent.prototype, "hideCurrentPassword", {
        get: function () {
            return this._hideCurrentPassword;
        },
        /**
         * @optional
         *
         * @description
         *
         * Esconde o campo `Senha atual` para que o template seja para criação de senha.
         *
         * @default `false`
         */
        set: function (value) {
            this._hideCurrentPassword = convertToBoolean(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageChangePasswordBaseComponent.prototype, "recovery", {
        get: function () {
            return this._recovery;
        },
        /**
         * @optional
         *
         * @description
         *
         * URL para a ação do link `Esqueceu a senha`.
         *
         * A propriedade aceita os seguintes tipos:
         *
         * - **String**: informe uma url externa ou uma rota válida;
         * - **Function**: pode-se customizar a ação. Para esta possilidade basta atribuir:
         * ```
         * <po-page-change-password>
         *      [recovery]="this.myFunc.bind(this)";
         * </po-page-change-password>
         * ```
         *
         * - **PoPageChangePasswordRecovery**: cria-se vínculo automático com o template **po-modal-password-recovery**.
         *   O objeto deve conter a **url** para requisição dos recursos e pode-se definir o **tipo** de modal para recuperação de senha,
         *   **email** para contato e **máscara** do campo de telefone.
         *
         * > Caso não tenha valor o link `Esqueceu a senha` desaparece.
         */
        set: function (value) {
            this._recovery = value;
            if (isTypeof(value, 'string')) {
                this.recoveryUrlType = isExternalLink(value) ? 'externalLink' : 'internalLink';
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageChangePasswordBaseComponent.prototype, "requirements", {
        get: function () {
            return this._requirements;
        },
        /**
         * @optional
         *
         * @description
         *
         * Lista de regras para criação e alteração de senha.
         */
        set: function (value) {
            this._requirements = value || [];
            this.showRequirements = this._requirements.length > 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageChangePasswordBaseComponent.prototype, "urlHome", {
        get: function () {
            return this._urlHome;
        },
        /**
         * @optional
         *
         * @description
         *
         * URL para a ação do botão `Entrar no sistema` da modal de confirmação que aparece após salvar a senha ou se chamada pelo método
         * `openConfirmation`.
         *
         * @default `/`
         */
        set: function (value) {
            this._urlHome = value;
            this.modalAction.action = this.navigateTo.bind(this, this.urlHome);
        },
        enumerable: true,
        configurable: true
    });
    __decorate([
        Input('p-hide-current-password'),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], PoPageChangePasswordBaseComponent.prototype, "hideCurrentPassword", null);
    __decorate([
        Input('p-logo'),
        __metadata("design:type", String)
    ], PoPageChangePasswordBaseComponent.prototype, "logo", void 0);
    __decorate([
        Input('p-recovery'),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], PoPageChangePasswordBaseComponent.prototype, "recovery", null);
    __decorate([
        Input('p-requirements'),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], PoPageChangePasswordBaseComponent.prototype, "requirements", null);
    __decorate([
        Input('p-secondary-logo'),
        __metadata("design:type", String)
    ], PoPageChangePasswordBaseComponent.prototype, "secondaryLogo", void 0);
    __decorate([
        Input('p-token'),
        __metadata("design:type", String)
    ], PoPageChangePasswordBaseComponent.prototype, "token", void 0);
    __decorate([
        Input('p-url-back'),
        __metadata("design:type", String)
    ], PoPageChangePasswordBaseComponent.prototype, "urlBack", void 0);
    __decorate([
        Input('p-url-new-password'),
        __metadata("design:type", String)
    ], PoPageChangePasswordBaseComponent.prototype, "urlNewPassword", void 0);
    __decorate([
        Input('p-url-home'),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], PoPageChangePasswordBaseComponent.prototype, "urlHome", null);
    __decorate([
        Output('p-submit'),
        __metadata("design:type", EventEmitter)
    ], PoPageChangePasswordBaseComponent.prototype, "submit", void 0);
    PoPageChangePasswordBaseComponent = __decorate([
        Directive()
    ], PoPageChangePasswordBaseComponent);
    return PoPageChangePasswordBaseComponent;
}());

var poPageChangePasswordLiterals = {
    en: {
        backButton: 'Back',
        confirmPassword: 'Confirm password',
        createNewPassword: 'Create new password',
        createNewPasswordPhrase: 'Protect your account with a personal password created by you',
        currentPassword: 'Current password',
        enterSystemButton: 'Enter the system',
        forgotPassword: 'Forgot your password?',
        newPassword: 'New password',
        passwordSuccessfullyCreated: 'Password successfully created!',
        passwordSuccessfullyUpdated: 'Password successfully updated!',
        requirements: 'Password requirements',
        safetyTips: 'Safety tips!',
        safetyTipsFirst: 'is used in other accounts;',
        safetyTipsPhrase: 'Avoid a password that:',
        safetyTipsSecond: 'has personal information like your name, nickname or family names;',
        safetyTipsThird: 'that uses obvious sequences like "123" or obvious words like "password";',
        saveButton: 'Save'
    },
    es: {
        backButton: 'Volver',
        confirmPassword: 'Confirmar seña',
        createNewPassword: 'Crear nueva contraseña',
        createNewPasswordPhrase: 'Proteger su cuenta con una contraseña personal creada por usted',
        currentPassword: 'Contraseña actual',
        enterSystemButton: 'Entrar en el sistema',
        forgotPassword: '¿Olvidaste tu contraseña?',
        newPassword: 'Nueva contraseña',
        passwordSuccessfullyCreated: 'Contraseña creada correctamente!',
        passwordSuccessfullyUpdated: 'Contraseña correctamente actualizada!',
        requirements: 'Requisitos de contraseña',
        safetyTips: 'Consejos de seguridad!',
        safetyTipsFirst: 'se utilice en otras cuentas;',
        safetyTipsPhrase: 'Evite una contraseña que:',
        safetyTipsSecond: 'utiliza información personal como su nombre, apellido o nombre de familia;',
        safetyTipsThird: 'utilice secuencias muy obvias como "1234" o "abcd" o palabras obvias como "contraseña";',
        saveButton: 'Guardar'
    },
    pt: {
        backButton: 'Voltar',
        confirmPassword: 'Confirmar senha',
        createNewPassword: 'Criar nova senha',
        createNewPasswordPhrase: 'Proteja sua conta com uma senha pessoal criada por você',
        currentPassword: 'Senha atual',
        enterSystemButton: 'Entrar no sistema',
        forgotPassword: 'Esqueceu sua senha?',
        newPassword: 'Nova senha',
        passwordSuccessfullyCreated: 'Senha criada com sucesso!',
        passwordSuccessfullyUpdated: 'Senha alterada com sucesso!',
        requirements: 'Requisitos de senha',
        safetyTips: 'Dicas de segurança!',
        safetyTipsFirst: 'seja usada em outras contas;',
        safetyTipsPhrase: 'Evite uma senha que:',
        safetyTipsSecond: 'usa informações pessoais como seu nome, apelido ou nome de familiares;',
        safetyTipsThird: 'use sequências muito óbvias como "1234" ou "abcd" ou palavras óbvias como “senha”;',
        saveButton: 'Salvar'
    },
    ru: {
        backButton: 'возвращение',
        confirmPassword: 'Подтвердите пароль',
        createNewPassword: 'Создать новый пароль',
        createNewPasswordPhrase: 'Защитите свой аккаунт с помощью личного пароля.',
        currentPassword: 'Текущий пароль',
        enterSystemButton: 'Вход в систему',
        forgotPassword: 'Забыли пароль?',
        newPassword: 'Новый пароль',
        passwordSuccessfullyCreated: 'Пароль успешно создан!',
        passwordSuccessfullyUpdated: 'Пароль успешно изменен!',
        requirements: 'Требования к паролю',
        safetyTips: 'Советы по безопасности!',
        safetyTipsFirst: 'использоваться на других счетах;',
        safetyTipsPhrase: 'Избегайте пароля, который:',
        safetyTipsSecond: 'использует личную информацию, такую ​​как ваше имя, фамилию или фамилию;',
        safetyTipsThird: 'используйте очень очевидные строки, такие как "1234" или "abcd", или такие очевидные слова, как "пароль";',
        saveButton: 'экономить'
    }
};

var PoPageChangePasswordService = /** @class */ (function () {
    function PoPageChangePasswordService(http) {
        this.http = http;
    }
    PoPageChangePasswordService.prototype.post = function (url, item) {
        return this.http.post(url, item, { observe: 'response' });
    };
    PoPageChangePasswordService.ctorParameters = function () { return [
        { type: HttpClient }
    ]; };
    PoPageChangePasswordService = __decorate([
        Injectable(),
        __metadata("design:paramtypes", [HttpClient])
    ], PoPageChangePasswordService);
    return PoPageChangePasswordService;
}());

/**
 * @docsExtends PoPageChangePasswordBaseComponent
 *
 * @example
 *
 * <example name="po-page-change-password-basic" title="PO Page Change Password Basic">
 *  <file name="sample-po-page-change-password-basic/sample-po-page-change-password-basic.component.html"> </file>
 *  <file name="sample-po-page-change-password-basic/sample-po-page-change-password-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-page-change-password-labs" title="PO Page Change Password Labs">
 *  <file name="sample-po-page-change-password-labs/sample-po-page-change-password-labs.component.html"> </file>
 *  <file name="sample-po-page-change-password-labs/sample-po-page-change-password-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-page-change-password-modify" title="PO Page Change Password Modify">
 *  <file name="sample-po-page-change-password-modify/sample-po-page-change-password-modify.component.html"> </file>
 *  <file name="sample-po-page-change-password-modify/sample-po-page-change-password-modify.component.ts"> </file>
 * </example>
 *
 * <example name="po-page-change-password-create" title="PO Page Change Password Create">
 *  <file name="sample-po-page-change-password-create/sample-po-page-change-password-create.component.html"> </file>
 *  <file name="sample-po-page-change-password-create/sample-po-page-change-password-create.component.ts"> </file>
 * </example>
 *
 * <example name="po-page-change-password-request" title="PO Page Change Password Request">
 *  <file name="sample-po-page-change-password-request/sample-po-page-change-password-request.component.html"> </file>
 *  <file name="sample-po-page-change-password-request/sample-po-page-change-password-request.component.ts"> </file>
 * </example>
 */
var PoPageChangePasswordComponent = /** @class */ (function (_super) {
    __extends(PoPageChangePasswordComponent, _super);
    function PoPageChangePasswordComponent(activatedRoute, route, router, service, poComponentInjector, viewRef) {
        var _this = _super.call(this) || this;
        _this.activatedRoute = activatedRoute;
        _this.route = route;
        _this.router = router;
        _this.service = service;
        _this.poComponentInjector = poComponentInjector;
        _this.literals = __assign(__assign({}, poPageChangePasswordLiterals[poLocaleDefault]), poPageChangePasswordLiterals[browserLanguage()]);
        _this.componentRef = null;
        _this.modalAction = {
            action: _this.navigateTo.bind(_this, _this.urlHome),
            label: _this.literals.enterSystemButton
        };
        _this.parentRef = getParentRef(viewRef);
        return _this;
    }
    PoPageChangePasswordComponent.prototype.ngAfterViewInit = function () {
        if (this.urlNewPassword) {
            this.subscribeToTokenParameter();
        }
    };
    PoPageChangePasswordComponent.prototype.ngOnDestroy = function () {
        if (this.newPasswordSubscription) {
            this.newPasswordSubscription.unsubscribe();
        }
    };
    PoPageChangePasswordComponent.prototype.ngOnInit = function () {
        this.checkingForRouteMetadata(this.activatedRoute.snapshot.data);
    };
    PoPageChangePasswordComponent.prototype.navigateTo = function (url) {
        isExternalLink(url) ? window.open(url) : this.router.navigate([url || '/']);
    };
    PoPageChangePasswordComponent.prototype.onForgotPasswordClick = function (recovery) {
        if (isTypeof(recovery, 'function')) {
            recovery();
        }
        else {
            this.createModalPasswordRecoveryComponent(recovery);
        }
    };
    PoPageChangePasswordComponent.prototype.onLoginSubmit = function () {
        var form = this.getLoginForm();
        if (this.urlNewPassword) {
            this.postUrlNewPassword(form);
        }
        else if (this.submit && this.submit.observers.length) {
            this.emitSubmit(form);
        }
    };
    /**
     * Abre uma modal de confirmação com texto, imagem e botão que redireciona para o link definido na propriedade `p-url-home`
     */
    PoPageChangePasswordComponent.prototype.openConfirmation = function () {
        this.modal.open();
    };
    PoPageChangePasswordComponent.prototype.validatePassword = function () {
        var _this = this;
        var controls = this.passwordForm.form.controls;
        var controlConfirmPassword = controls['confirmPassword'];
        var controlNewPassword = controls['newPassword'];
        if (!this.newPassword) {
            this.setFormErrors({ 'required': true }, [controlNewPassword]);
        }
        else if (!this.confirmPassword) {
            this.setFormErrors({ 'required': true }, [controlConfirmPassword]);
        }
        else if (this.newPassword && this.confirmPassword && this.newPassword !== this.confirmPassword) {
            this.setFormErrors({ 'equalPassword': true }, [controlNewPassword, controlConfirmPassword]);
        }
        else {
            this.setFormErrors(null, [controlConfirmPassword, controlNewPassword]);
        }
        if (this.requirements.length &&
            this.requirements.find(function (requirement) { return _this.validateRequirement(requirement) === false; })) {
            this.setFormErrors({ 'requirement': true }, [controlNewPassword]);
        }
    };
    PoPageChangePasswordComponent.prototype.validateRequirement = function (requirement) {
        return typeof requirement.status === 'function'
            ? requirement.status.call(this.parentRef, this.newPassword)
            : requirement.status;
    };
    PoPageChangePasswordComponent.prototype.checkingForMetadataProperty = function (object, property) {
        if (Object.prototype.hasOwnProperty.call(object, property)) {
            return object[property];
        }
    };
    PoPageChangePasswordComponent.prototype.checkingForRouteMetadata = function (data) {
        if (Object.keys(data).length !== 0) {
            this.urlNewPassword = this.checkingForMetadataProperty(data, 'serviceApi') || this.urlNewPassword;
            this.recovery = this.checkingForMetadataProperty(data, 'recovery') || this.recovery;
            this.hideCurrentPassword =
                this.checkingForMetadataProperty(data, 'hideCurrentPassword') || this.hideCurrentPassword;
        }
    };
    PoPageChangePasswordComponent.prototype.createModalPasswordRecoveryComponent = function (recovery) {
        var _this = this;
        if (this.componentRef) {
            this.poComponentInjector.destroyComponentInApplication(this.componentRef);
        }
        this.componentRef = this.poComponentInjector.createComponentInApplication(PoModalPasswordRecoveryComponent);
        this.componentRef.instance.recovery = recovery.url;
        this.componentRef.instance.contactEmail = recovery.contactMail;
        this.componentRef.instance.phoneMask = recovery.phoneMask;
        this.componentRef.instance.type = recovery.type || PoModalPasswordRecoveryType.Email;
        this.componentRef.changeDetectorRef.detectChanges();
        setTimeout(function () {
            _this.componentRef.instance.open();
        });
    };
    PoPageChangePasswordComponent.prototype.emitSubmit = function (form) {
        this.submit.emit(form);
    };
    PoPageChangePasswordComponent.prototype.getLoginForm = function () {
        return {
            currentPassword: this.currentPassword,
            newPassword: this.newPassword
        };
    };
    PoPageChangePasswordComponent.prototype.postUrlNewPassword = function (form) {
        var _this = this;
        form['token'] = this.token;
        this.service.post(this.urlNewPassword, form).subscribe(function (response) {
            if (response.status === 204) {
                _this.openConfirmation();
            }
        });
    };
    PoPageChangePasswordComponent.prototype.setFormErrors = function (error, controls) {
        controls.forEach(function (control) {
            control.setErrors(error);
        });
    };
    PoPageChangePasswordComponent.prototype.subscribeToTokenParameter = function () {
        var _this = this;
        this.route.queryParams.subscribe(function (params) {
            var token = params['token'];
            if (token) {
                _this.token = token;
            }
        });
    };
    PoPageChangePasswordComponent.ctorParameters = function () { return [
        { type: ActivatedRoute },
        { type: ActivatedRoute },
        { type: Router },
        { type: PoPageChangePasswordService },
        { type: PoComponentInjectorService },
        { type: ViewContainerRef }
    ]; };
    __decorate([
        ViewChild(PoModalComponent, { static: true }),
        __metadata("design:type", PoModalComponent)
    ], PoPageChangePasswordComponent.prototype, "modal", void 0);
    __decorate([
        ViewChild('pageChangePassword', { read: ViewContainerRef, static: true }),
        __metadata("design:type", ViewContainerRef)
    ], PoPageChangePasswordComponent.prototype, "pageChangePassword", void 0);
    __decorate([
        ViewChild('passwordForm', { read: NgForm, static: true }),
        __metadata("design:type", NgForm)
    ], PoPageChangePasswordComponent.prototype, "passwordForm", void 0);
    PoPageChangePasswordComponent = __decorate([
        Component({
            selector: 'po-page-change-password',
            template: "<div class=\"po-page-change-password-wrapper\" #pageChangePassword>\n  <div class=\"po-page-change-password-container\">\n    <po-page-background class=\"po-page-change-password\" [p-logo]=\"logo\" [p-secondary-logo]=\"secondaryLogo\">\n      <div class=\"po-page-blocked-user-header po-row\">\n        <div class=\"po-md-12\">{{ literals.createNewPassword }}</div>\n        <div class=\"po-md-12 po-text-center po-font-text\">\n          {{ literals.createNewPasswordPhrase }}\n        </div>\n      </div>\n\n      <form #passwordForm=\"ngForm\">\n        <div class=\"po-row po-mt-3 po-mt-sm-1\">\n          <div class=\"po-md-6\" [ngClass]=\"{ 'po-offset-md-3 po-offset-lg-3 po-offset-xl-3': !showRequirements }\">\n            <div *ngIf=\"!hideCurrentPassword\">\n              <po-password\n                name=\"currentPassword\"\n                [(ngModel)]=\"currentPassword\"\n                p-required\n                [p-label]=\"literals.currentPassword\"\n              >\n              </po-password>\n            </div>\n            <div *ngIf=\"!hideCurrentPassword && recovery\" class=\"po-text-center po-mb-sm-1 po-mb-2\">\n              <a\n                *ngIf=\"recoveryUrlType === 'internalLink'\"\n                class=\"po-font-text-bold po-page-change-password-forgot-password\"\n                [routerLink]=\"recovery\"\n              >\n                {{ literals.forgotPassword }}\n              </a>\n              <a\n                *ngIf=\"recoveryUrlType === 'externalLink'\"\n                class=\"po-font-text-bold po-page-change-password-forgot-password\"\n                [href]=\"recovery\"\n              >\n                {{ literals.forgotPassword }}\n              </a>\n              <a\n                *ngIf=\"!recoveryUrlType\"\n                class=\"po-font-text-bold po-page-change-password-forgot-password po-clickable\"\n                (click)=\"onForgotPasswordClick(recovery)\"\n              >\n                {{ literals.forgotPassword }}\n              </a>\n            </div>\n            <div>\n              <po-password\n                name=\"newPassword\"\n                [(ngModel)]=\"newPassword\"\n                p-required\n                [p-label]=\"literals.newPassword\"\n                (p-change-model)=\"validatePassword()\"\n              >\n              </po-password>\n            </div>\n            <div>\n              <po-password\n                name=\"confirmPassword\"\n                [(ngModel)]=\"confirmPassword\"\n                p-required\n                [p-label]=\"literals.confirmPassword\"\n                (p-change-model)=\"validatePassword()\"\n              >\n              </po-password>\n            </div>\n          </div>\n          <div *ngIf=\"showRequirements\" class=\"po-md-6 po-page-change-password-required-container\">\n            <po-container>\n              <ul class=\"po-page-change-password-required-list\">\n                <li class=\"po-page-change-password-required-item\">\n                  <p class=\"po-mb-1 po-font-text-bold po-page-change-password-required-title\">\n                    {{ literals?.requirements }}\n                  </p>\n                </li>\n                <li *ngFor=\"let requirement of requirements\" class=\"po-page-change-password-required-item\">\n                  <span\n                    class=\"po-icon po-page-change-password-required-icon\"\n                    [ngClass]=\"\n                      validateRequirement(requirement)\n                        ? 'po-icon-ok po-page-change-password-required-ok'\n                        : 'po-icon-minus po-page-change-password-required-minus'\n                    \"\n                  >\n                  </span>\n                  <p class=\"po-page-change-password-required-text po-font-text\">\n                    {{ requirement.requirement }}\n                  </p>\n                </li>\n              </ul>\n            </po-container>\n          </div>\n        </div>\n      </form>\n\n      <po-divider class=\"po-sm-12\"></po-divider>\n\n      <div class=\"po-page-change-password-tips po-row\">\n        <div class=\"po-md-2 po-mr-3\">\n          <img\n            class=\"po-page-change-password-lock-image po-mb-3\"\n            alt=\"Blocked user image\"\n            src=\"./assets/images/big-lock.svg\"\n          />\n        </div>\n        <div class=\"po-md-9 po-page-change-password-tips-text\">\n          <div class=\"po-font-text-bold po-pb-1\">{{ literals.safetyTips }}</div>\n          <div class=\"po-font-text-small\">\n            <div class=\"po-row po-pb-1\">{{ literals.safetyTipsPhrase }}</div>\n            <div class=\"po-row po-pb-1\">\u2022 {{ literals.safetyTipsFirst }}</div>\n            <div class=\"po-row po-pb-1\">\u2022 {{ literals.safetyTipsSecond }}</div>\n            <div class=\"po-row po-pb-1\">\u2022 {{ literals.safetyTipsThird }}</div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"po-page-change-password-buttons po-row\">\n        <po-divider class=\"po-sm-12 po-mobile-only\"></po-divider>\n\n        <po-button\n          *ngIf=\"!hideCurrentPassword\"\n          class=\"po-sm-6 po-mb-sm-1\"\n          [p-label]=\"literals.backButton\"\n          (p-click)=\"navigateTo(urlBack)\"\n        >\n        </po-button>\n\n        <po-button\n          [ngClass]=\"hideCurrentPassword ? 'po-md-12' : 'po-sm-6'\"\n          p-type=\"primary\"\n          [p-disabled]=\"passwordForm.invalid\"\n          [p-label]=\"literals.saveButton\"\n          (p-click)=\"onLoginSubmit()\"\n        >\n        </po-button>\n      </div>\n    </po-page-background>\n  </div>\n</div>\n\n<po-modal\n  [p-primary-action]=\"modalAction\"\n  p-hide-close\n  p-size=\"auto\"\n  [p-title]=\"hideCurrentPassword ? literals.passwordSuccessfullyCreated : literals.passwordSuccessfullyUpdated\"\n>\n  <div class=\"po-text-center\">\n    <img\n      alt=\"Blocked user image\"\n      class=\"po-page-change-password-lock-image po-mb-3\"\n      src=\"./assets/images/success.svg\"\n    />\n  </div>\n</po-modal>\n"
        }),
        __metadata("design:paramtypes", [ActivatedRoute,
            ActivatedRoute,
            Router,
            PoPageChangePasswordService,
            PoComponentInjectorService,
            ViewContainerRef])
    ], PoPageChangePasswordComponent);
    return PoPageChangePasswordComponent;
}(PoPageChangePasswordBaseComponent));

/**
 * @description
 *
 * Módulo do template do po-page-change-password.
 */
var PoPageChangePasswordModule = /** @class */ (function () {
    function PoPageChangePasswordModule() {
    }
    PoPageChangePasswordModule = __decorate([
        NgModule({
            imports: [CommonModule, FormsModule, RouterModule, PoModule, PoPageBackgroundModule],
            declarations: [PoPageChangePasswordComponent],
            providers: [PoPageChangePasswordService],
            exports: [PoPageChangePasswordComponent]
        })
    ], PoPageChangePasswordModule);
    return PoPageChangePasswordModule;
}());

var poPageDynamicLiterals = {
    en: {
        errorRenderPage: 'Error loading page',
        notPossibleLoadMetadataPage: 'The page metadata could not be loaded'
    },
    es: {
        errorRenderPage: 'Error al cargar la página',
        notPossibleLoadMetadataPage: 'No se pudieron cargar los metadatos de la página.'
    },
    pt: {
        errorRenderPage: 'Erro ao carregar a página',
        notPossibleLoadMetadataPage: 'Não foi possível carregar os metadados da página'
    },
    ru: {
        errorRenderPage: 'Ошибка загрузки страницы',
        notPossibleLoadMetadataPage: 'Не удалось загрузить метаданные страницы'
    }
};
var PoPageDynamicService = /** @class */ (function () {
    function PoPageDynamicService(http, notification, languageService) {
        this.http = http;
        this.notification = notification;
        this.endpoint = '/';
        this.headers = new HttpHeaders({
            'X-PO-SCREEN-LOCK': 'true'
        });
        this.language = languageService.getShortLanguage();
    }
    PoPageDynamicService.prototype.configServiceApi = function (config) {
        if (config === void 0) { config = {}; }
        this.endpoint = config.endpoint;
        this.metadata = config.metadata || this.metadata;
    };
    PoPageDynamicService.prototype.getMetadata = function (type) {
        var _this = this;
        if (type === void 0) { type = 'list'; }
        var key = this.endpoint + "-" + type + "-metadata";
        var cache = JSON.parse(localStorage.getItem(key)) || {};
        var metadataUrlBase = this.metadata || this.endpoint + "/metadata";
        var url = metadataUrlBase + "?type=" + type + "&version=" + (cache.version || '');
        return this.http.get(url).pipe(map(function (response) {
            if (response.version !== undefined && response.version === cache.version) {
                return cache;
            }
            localStorage.setItem(key, JSON.stringify(response));
            return __assign(__assign({}, cache), response);
        }), catchError(function (error) {
            if (Object.keys(cache).length) {
                return of(cache);
            }
            var _a = poPageDynamicLiterals[_this.language], errorRenderPage = _a.errorRenderPage, notPossibleLoadMetadataPage = _a.notPossibleLoadMetadataPage;
            _this.notification.warning(notPossibleLoadMetadataPage);
            return merge(of({ title: errorRenderPage }), throwError(error));
        }));
    };
    // Deleta um único recurso
    PoPageDynamicService.prototype.deleteResource = function (id, endpoint) {
        return this.http.delete(this.getLocalEndPoint(endpoint, true) + "/" + id, { headers: this.headers });
    };
    // Deleta recursos em lote
    PoPageDynamicService.prototype.deleteResources = function (ids, endpoint) {
        return this.http.request('delete', "" + this.getLocalEndPoint(endpoint), { headers: this.headers, body: ids });
    };
    // Busca uma lista de recursos
    PoPageDynamicService.prototype.getResources = function (params, endpoint) {
        return this.http.get(this.getLocalEndPoint(endpoint), { headers: this.headers, params: params });
    };
    // Busca um único recurso
    PoPageDynamicService.prototype.getResource = function (id, endpoint) {
        return this.http.get(this.getLocalEndPoint(endpoint, true) + "/" + id, { headers: this.headers });
    };
    // Cria um recurso
    PoPageDynamicService.prototype.createResource = function (resource, endpoint) {
        return this.http.post("" + this.getLocalEndPoint(endpoint), resource, { headers: this.headers });
    };
    // Atualiza um recurso
    PoPageDynamicService.prototype.updateResource = function (id, resource, endpoint) {
        return this.http.put(this.getLocalEndPoint(endpoint, true) + "/" + id, resource, { headers: this.headers });
    };
    PoPageDynamicService.prototype.getLocalEndPoint = function (endpoint, checkSingleBar) {
        if (checkSingleBar === void 0) { checkSingleBar = false; }
        endpoint = endpoint !== null && endpoint !== void 0 ? endpoint : this.endpoint;
        if (checkSingleBar) {
            endpoint = endpoint === '/' ? '' : endpoint;
        }
        return endpoint;
    };
    PoPageDynamicService.ctorParameters = function () { return [
        { type: HttpClient },
        { type: PoNotificationService },
        { type: PoLanguageService }
    ]; };
    PoPageDynamicService.ɵprov = ɵɵdefineInjectable({ factory: function PoPageDynamicService_Factory() { return new PoPageDynamicService(ɵɵinject(HttpClient), ɵɵinject(PoNotificationService), ɵɵinject(PoLanguageService)); }, token: PoPageDynamicService, providedIn: "root" });
    PoPageDynamicService = __decorate([
        Injectable({
            providedIn: 'root'
        }),
        __metadata("design:paramtypes", [HttpClient,
            PoNotificationService,
            PoLanguageService])
    ], PoPageDynamicService);
    return PoPageDynamicService;
}());

var PoPageDynamicDetailActionsService = /** @class */ (function () {
    function PoPageDynamicDetailActionsService(http) {
        this.http = http;
        this.headers = new HttpHeaders({
            'X-PO-SCREEN-LOCK': 'true'
        });
    }
    PoPageDynamicDetailActionsService.prototype.beforeBack = function (action) {
        return this.executeAction({ action: action });
    };
    PoPageDynamicDetailActionsService.prototype.beforeEdit = function (action, id, body) {
        var resource = body !== null && body !== void 0 ? body : {};
        return this.executeAction({ action: action, resource: resource, id: id });
    };
    PoPageDynamicDetailActionsService.prototype.beforeRemove = function (action, id, body) {
        var resource = body !== null && body !== void 0 ? body : {};
        return this.executeAction({ action: action, resource: resource, id: id });
    };
    PoPageDynamicDetailActionsService.prototype.executeAction = function (_a) {
        var action = _a.action, _b = _a.resource, resource = _b === void 0 ? {} : _b, id = _a.id;
        if (!action) {
            return of({});
        }
        if (typeof action === 'string') {
            var url = id ? action + "/" + id : action;
            return this.http.post(url, resource, { headers: this.headers });
        }
        return of(action(id, resource));
    };
    PoPageDynamicDetailActionsService.ctorParameters = function () { return [
        { type: HttpClient }
    ]; };
    PoPageDynamicDetailActionsService.ɵprov = ɵɵdefineInjectable({ factory: function PoPageDynamicDetailActionsService_Factory() { return new PoPageDynamicDetailActionsService(ɵɵinject(HttpClient)); }, token: PoPageDynamicDetailActionsService, providedIn: "root" });
    PoPageDynamicDetailActionsService = __decorate([
        Injectable({
            providedIn: 'root'
        }),
        __metadata("design:paramtypes", [HttpClient])
    ], PoPageDynamicDetailActionsService);
    return PoPageDynamicDetailActionsService;
}());

var PoPageCustomizationService = /** @class */ (function () {
    function PoPageCustomizationService(http) {
        this.http = http;
    }
    PoPageCustomizationService.prototype.getCustomOptions = function (origin, originalOption, optionSchema) {
        var _this = this;
        return this.createObservable(origin).pipe(map(function (newPageOptions) { return _this.mergePageOptions(originalOption, newPageOptions, optionSchema); }));
    };
    PoPageCustomizationService.prototype.changeOriginalOptionsToNewOptions = function (objectToChange, newOptions) {
        Object.keys(newOptions).forEach(function (key) {
            var value = newOptions[key];
            if (objectToChange[key] !== undefined) {
                if (Array.isArray(value)) {
                    objectToChange[key] = __spread(value);
                    return;
                }
                if (typeof value === 'number' || typeof value === 'string' || typeof value === 'boolean') {
                    objectToChange[key] = value;
                    return;
                }
                if (value !== null && typeof value === 'object') {
                    objectToChange[key] = __assign({}, value);
                }
            }
        });
    };
    PoPageCustomizationService.prototype.createObservable = function (origin) {
        if (typeof origin === 'string') {
            return this.http.post(origin, {});
        }
        return from(Promise.resolve(origin()));
    };
    PoPageCustomizationService.prototype.mergePageOptions = function (originalOption, newPageOptions, optionSchema) {
        var _this = this;
        var mergePageOptions = optionSchema.schema.reduce(function (objWithNewProp, prop) {
            var _a;
            return (__assign(__assign({}, objWithNewProp), (_a = {}, _a[prop.nameProp] = _this.createNewProp(prop, originalOption, newPageOptions), _a)));
        }, {});
        Object.keys(mergePageOptions).forEach(function (key) { return mergePageOptions[key] === undefined && delete mergePageOptions[key]; });
        return mergePageOptions;
    };
    PoPageCustomizationService.prototype.createNewProp = function (prop, originalOption, newPageOptions) {
        var _a;
        if (prop.merge) {
            return this.mergeOptions(originalOption[prop.nameProp], newPageOptions[prop.nameProp], prop.keyForMerge);
        }
        else {
            return (_a = newPageOptions[prop.nameProp]) !== null && _a !== void 0 ? _a : originalOption[prop.nameProp];
        }
    };
    PoPageCustomizationService.prototype.mergeOptions = function (originalOptions, newOptions, filterProp) {
        if (!originalOptions && !newOptions) {
            return;
        }
        if (!newOptions) {
            return originalOptions;
        }
        if (!originalOptions) {
            return newOptions;
        }
        if (originalOptions instanceof Array && newOptions instanceof Array) {
            return this.mergeOptionsArray(originalOptions, newOptions, filterProp);
        }
        return __assign(__assign({}, originalOptions), newOptions);
    };
    PoPageCustomizationService.prototype.mergeOptionsArray = function (originalOptions, newOptions, filterProp) {
        var deduplicateNewOptions = newOptions.filter(function (newItem) { return !originalOptions.find(function (originalItem) { return originalItem[filterProp] === newItem[filterProp]; }); });
        var mergedOriginalOptions = originalOptions.map(function (originalItem) {
            var newItem = newOptions.find(function (newOptionsItem) { return originalItem[filterProp] === newOptionsItem[filterProp]; }) || originalItem;
            return __assign(__assign({}, originalItem), newItem);
        });
        return __spread(mergedOriginalOptions, deduplicateNewOptions);
    };
    PoPageCustomizationService.ctorParameters = function () { return [
        { type: HttpClient }
    ]; };
    PoPageCustomizationService.ɵprov = ɵɵdefineInjectable({ factory: function PoPageCustomizationService_Factory() { return new PoPageCustomizationService(ɵɵinject(HttpClient)); }, token: PoPageCustomizationService, providedIn: "root" });
    PoPageCustomizationService = __decorate([
        Injectable({
            providedIn: 'root'
        }),
        __metadata("design:paramtypes", [HttpClient])
    ], PoPageCustomizationService);
    return PoPageCustomizationService;
}());

var poPageDynamicDetailLiteralsDefault = {
    en: {
        pageActionEdit: 'Edit',
        pageActionRemove: 'Delete',
        pageActionBack: 'Back',
        confirmRemoveTitle: 'Confirm delete',
        confirmRemoveMessage: 'Are you sure you want to delete this record? You can not undo this action.',
        removeNotificationSuccess: 'Item deleted successfully.',
        registerNotFound: 'Register not found.'
    },
    es: {
        pageActionEdit: 'Editar',
        pageActionRemove: 'Borrar',
        pageActionBack: 'Regreso',
        confirmRemoveTitle: 'Confirmar la exclusión',
        confirmRemoveMessage: '¿Está seguro de que desea eliminar este registro? No puede deshacer esta acción.',
        removeNotificationSuccess: 'Elemento eliminado con éxito.',
        registerNotFound: 'Registro no encontrado.'
    },
    pt: {
        pageActionEdit: 'Editar',
        pageActionRemove: 'Excluir',
        pageActionBack: 'Voltar',
        confirmRemoveTitle: 'Confirmar exclusão',
        confirmRemoveMessage: 'Tem certeza de que deseja excluir esse registro? Você não poderá desfazer essa ação.',
        removeNotificationSuccess: 'Item excluído com sucesso.',
        registerNotFound: 'Registro não encontrado.'
    }
};
/**
 * @description
 *
 * O `po-page-dynamic-detail` é uma página que serve para exibir registros em detalhes,
 * o mesmo também suporta metadados conforme especificado na documentação.
 *
 *
 * ### Utilização via rota
 *
 * Ao utilizar as rotas para carregar o template, o `page-dynamic-detail` disponibiliza propriedades para
 * poder especificar o endpoint dos dados e dos metadados. Exemplo de utilização:
 *
 * O componente primeiro irá carregar o metadado da rota definida na propriedade serviceMetadataApi
 * e depois irá buscar da rota definida na propriedade serviceLoadApi.
 *
 * > Caso o servidor retornar um erro ao recuperar o metadados, será repassado o metadados salvo em cache,
 * se o cache não existe será disparado uma notificação.
 *
 * ```
 * {
 *   path: 'people/:id',
 *   component: PoPageDynamicDetailComponent,
 *   data: {
 *     serviceApi: 'http://localhost:3000/v1/people', // endpoint dos dados
 *     serviceMetadataApi: 'http://localhost:3000/v1/metadata', // endpoint dos metadados
 *     serviceLoadApi: 'http://localhost:3000/load-metadata' // endpoint de customizações dos metadados
 *   }
 * }
 * ```
 *
 * A requisição dos metadados é feita na inicialização do template para buscar os metadados da página passando o
 * tipo do metadado esperado e a versão cacheada pelo browser.
 *
 * O formato esperado na resposta da requisição está especificado na interface
 * [PoPageDynamicDetailMetadata](/documentation/po-page-dynamic-detail#po-page-dynamic-detail-metadata). Por exemplo:
 *
 * ```
 *  {
 *   version: 1,
 *   title: 'Person Detail',
 *   fields: [
 *     { property: 'id', key: true, disabled: true },
 *     { property: 'status' },
 *     { property: 'name' },
 *     { property: 'nickname' },
 *     { property: 'birthdate', label: 'Birth date' },
 *     { property: 'genre' },
 *     { property: 'city' },
 *     { property: 'country' }
 *   ]
 * }
 * ```
 *
 * > Caso o endpoint dos metadados não seja especificado, será feito uma requisição utilizando o `serviceApi` da seguinte forma:
 * ```
 * GET {end-point}/metadata?type=detail&version={version}
 * ```
 *
 * @example
 *
 * <example name="po-page-dynamic-detail-user" title="PO Page Dynamic Detail User">
 *  <file name="sample-po-page-dynamic-detail-user/sample-po-page-dynamic-detail-user.component.html"> </file>
 *  <file name="sample-po-page-dynamic-detail-user/sample-po-page-dynamic-detail-user.component.ts"> </file>
 * </example>
 */
var PoPageDynamicDetailComponent = /** @class */ (function () {
    function PoPageDynamicDetailComponent(router, activatedRoute, poNotification, poDialogService, poPageDynamicService, poPageDynamicDetailActionsService, poPageCustomizationService) {
        this.router = router;
        this.activatedRoute = activatedRoute;
        this.poNotification = poNotification;
        this.poDialogService = poDialogService;
        this.poPageDynamicService = poPageDynamicService;
        this.poPageDynamicDetailActionsService = poPageDynamicDetailActionsService;
        this.poPageCustomizationService = poPageCustomizationService;
        this.subscriptions = [];
        this._actions = {};
        this._autoRouter = false;
        this._duplicates = [];
        this._fields = [];
        this._keys = [];
        this._pageActions = [];
        this.literals = __assign(__assign({}, poPageDynamicDetailLiteralsDefault[poLocaleDefault]), poPageDynamicDetailLiteralsDefault[browserLanguage()]);
        this.model = {};
        /** Objeto com propriedades do breadcrumb. */
        this.breadcrumb = { items: [] };
    }
    Object.defineProperty(PoPageDynamicDetailComponent.prototype, "actions", {
        get: function () {
            return __assign({}, this._actions);
        },
        /**
         * @optional
         *
         * @description
         *
         * Define as ações da página de acordo com a interface `PoPageDynamicDetailActions`.
         */
        set: function (value) {
            this._actions = this.isObject(value) ? value : {};
            this._pageActions = this.getPageActions(this._actions);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageDynamicDetailComponent.prototype, "autoRouter", {
        get: function () {
            return this._autoRouter;
        },
        /**
         * @todo Validar rotas na mão pois se existir uma rota '**' o catch do navigation não funciona.
         *
         * @optional
         *
         * @description
         *
         * Cria automaticamente as rotas de edição (novo/duplicate) e detalhes caso as ações
         * estejam definidas nas ações.
         *
         * > Para o correto funcionamento não pode haver nenhum rota coringa (`**`) especificada.
         *
         * @default false
         */
        set: function (value) {
            this._autoRouter = convertToBoolean(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageDynamicDetailComponent.prototype, "fields", {
        get: function () {
            return this._fields;
        },
        /** Lista dos campos exibidos na página. */
        set: function (value) {
            this._fields = Array.isArray(value) ? __spread(value) : [];
            this._keys = this.getKeysByFields(this.fields);
            this._duplicates = this.getDuplicatesByFields(this.fields);
        },
        enumerable: true,
        configurable: true
    });
    PoPageDynamicDetailComponent.prototype.ngOnInit = function () {
        this.loadDataFromAPI();
    };
    PoPageDynamicDetailComponent.prototype.ngOnDestroy = function () {
        if (this.subscriptions) {
            this.subscriptions.forEach(function (subscription) {
                subscription.unsubscribe();
            });
        }
    };
    Object.defineProperty(PoPageDynamicDetailComponent.prototype, "duplicates", {
        get: function () {
            return __spread(this._duplicates);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageDynamicDetailComponent.prototype, "keys", {
        get: function () {
            return __spread(this._keys);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageDynamicDetailComponent.prototype, "pageActions", {
        get: function () {
            return __spread(this._pageActions);
        },
        enumerable: true,
        configurable: true
    });
    PoPageDynamicDetailComponent.prototype.remove = function (actionRemove, actionBeforeRemove) {
        var _this = this;
        var uniqueKey = this.formatUniqueKey(this.model);
        this.subscriptions.push(this.poPageDynamicDetailActionsService
            .beforeRemove(actionBeforeRemove, uniqueKey, __assign({}, this.model))
            .pipe(switchMap(function (beforeRemoveResult) {
            var _a, _b;
            var newRemoveAction = (_a = beforeRemoveResult === null || beforeRemoveResult === void 0 ? void 0 : beforeRemoveResult.newUrl) !== null && _a !== void 0 ? _a : actionRemove;
            var allowAction = (_b = beforeRemoveResult === null || beforeRemoveResult === void 0 ? void 0 : beforeRemoveResult.allowAction) !== null && _b !== void 0 ? _b : true;
            if (!allowAction) {
                return of({});
            }
            if (typeof newRemoveAction === 'string') {
                return _this.executeRemove(newRemoveAction, uniqueKey);
            }
            else {
                newRemoveAction(uniqueKey, __assign({}, _this.model));
                return EMPTY;
            }
        }))
            .subscribe());
    };
    PoPageDynamicDetailComponent.prototype.confirmRemove = function (actionRemove, actionBeforeRemove) {
        var confirmOptions = {
            title: this.literals.confirmRemoveTitle,
            message: this.literals.confirmRemoveMessage,
            confirm: this.remove.bind(this, actionRemove, actionBeforeRemove)
        };
        this.poDialogService.confirm(confirmOptions);
    };
    PoPageDynamicDetailComponent.prototype.executeRemove = function (path, uniqueKey) {
        var _this = this;
        return this.poPageDynamicService.deleteResource(uniqueKey).pipe(map(function () {
            _this.poNotification.success(_this.literals.removeNotificationSuccess);
            _this.navigateTo({ path: path });
        }));
    };
    PoPageDynamicDetailComponent.prototype.formatUniqueKey = function (item) {
        var keys = mapObjectByProperties(item, this.keys);
        return valuesFromObject(keys).join('|');
    };
    PoPageDynamicDetailComponent.prototype.goBack = function (actionBack) {
        var _this = this;
        this.subscriptions.push(this.poPageDynamicDetailActionsService
            .beforeBack(this.actions.beforeBack)
            .subscribe(function (beforeBackResult) {
            return _this.executeBackAction(actionBack, beforeBackResult === null || beforeBackResult === void 0 ? void 0 : beforeBackResult.allowAction, beforeBackResult === null || beforeBackResult === void 0 ? void 0 : beforeBackResult.newUrl);
        }));
    };
    PoPageDynamicDetailComponent.prototype.executeBackAction = function (actionBack, allowAction, newUrl) {
        var isAllowedAction = typeof allowAction === 'boolean' ? allowAction : true;
        if (isAllowedAction) {
            if (actionBack === undefined || typeof actionBack === 'boolean') {
                return window.history.back();
            }
            if (typeof actionBack === 'string' || newUrl) {
                return this.router.navigate([newUrl || actionBack]);
            }
            return actionBack();
        }
    };
    PoPageDynamicDetailComponent.prototype.loadData = function (id) {
        var _this = this;
        return this.poPageDynamicService.getResource(id).pipe(tap(function (response) {
            if (!response) {
                _this.setUndefinedToModelAndActions();
            }
            else {
                _this.model = response;
            }
        }), catchError(function (error) {
            _this.setUndefinedToModelAndActions();
            return throwError(error);
        }));
    };
    PoPageDynamicDetailComponent.prototype.setUndefinedToModelAndActions = function () {
        this.model = undefined;
        this.actions = undefined;
    };
    PoPageDynamicDetailComponent.prototype.getMetadata = function (serviceApiFromRoute, onLoad) {
        var _this = this;
        if (serviceApiFromRoute) {
            return this.poPageDynamicService.getMetadata('detail').pipe(tap(function (response) {
                _this.autoRouter = response.autoRouter || _this.autoRouter;
                _this.actions = response.actions || _this.actions;
                _this.breadcrumb = response.breadcrumb || _this.breadcrumb;
                _this.fields = response.fields || _this.fields;
                _this.title = response.title || _this.title;
            }), switchMap(function () { return _this.loadOptionsOnInitialize(onLoad); }));
        }
        return this.loadOptionsOnInitialize(onLoad);
    };
    // @todo Validar rotas na mão pois se existir uma rota '**' o catch do navigation não funciona.
    PoPageDynamicDetailComponent.prototype.navigateTo = function (route, forceStopAutoRouter) {
        var _this = this;
        if (forceStopAutoRouter === void 0) { forceStopAutoRouter = false; }
        this.router.navigate([route.url || route.path], { queryParams: route.params }).catch(function () {
            if (forceStopAutoRouter || !_this.autoRouter) {
                return;
            }
            _this.router.config.unshift({
                path: route.path,
                component: route.component,
                data: { serviceApi: _this.serviceApi, autoRouter: true }
            });
            _this.navigateTo(route, true);
        });
    };
    PoPageDynamicDetailComponent.prototype.openEdit = function (action) {
        var _this = this;
        var id = this.formatUniqueKey(this.model);
        this.subscriptions.push(this.poPageDynamicDetailActionsService
            .beforeEdit(this.actions.beforeEdit, id, this.model)
            .pipe(switchMap(function (beforeEditResult) {
            return _this.executeEditAction(action, beforeEditResult, id);
        }))
            .subscribe());
    };
    PoPageDynamicDetailComponent.prototype.executeEditAction = function (action, beforeEditResult, id) {
        var _a, _b;
        var newEditAction = (_a = beforeEditResult === null || beforeEditResult === void 0 ? void 0 : beforeEditResult.newUrl) !== null && _a !== void 0 ? _a : action;
        var allowAction = (_b = beforeEditResult === null || beforeEditResult === void 0 ? void 0 : beforeEditResult.allowAction) !== null && _b !== void 0 ? _b : true;
        if (!allowAction) {
            return of({});
        }
        if (typeof newEditAction === 'string') {
            this.openEditUrl(newEditAction);
        }
        else {
            newEditAction(id, __assign({}, this.model));
        }
        return EMPTY;
    };
    PoPageDynamicDetailComponent.prototype.openEditUrl = function (path) {
        var url = this.resolveUrl(this.model, path);
        this.navigateTo({ path: path, url: url });
    };
    PoPageDynamicDetailComponent.prototype.resolveUrl = function (item, path) {
        var uniqueKey = this.formatUniqueKey(item);
        return path.replace(/:id/g, uniqueKey);
    };
    PoPageDynamicDetailComponent.prototype.getPageActions = function (actions) {
        if (actions === void 0) { actions = {}; }
        var pageActions = [];
        if (actions.edit) {
            pageActions.push({ label: this.literals.pageActionEdit, action: this.openEdit.bind(this, actions.edit) });
        }
        if (actions.remove) {
            pageActions.push({
                label: this.literals.pageActionRemove,
                action: this.confirmRemove.bind(this, actions.remove, this.actions.beforeRemove)
            });
        }
        if (actions.back === undefined || actions.back) {
            pageActions.push({ label: this.literals.pageActionBack, action: this.goBack.bind(this, actions.back) });
        }
        return pageActions;
    };
    PoPageDynamicDetailComponent.prototype.getKeysByFields = function (fields) {
        if (fields === void 0) { fields = []; }
        return fields.filter(function (field) { return field.key === true; }).map(function (field) { return field.property; });
    };
    PoPageDynamicDetailComponent.prototype.getDuplicatesByFields = function (fields) {
        if (fields === void 0) { fields = []; }
        return fields.filter(function (field) { return field.duplicate === true; }).map(function (field) { return field.property; });
    };
    PoPageDynamicDetailComponent.prototype.isObject = function (value) {
        return !!value && typeof value === 'object' && !Array.isArray(value);
    };
    PoPageDynamicDetailComponent.prototype.loadDataFromAPI = function () {
        var _a = this.activatedRoute.snapshot.data, serviceApiFromRoute = _a.serviceApi, serviceMetadataApi = _a.serviceMetadataApi, serviceLoadApi = _a.serviceLoadApi;
        var id = this.activatedRoute.snapshot.params.id;
        var onLoad = serviceLoadApi || this.onLoad;
        this.serviceApi = serviceApiFromRoute || this.serviceApi;
        this.poPageDynamicService.configServiceApi({ endpoint: this.serviceApi, metadata: serviceMetadataApi });
        var metadata$ = this.getMetadata(serviceApiFromRoute, onLoad);
        var data$ = this.loadData(id);
        this.subscriptions.push(concat(metadata$, data$).subscribe());
    };
    PoPageDynamicDetailComponent.prototype.loadOptionsOnInitialize = function (onLoad) {
        var _this = this;
        if (onLoad) {
            return this.getPoDynamicPageOptions(onLoad).pipe(tap(function (responsePoOption) {
                return _this.poPageCustomizationService.changeOriginalOptionsToNewOptions(_this, responsePoOption);
            }));
        }
        return EMPTY;
    };
    PoPageDynamicDetailComponent.prototype.getPoDynamicPageOptions = function (onLoad) {
        var originalOption = {
            fields: this.fields,
            actions: this.actions,
            breadcrumb: this.breadcrumb,
            title: this.title
        };
        var pageOptionSchema = {
            schema: [
                {
                    nameProp: 'fields',
                    merge: true,
                    keyForMerge: 'property'
                },
                {
                    nameProp: 'actions',
                    merge: true
                },
                {
                    nameProp: 'breadcrumb'
                },
                {
                    nameProp: 'title'
                }
            ]
        };
        return this.poPageCustomizationService.getCustomOptions(onLoad, originalOption, pageOptionSchema);
    };
    PoPageDynamicDetailComponent.ctorParameters = function () { return [
        { type: Router },
        { type: ActivatedRoute },
        { type: PoNotificationService },
        { type: PoDialogService },
        { type: PoPageDynamicService },
        { type: PoPageDynamicDetailActionsService },
        { type: PoPageCustomizationService }
    ]; };
    __decorate([
        Input('p-actions'),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], PoPageDynamicDetailComponent.prototype, "actions", null);
    __decorate([
        Input('p-auto-router'),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], PoPageDynamicDetailComponent.prototype, "autoRouter", null);
    __decorate([
        Input('p-breadcrumb'),
        __metadata("design:type", Object)
    ], PoPageDynamicDetailComponent.prototype, "breadcrumb", void 0);
    __decorate([
        Input('p-fields'),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], PoPageDynamicDetailComponent.prototype, "fields", null);
    __decorate([
        Input('p-load'),
        __metadata("design:type", Object)
    ], PoPageDynamicDetailComponent.prototype, "onLoad", void 0);
    __decorate([
        Input('p-title'),
        __metadata("design:type", String)
    ], PoPageDynamicDetailComponent.prototype, "title", void 0);
    __decorate([
        Input('p-service-api'),
        __metadata("design:type", String)
    ], PoPageDynamicDetailComponent.prototype, "serviceApi", void 0);
    PoPageDynamicDetailComponent = __decorate([
        Component({
            selector: 'po-page-dynamic-detail',
            template: "<po-page-default [p-actions]=\"pageActions\" [p-breadcrumb]=\"breadcrumb\" [p-title]=\"title\">\n  <ng-container *ngIf=\"model; then viewFieldsTemplate; else registerNotFoundTemplate\"> </ng-container>\n</po-page-default>\n\n<ng-template #registerNotFoundTemplate>\n  <po-widget>\n    <span class=\"po-icon po-icon-info\"></span>\n    <span class=\"po-font-text-large\">\n      {{ literals.registerNotFound }}\n    </span>\n  </po-widget>\n</ng-template>\n\n<ng-template #viewFieldsTemplate>\n  <po-dynamic-view [p-fields]=\"fields\" [p-value]=\"model\"> </po-dynamic-view>\n</ng-template>\n",
            providers: [PoPageDynamicService, PoPageDynamicDetailActionsService]
        }),
        __metadata("design:paramtypes", [Router,
            ActivatedRoute,
            PoNotificationService,
            PoDialogService,
            PoPageDynamicService,
            PoPageDynamicDetailActionsService,
            PoPageCustomizationService])
    ], PoPageDynamicDetailComponent);
    return PoPageDynamicDetailComponent;
}());

/**
 * @description
 *
 * Módulo do serviço do po-page-dynamic-service.
 */
var PoPageDynamicModule = /** @class */ (function () {
    function PoPageDynamicModule() {
    }
    PoPageDynamicModule = __decorate([
        NgModule({
            imports: [CommonModule, HttpClientModule],
            providers: [PoPageDynamicService]
        })
    ], PoPageDynamicModule);
    return PoPageDynamicModule;
}());

/**
 * @description
 *
 * Módulo do template do po-page-dynamic-detail.
 */
var PoPageDynamicDetailModule = /** @class */ (function () {
    function PoPageDynamicDetailModule() {
    }
    PoPageDynamicDetailModule = __decorate([
        NgModule({
            imports: [
                CommonModule,
                FormsModule,
                RouterModule,
                PoDynamicModule,
                PoModalModule,
                PoPageModule,
                PoWidgetModule,
                PoPageDynamicModule
            ],
            declarations: [PoPageDynamicDetailComponent],
            exports: [PoPageDynamicDetailComponent]
        })
    ], PoPageDynamicDetailModule);
    return PoPageDynamicDetailModule;
}());

var PoPageDynamicEditActionsService = /** @class */ (function () {
    function PoPageDynamicEditActionsService(http) {
        this.http = http;
        this.headers = new HttpHeaders({
            'X-PO-SCREEN-LOCK': 'true'
        });
    }
    PoPageDynamicEditActionsService.prototype.beforeCancel = function (action) {
        return this.executeAction({ action: action });
    };
    PoPageDynamicEditActionsService.prototype.beforeSave = function (action, id, body) {
        var resource = body !== null && body !== void 0 ? body : {};
        return this.executeAction({ action: action, resource: resource, id: id });
    };
    PoPageDynamicEditActionsService.prototype.beforeSaveNew = function (action, id, body) {
        var resource = body !== null && body !== void 0 ? body : {};
        return this.executeAction({ action: action, resource: resource, id: id });
    };
    PoPageDynamicEditActionsService.prototype.executeAction = function (_a) {
        var action = _a.action, _b = _a.resource, resource = _b === void 0 ? {} : _b, id = _a.id;
        if (!action) {
            return of({});
        }
        if (typeof action === 'string') {
            var url = id ? action + "/" + id : action;
            return this.http.post(url, resource, { headers: this.headers });
        }
        return of(action(resource, id));
    };
    PoPageDynamicEditActionsService.ctorParameters = function () { return [
        { type: HttpClient }
    ]; };
    PoPageDynamicEditActionsService.ɵprov = ɵɵdefineInjectable({ factory: function PoPageDynamicEditActionsService_Factory() { return new PoPageDynamicEditActionsService(ɵɵinject(HttpClient)); }, token: PoPageDynamicEditActionsService, providedIn: "root" });
    PoPageDynamicEditActionsService = __decorate([
        Injectable({
            providedIn: 'root'
        }),
        __metadata("design:paramtypes", [HttpClient])
    ], PoPageDynamicEditActionsService);
    return PoPageDynamicEditActionsService;
}());

var poPageDynamicEditLiteralsDefault = {
    en: {
        cancelConfirmMessage: 'Are you sure you want to cancel this operation?',
        detailActionNew: 'New',
        pageActionCancel: 'Cancel',
        pageActionSave: 'Save',
        pageActionSaveNew: 'Save and new',
        registerNotFound: 'Register not found.',
        saveNotificationSuccessSave: 'Resource successfully saved.',
        saveNotificationSuccessUpdate: 'Resource successfully updated.',
        saveNotificationWarning: 'Form must be filled out correctly.'
    },
    es: {
        cancelConfirmMessage: 'Está seguro de que desea cancelar esta operación?',
        detailActionNew: 'Nuevo',
        pageActionCancel: 'Cancelar',
        pageActionSave: 'Guardar',
        pageActionSaveNew: 'Guardar y nuevo',
        registerNotFound: 'Registro no encontrado.',
        saveNotificationSuccessSave: 'Recurso salvo con éxito.',
        saveNotificationSuccessUpdate: 'Recurso actualizado con éxito.',
        saveNotificationWarning: 'El formulario debe llenarse correctamente.'
    },
    pt: {
        cancelConfirmMessage: 'Tem certeza que deseja cancelar esta operação?',
        detailActionNew: 'Novo',
        pageActionCancel: 'Cancelar',
        pageActionSave: 'Salvar',
        pageActionSaveNew: 'Salvar e novo',
        registerNotFound: 'Registro não encontrado.',
        saveNotificationSuccessSave: 'Recurso salvo com sucesso.',
        saveNotificationSuccessUpdate: 'Recurso atualizado com sucesso.',
        saveNotificationWarning: 'Formulário precisa ser preenchido corretamente.'
    }
};
/**
 * @description
 *
 * O `po-page-dynamic-edit` é uma página que pode servir para editar ou criar novos registros,
 * o mesmo também suporta metadados conforme especificado na documentação.
 *
 * ### Utilização via rota
 *
 * Ao utilizar as rotas para carregar o template, o `page-dynamic-edit` disponibiliza propriedades para
 * poder especificar o endpoint dos dados e dos metadados. Exemplo de utilização:
 *
 * O componente primeiro irá carregar o metadado da rota definida na propriedade serviceMetadataApi
 * e depois irá buscar da rota definida na propriedade serviceLoadApi
 *
 * > Caso o servidor retornar um erro ao recuperar o metadados, será repassado o metadados salvo em cache,
 * se o cache não existe será disparado uma notificação.
 *
 * ```
 * {
 *   path: 'people',
 *   component: PoPageDynamicEditComponent,
 *   data: {
 *     serviceApi: 'http://localhost:3000/v1/people', // endpoint dos dados
 *     serviceMetadataApi: 'http://localhost:3000/v1/metadata', // endpoint dos metadados utilizando o método HTTP Get
 *     serviceLoadApi: 'http://localhost:3000/load-metadata' // endpoint de customizações dos metadados utilizando o método HTTP Post
 *   }
 * }
 *
 * ```
 *
 * Para carregar com um recurso já existente, deve-se ser incluído um parâmetro na rota chamado `id`:
 *
 * ```
 * {
 *   path: 'people/:id',
 *   component: PoPageDynamicEditComponent,
 *   data: {
 *     serviceApi: 'http://localhost:3000/v1/people', // endpoint dos dados
 *     serviceMetadataApi: 'http://localhost:3000/v1/metadata', // endpoint dos metadados
 *     serviceLoadApi: 'http://localhost:3000/load-metadata' // endpoint de customizações dos metadados
 *   }
 * }
 * ```
 *
 * A requisição dos metadados é feita na inicialização do template para buscar os metadados da página passando o
 * tipo do metadado esperado e a versão cacheada pelo browser.
 *
 * O formato esperado na resposta da requisição está especificado na interface
 * [PoPageDynamicEditMetadata](/documentation/po-page-dynamic-edit#po-page-dynamic-edit-metadata). Por exemplo:
 *
 * ```
 *  {
 *   version: 1,
 *   title: 'Person edit',
 *   fields: [
 *     { property: 'id', key: true, disabled: true },
 *     { property: 'status' },
 *     { property: 'name' },
 *     { property: 'nickname' },
 *     { property: 'birthdate', label: 'Birth date' },
 *     { property: 'genre' },
 *     { property: 'city' },
 *     { property: 'country' }
 *   ]
 * }
 * ```
 *
 * > Caso o endpoint dos metadados não seja especificado, será feito uma requisição utilizando o `serviceApi` da seguinte forma:
 * ```
 * GET {end-point}/metadata?type=edit&version={version}
 * ```
 *
 * @example
 *
 * <example name="po-page-dynamic-edit-basic" title="PO Page Dynamic Edit Basic">
 *  <file name="sample-po-page-dynamic-edit-basic/sample-po-page-dynamic-edit-basic.component.html"> </file>
 *  <file name="sample-po-page-dynamic-edit-basic/sample-po-page-dynamic-edit-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-page-dynamic-edit-user" title="PO Page Dynamic Edit - User">
 *  <file name="sample-po-page-dynamic-edit-user/sample-po-page-dynamic-edit-user.component.html"> </file>
 *  <file name="sample-po-page-dynamic-edit-user/sample-po-page-dynamic-edit-user.component.ts"> </file>
 * </example>
 */
var PoPageDynamicEditComponent = /** @class */ (function () {
    function PoPageDynamicEditComponent(router, activatedRoute, poNotification, poDialogService, poPageDynamicService, poPageCustomizationService, poPageDynamicEditActionsService) {
        this.router = router;
        this.activatedRoute = activatedRoute;
        this.poNotification = poNotification;
        this.poDialogService = poDialogService;
        this.poPageDynamicService = poPageDynamicService;
        this.poPageCustomizationService = poPageCustomizationService;
        this.poPageDynamicEditActionsService = poPageDynamicEditActionsService;
        this.subscriptions = [];
        this._actions = {};
        this._autoRouter = false;
        this._controlFields = [];
        this._detailFields = [];
        this._duplicates = [];
        this._fields = [];
        this._keys = [];
        this._pageActions = [];
        this.literals = __assign(__assign({}, poPageDynamicEditLiteralsDefault[poLocaleDefault]), poPageDynamicEditLiteralsDefault[browserLanguage()]);
        this.model = {};
        // beforeSave: return boolean
        // afterSave
        // beforeRemove: return boolean
        // afterRemove
        // beforeInsert: : return boolean
        this.detailActions = {};
        /** Objeto com propriedades do breadcrumb. */
        this.breadcrumb = { items: [] };
    }
    Object.defineProperty(PoPageDynamicEditComponent.prototype, "actions", {
        get: function () {
            return __assign({}, this._actions);
        },
        /**
         * @optional
         *
         * @description
         *
         * Ações da página.
         */
        set: function (value) {
            this._actions = this.isObject(value) ? value : {};
            this._pageActions = this.getPageActions(this._actions);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageDynamicEditComponent.prototype, "autoRouter", {
        get: function () {
            return this._autoRouter;
        },
        /**
         * @todo Validar rotas na mão pois se existir uma rota '**' o catch do navigation não funciona.
         *
         * @optional
         *
         * @description
         *
         * Cria automaticamente as rotas de edição (novo/duplicate) e detalhes caso as ações
         * estejam definidas nas ações.
         *
         * > Para o correto funcionamento não pode haver nenhum rota coringa (`**`) especificada.
         *
         * @default false
         */
        set: function (value) {
            this._autoRouter = convertToBoolean(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageDynamicEditComponent.prototype, "fields", {
        get: function () {
            return this._fields;
        },
        /** Lista dos campos usados na tabela e busca avançada. */
        set: function (value) {
            this._fields = Array.isArray(value) ? __spread(value) : [];
            this._keys = this.getKeysByFields(this._fields);
            this._duplicates = this.getDuplicatesByFields(this._fields);
            this._controlFields = this.getControlFields(this._fields);
            this._detailFields = this.getDetailFields(this._fields);
        },
        enumerable: true,
        configurable: true
    });
    PoPageDynamicEditComponent.prototype.ngOnInit = function () {
        this.loadDataFromAPI();
    };
    PoPageDynamicEditComponent.prototype.ngOnDestroy = function () {
        if (this.subscriptions) {
            this.subscriptions.forEach(function (subscription) {
                subscription.unsubscribe();
            });
        }
    };
    PoPageDynamicEditComponent.prototype.loadDataFromAPI = function () {
        var _a = this.activatedRoute.snapshot.data, serviceApiFromRoute = _a.serviceApi, serviceMetadataApi = _a.serviceMetadataApi, serviceLoadApi = _a.serviceLoadApi;
        var id = this.activatedRoute.snapshot.params.id;
        var duplicate = this.activatedRoute.snapshot.queryParams.duplicate;
        var onLoad = serviceLoadApi || this.onLoad;
        this.serviceApi = serviceApiFromRoute || this.serviceApi;
        this.poPageDynamicService.configServiceApi({ endpoint: this.serviceApi, metadata: serviceMetadataApi });
        var metadata$ = this.getMetadata(serviceApiFromRoute, id, onLoad);
        var data$ = this.loadData(id, duplicate);
        this.subscriptions.push(concat(metadata$, data$).subscribe());
    };
    Object.defineProperty(PoPageDynamicEditComponent.prototype, "duplicates", {
        get: function () {
            return __spread(this._duplicates);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageDynamicEditComponent.prototype, "keys", {
        get: function () {
            return __spread(this._keys);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageDynamicEditComponent.prototype, "pageActions", {
        get: function () {
            return __spread(this._pageActions);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageDynamicEditComponent.prototype, "controlFields", {
        get: function () {
            return this._controlFields;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageDynamicEditComponent.prototype, "detailFields", {
        get: function () {
            return this._detailFields;
        },
        enumerable: true,
        configurable: true
    });
    PoPageDynamicEditComponent.prototype.detailActionNew = function () {
        this.gridDetail.insertRow();
    };
    PoPageDynamicEditComponent.prototype.cancel = function (actionCancel, actionBeforeCancel) {
        if (this.dynamicForm && this.dynamicForm.form.dirty) {
            this.poDialogService.confirm({
                message: this.literals.cancelConfirmMessage,
                title: this.literals.pageActionCancel,
                confirm: this.goBack.bind(this, actionCancel, actionBeforeCancel)
            });
        }
        else {
            this.goBack(actionCancel, actionBeforeCancel);
        }
    };
    PoPageDynamicEditComponent.prototype.formatUniqueKey = function (item) {
        var keys = mapObjectByProperties(item, this.keys);
        return valuesFromObject(keys).join('|');
    };
    PoPageDynamicEditComponent.prototype.goBack = function (actionCancel, actionBeforeCancel) {
        var _this = this;
        this.subscriptions.push(this.poPageDynamicEditActionsService
            .beforeCancel(actionBeforeCancel)
            .subscribe(function (beforeCancelResult) {
            _this.executeBackAction(actionCancel, beforeCancelResult === null || beforeCancelResult === void 0 ? void 0 : beforeCancelResult.allowAction, beforeCancelResult === null || beforeCancelResult === void 0 ? void 0 : beforeCancelResult.newUrl);
        }));
    };
    PoPageDynamicEditComponent.prototype.executeBackAction = function (actionCancel, allowAction, newUrl) {
        var isAllowedAction = typeof allowAction === 'boolean' ? allowAction : true;
        if (isAllowedAction) {
            if (actionCancel === undefined || typeof actionCancel === 'boolean') {
                return window.history.back();
            }
            if (typeof actionCancel === 'string' || newUrl) {
                return this.router.navigate([newUrl || actionCancel]);
            }
            return actionCancel();
        }
    };
    PoPageDynamicEditComponent.prototype.loadData = function (id, duplicate) {
        var _this = this;
        if (!id) {
            try {
                this.model = duplicate ? JSON.parse(duplicate) : {};
            }
            catch (_a) {
                this.model = {};
            }
            return EMPTY;
        }
        return this.poPageDynamicService.getResource(id).pipe(tap(function (response) { return (_this.model = response); }), catchError(function (error) {
            _this.model = undefined;
            _this.actions = undefined;
            _this._pageActions = [];
            return throwError(error);
        }));
    };
    PoPageDynamicEditComponent.prototype.loadOptionsOnInitialize = function (onLoad) {
        var _this = this;
        if (onLoad) {
            return this.getPoDynamicPageOptions(onLoad).pipe(tap(function (responsePoOption) {
                return _this.poPageCustomizationService.changeOriginalOptionsToNewOptions(_this, responsePoOption);
            }));
        }
        return EMPTY;
    };
    PoPageDynamicEditComponent.prototype.getPoDynamicPageOptions = function (onLoad) {
        var originalOption = {
            fields: this.fields,
            actions: this.actions,
            breadcrumb: this.breadcrumb,
            title: this.title
        };
        var pageOptionSchema = {
            schema: [
                {
                    nameProp: 'fields',
                    merge: true,
                    keyForMerge: 'property'
                },
                {
                    nameProp: 'actions',
                    merge: true
                },
                {
                    nameProp: 'breadcrumb'
                },
                {
                    nameProp: 'title'
                }
            ]
        };
        return this.poPageCustomizationService.getCustomOptions(onLoad, originalOption, pageOptionSchema);
    };
    PoPageDynamicEditComponent.prototype.getMetadata = function (serviceApiFromRoute, paramId, onLoad) {
        var _this = this;
        var typeMetadata = paramId ? 'edit' : 'create';
        if (serviceApiFromRoute) {
            return this.poPageDynamicService.getMetadata(typeMetadata).pipe(tap(function (response) {
                _this.autoRouter = response.autoRouter || _this.autoRouter;
                _this.actions = response.actions || _this.actions;
                _this.breadcrumb = response.breadcrumb || _this.breadcrumb;
                _this.fields = response.fields || _this.fields;
                _this.title = response.title || _this.title;
            }), switchMap(function () { return _this.loadOptionsOnInitialize(onLoad); }));
        }
        return this.loadOptionsOnInitialize(onLoad);
    };
    PoPageDynamicEditComponent.prototype.navigateTo = function (path) {
        if (path) {
            var url = this.resolveUrl(this.model, path);
            this.router.navigate([url]);
        }
        else {
            window.history.back();
        }
    };
    PoPageDynamicEditComponent.prototype.resolveUniqueKey = function (item) {
        return this.activatedRoute.snapshot.params['id'] ? this.formatUniqueKey(item) : undefined;
    };
    PoPageDynamicEditComponent.prototype.resolveUrl = function (item, path) {
        var uniqueKey = this.formatUniqueKey(item);
        return path.replace(/:id/g, uniqueKey);
    };
    PoPageDynamicEditComponent.prototype.executeSave = function (saveRedirectPath) {
        var _this = this;
        var saveOperation$ = this.saveOperation();
        return saveOperation$.pipe(tap(function (message) {
            _this.poNotification.success(message);
            _this.navigateTo(saveRedirectPath);
        }));
    };
    PoPageDynamicEditComponent.prototype.updateModel = function (newResource) {
        if (newResource === void 0) { newResource = {}; }
        var dynamicNgForm = this.dynamicForm.form;
        removeKeysProperties(this.keys, newResource);
        this.model = __assign(__assign({}, this.model), newResource);
        dynamicNgForm.form.patchValue(this.model);
    };
    PoPageDynamicEditComponent.prototype.saveOperation = function () {
        if (this.dynamicForm.form.invalid) {
            this.poNotification.warning(this.literals.saveNotificationWarning);
            return EMPTY;
        }
        var paramId = this.activatedRoute.snapshot.params['id'];
        var successMsg = paramId
            ? this.literals.saveNotificationSuccessUpdate
            : this.literals.saveNotificationSuccessSave;
        var saveOperation$ = paramId
            ? this.poPageDynamicService.updateResource(paramId, this.model)
            : this.poPageDynamicService.createResource(this.model);
        return saveOperation$.pipe(map(function () { return successMsg; }));
    };
    PoPageDynamicEditComponent.prototype.save = function (action, before) {
        var _this = this;
        if (before === void 0) { before = 'beforeSave'; }
        var executeOperation = {
            beforeSave: this.executeSave.bind(this),
            beforeSaveNew: this.executeSaveNew.bind(this)
        };
        var uniqueKey = this.resolveUniqueKey(this.model);
        this.subscriptions.push(this.poPageDynamicEditActionsService[before](this.actions[before], uniqueKey, __assign({}, this.model))
            .pipe(switchMap(function (returnBefore) {
            var _a, _b;
            var newAction = (_a = returnBefore === null || returnBefore === void 0 ? void 0 : returnBefore.newUrl) !== null && _a !== void 0 ? _a : action;
            var allowAction = (_b = returnBefore === null || returnBefore === void 0 ? void 0 : returnBefore.allowAction) !== null && _b !== void 0 ? _b : true;
            _this.updateModel(returnBefore === null || returnBefore === void 0 ? void 0 : returnBefore.resource);
            if (!allowAction) {
                return of({});
            }
            if (typeof newAction === 'string') {
                return executeOperation[before](newAction);
            }
            else {
                newAction(__assign({}, _this.model), uniqueKey);
                return EMPTY;
            }
        }))
            .subscribe());
    };
    PoPageDynamicEditComponent.prototype.executeSaveNew = function (path) {
        var _this = this;
        var paramId = this.activatedRoute.snapshot.params['id'];
        var saveOperation$ = this.saveOperation();
        return saveOperation$.pipe(tap(function (message) {
            if (paramId) {
                _this.poNotification.success(message);
                _this.navigateTo(path);
            }
            else {
                _this.poNotification.success(message);
                _this.model = {};
                _this.dynamicForm.form.reset();
            }
        }));
    };
    PoPageDynamicEditComponent.prototype.getKeysByFields = function (fields) {
        if (fields === void 0) { fields = []; }
        return fields.filter(function (field) { return field.key === true; }).map(function (field) { return field.property; });
    };
    PoPageDynamicEditComponent.prototype.getControlFields = function (fields) {
        if (fields === void 0) { fields = []; }
        return fields.filter(function (field) { return field.type !== 'detail'; });
    };
    PoPageDynamicEditComponent.prototype.getDetailFields = function (fields) {
        if (fields === void 0) { fields = []; }
        return fields.filter(function (field) { return field.type === 'detail'; });
    };
    PoPageDynamicEditComponent.prototype.getDuplicatesByFields = function (fields) {
        if (fields === void 0) { fields = []; }
        return fields.filter(function (field) { return field.duplicate === true; }).map(function (field) { return field.property; });
    };
    PoPageDynamicEditComponent.prototype.getPageActions = function (actions) {
        if (actions === void 0) { actions = {}; }
        var pageActions = [{ label: this.literals.pageActionSave, action: this.save.bind(this, actions.save) }];
        if (actions.saveNew) {
            pageActions.push({
                label: this.literals.pageActionSaveNew,
                action: this.save.bind(this, actions.saveNew, 'beforeSaveNew')
            });
        }
        if (actions.cancel === undefined || actions.cancel) {
            pageActions.push({
                label: this.literals.pageActionCancel,
                action: this.cancel.bind(this, actions.cancel, this.actions.beforeCancel)
            });
        }
        return pageActions;
    };
    PoPageDynamicEditComponent.prototype.isObject = function (value) {
        return !!value && typeof value === 'object' && !Array.isArray(value);
    };
    PoPageDynamicEditComponent.ctorParameters = function () { return [
        { type: Router },
        { type: ActivatedRoute },
        { type: PoNotificationService },
        { type: PoDialogService },
        { type: PoPageDynamicService },
        { type: PoPageCustomizationService },
        { type: PoPageDynamicEditActionsService }
    ]; };
    __decorate([
        Input('p-actions'),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], PoPageDynamicEditComponent.prototype, "actions", null);
    __decorate([
        Input('p-auto-router'),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], PoPageDynamicEditComponent.prototype, "autoRouter", null);
    __decorate([
        Input('p-breadcrumb'),
        __metadata("design:type", Object)
    ], PoPageDynamicEditComponent.prototype, "breadcrumb", void 0);
    __decorate([
        Input('p-fields'),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], PoPageDynamicEditComponent.prototype, "fields", null);
    __decorate([
        Input('p-service-api'),
        __metadata("design:type", String)
    ], PoPageDynamicEditComponent.prototype, "serviceApi", void 0);
    __decorate([
        Input('p-title'),
        __metadata("design:type", String)
    ], PoPageDynamicEditComponent.prototype, "title", void 0);
    __decorate([
        Input('p-load'),
        __metadata("design:type", Object)
    ], PoPageDynamicEditComponent.prototype, "onLoad", void 0);
    __decorate([
        ViewChild('dynamicForm'),
        __metadata("design:type", PoDynamicFormComponent)
    ], PoPageDynamicEditComponent.prototype, "dynamicForm", void 0);
    __decorate([
        ViewChild('gridDetail'),
        __metadata("design:type", PoGridComponent)
    ], PoPageDynamicEditComponent.prototype, "gridDetail", void 0);
    PoPageDynamicEditComponent = __decorate([
        Component({
            selector: 'po-page-dynamic-edit',
            template: "<po-page-default [p-actions]=\"pageActions\" [p-breadcrumb]=\"breadcrumb\" [p-title]=\"title\">\n  <ng-container *ngIf=\"model; then formFieldsTemplate; else registerNotFoundTemplate\"> </ng-container>\n</po-page-default>\n\n<ng-template #registerNotFoundTemplate>\n  <po-widget>\n    <span class=\"po-icon po-icon-info\"></span>\n    <span class=\"po-font-text-large\">\n      {{ literals.registerNotFound }}\n    </span>\n  </po-widget>\n</ng-template>\n\n<ng-template #formFieldsTemplate>\n  <po-dynamic-form #dynamicForm [p-fields]=\"controlFields\" [p-value]=\"model\"> </po-dynamic-form>\n\n  <div *ngIf=\"detailFields.length > 0\" class=\"po-sm-12\">\n    <po-divider [p-label]=\"detailFields[0].divider\"></po-divider>\n\n    <div class=\"po-row po-mb-2\">\n      <po-button [p-label]=\"literals.detailActionNew\" (p-click)=\"detailActionNew()\" p-small></po-button>\n    </div>\n\n    <po-grid\n      #gridDetail\n      [p-row-actions]=\"detailActions\"\n      [p-columns]=\"detailFields[0].detail.columns\"\n      [p-data]=\"model[detailFields[0].property]\"\n    >\n    </po-grid>\n  </div>\n</ng-template>\n",
            providers: [PoPageDynamicService]
        }),
        __metadata("design:paramtypes", [Router,
            ActivatedRoute,
            PoNotificationService,
            PoDialogService,
            PoPageDynamicService,
            PoPageCustomizationService,
            PoPageDynamicEditActionsService])
    ], PoPageDynamicEditComponent);
    return PoPageDynamicEditComponent;
}());

/**
 * @description
 *
 * Módulo do template do po-page-dynamic-detail.
 */
var PoPageDynamicEditModule = /** @class */ (function () {
    function PoPageDynamicEditModule() {
    }
    PoPageDynamicEditModule = __decorate([
        NgModule({
            imports: [
                CommonModule,
                FormsModule,
                RouterModule,
                PoButtonModule,
                PoDividerModule,
                PoDynamicModule,
                PoGridModule,
                PoPageModule,
                PoWidgetModule,
                PoPageDynamicModule
            ],
            declarations: [PoPageDynamicEditComponent],
            exports: [PoPageDynamicEditComponent]
        })
    ], PoPageDynamicEditModule);
    return PoPageDynamicEditModule;
}());

/**
 * @description
 *
 * Módulo do serviço do po-page-customization-service.
 */
var PoPageCustomizationModule = /** @class */ (function () {
    function PoPageCustomizationModule() {
    }
    PoPageCustomizationModule = __decorate([
        NgModule({
            imports: [CommonModule, HttpClientModule],
            providers: [PoPageCustomizationService]
        })
    ], PoPageCustomizationModule);
    return PoPageCustomizationModule;
}());

var poAdvancedFiltersLiteralsDefault = {
    en: {
        title: 'Advanced search',
        cancelLabel: 'Cancel',
        confirmLabel: 'Apply filters'
    },
    es: {
        title: 'Búsqueda avanzada',
        cancelLabel: 'Cancelar',
        confirmLabel: 'Aplicar filtros'
    },
    pt: {
        title: 'Busca avançada',
        cancelLabel: 'Cancelar',
        confirmLabel: 'Aplicar filtros'
    },
    ru: {
        title: 'Расширенный поиск',
        cancelLabel: 'отменить',
        confirmLabel: 'Применить фильтры'
    }
};
/**
 * @docsPrivate
 *
 * @description
 *
 * Filtro de busca avançada criado a partir de um formulário dinâmico.
 * Componente de uso interno.
 */
var PoAdvancedFilterBaseComponent = /** @class */ (function () {
    function PoAdvancedFilterBaseComponent(languageService) {
        var _this = this;
        this._filters = [];
        this.filter = {};
        this.language = poLocaleDefault;
        this.primaryAction = {
            action: function () {
                var models = _this.getValuesFromForm();
                _this.searchEvent.emit(models);
                _this.poModal.close();
            },
            label: this.literals.confirmLabel
        };
        this.secondaryAction = {
            action: function () {
                _this.poModal.close();
            },
            label: this.literals.cancelLabel
        };
        /**
         * Mantém na modal de busca avançada os valores preenchidos do último filtro realizado pelo usuário.
         */
        this.keepFilters = false;
        /** Função que será disparada e receberá os valores do formulário ao ser clicado no botão buscar. */
        this.searchEvent = new EventEmitter();
        this.language = languageService.getShortLanguage();
    }
    Object.defineProperty(PoAdvancedFilterBaseComponent.prototype, "filters", {
        get: function () {
            return this._filters;
        },
        /**
         * Coleção de objetos que implementam a interface PoPageDynamicSearchFilters, para definição dos campos que serão criados
         * dinamicamente.
         */
        set: function (filters) {
            this._filters = Array.isArray(filters) ? __spread(filters) : [];
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoAdvancedFilterBaseComponent.prototype, "literals", {
        get: function () {
            return this._literals || poAdvancedFiltersLiteralsDefault[this.language];
        },
        /** Objeto com as literais usadas no `po-advanced-filter`. */
        set: function (value) {
            if (value instanceof Object && !(value instanceof Array)) {
                this._literals = __assign(__assign(__assign({}, poAdvancedFiltersLiteralsDefault[poLocaleDefault]), poAdvancedFiltersLiteralsDefault[this.language]), value);
            }
            else {
                this._literals = poAdvancedFiltersLiteralsDefault[this.language];
            }
            this.primaryAction.label = this.literals.confirmLabel;
            this.secondaryAction.label = this.literals.cancelLabel;
        },
        enumerable: true,
        configurable: true
    });
    // Retorna os models dos campos preenchidos
    PoAdvancedFilterBaseComponent.prototype.getValuesFromForm = function () {
        var _this = this;
        Object.keys(this.filter).forEach(function (property) {
            if (_this.filter[property] === undefined || _this.filter[property] === '') {
                delete _this.filter[property];
            }
        });
        return this.filter;
    };
    PoAdvancedFilterBaseComponent.ctorParameters = function () { return [
        { type: PoLanguageService }
    ]; };
    __decorate([
        ViewChild(PoModalComponent, { static: true }),
        __metadata("design:type", PoModalComponent)
    ], PoAdvancedFilterBaseComponent.prototype, "poModal", void 0);
    __decorate([
        Input('p-filters'),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], PoAdvancedFilterBaseComponent.prototype, "filters", null);
    __decorate([
        InputBoolean(),
        Input('p-keep-filters'),
        __metadata("design:type", Boolean)
    ], PoAdvancedFilterBaseComponent.prototype, "keepFilters", void 0);
    __decorate([
        Input('p-literals'),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], PoAdvancedFilterBaseComponent.prototype, "literals", null);
    __decorate([
        Output('p-search-event'),
        __metadata("design:type", Object)
    ], PoAdvancedFilterBaseComponent.prototype, "searchEvent", void 0);
    PoAdvancedFilterBaseComponent = __decorate([
        Directive(),
        __metadata("design:paramtypes", [PoLanguageService])
    ], PoAdvancedFilterBaseComponent);
    return PoAdvancedFilterBaseComponent;
}());

/**
 * @docsPrivate
 *
 * @docsExtends PoAdvancedFilterBaseComponent
 *
 * @examplePrivate
 *
 * <example-private name="po-advanced-filter" title="PO Busca Avançada">
 *   <file name="sample-po-advanced-filter.component.html"> </file>
 *   <file name="sample-po-advanced-filter.component.ts"> </file>
 * </example-private>
 */
var PoAdvancedFilterComponent = /** @class */ (function (_super) {
    __extends(PoAdvancedFilterComponent, _super);
    function PoAdvancedFilterComponent(languageService) {
        return _super.call(this, languageService) || this;
    }
    PoAdvancedFilterComponent.prototype.open = function () {
        this.filter = this.keepFilters ? this.getInitialValuesFromFilter(this.filters) : {};
        this.poModal.open();
    };
    PoAdvancedFilterComponent.prototype.getInitialValuesFromFilter = function (filters) {
        return filters.reduce(function (result, item) {
            var _a;
            return Object.assign(result, (_a = {}, _a[item.property] = item.initValue, _a));
        }, {});
    };
    PoAdvancedFilterComponent.ctorParameters = function () { return [
        { type: PoLanguageService }
    ]; };
    __decorate([
        ViewChild(PoDynamicFormComponent, { static: true }),
        __metadata("design:type", PoDynamicFormComponent)
    ], PoAdvancedFilterComponent.prototype, "poDynamicForm", void 0);
    PoAdvancedFilterComponent = __decorate([
        Component({
            selector: 'po-advanced-filter',
            template: "<po-modal\n  p-hide-close\n  [p-primary-action]=\"primaryAction\"\n  [p-secondary-action]=\"secondaryAction\"\n  [p-title]=\"literals.title\"\n>\n  <po-dynamic-form [p-fields]=\"filters\" [p-value]=\"filter\"> </po-dynamic-form>\n</po-modal>\n"
        }),
        __metadata("design:paramtypes", [PoLanguageService])
    ], PoAdvancedFilterComponent);
    return PoAdvancedFilterComponent;
}(PoAdvancedFilterBaseComponent));

var poPageDynamicSearchLiteralsDefault = {
    en: {
        disclaimerGroupTitle: 'Displaying results filtered by:',
        filterTitle: poAdvancedFiltersLiteralsDefault.en.title,
        filterCancelLabel: poAdvancedFiltersLiteralsDefault.en.cancelLabel,
        filterConfirmLabel: poAdvancedFiltersLiteralsDefault.en.confirmLabel,
        quickSearchLabel: 'Quick search:',
        searchPlaceholder: 'Search'
    },
    es: {
        disclaimerGroupTitle: 'Presentando resultados filtrados por:',
        filterTitle: poAdvancedFiltersLiteralsDefault.es.title,
        filterCancelLabel: poAdvancedFiltersLiteralsDefault.es.cancelLabel,
        filterConfirmLabel: poAdvancedFiltersLiteralsDefault.es.confirmLabel,
        quickSearchLabel: 'Búsqueda rápida:',
        searchPlaceholder: 'Buscar'
    },
    pt: {
        disclaimerGroupTitle: 'Apresentando resultados filtrados por:',
        filterTitle: poAdvancedFiltersLiteralsDefault.pt.title,
        filterCancelLabel: poAdvancedFiltersLiteralsDefault.pt.cancelLabel,
        filterConfirmLabel: poAdvancedFiltersLiteralsDefault.pt.confirmLabel,
        quickSearchLabel: 'Pesquisa rápida:',
        searchPlaceholder: 'Pesquisar'
    },
    ru: {
        disclaimerGroupTitle: 'Отображение результатов, отфильтрованных по:',
        filterTitle: poAdvancedFiltersLiteralsDefault.ru.title,
        filterCancelLabel: poAdvancedFiltersLiteralsDefault.ru.cancelLabel,
        filterConfirmLabel: poAdvancedFiltersLiteralsDefault.ru.confirmLabel,
        quickSearchLabel: 'Быстрый поиск:',
        searchPlaceholder: 'исследование'
    }
};
/**
 * @description
 *
 * Componente com as ações de pesquisa já definidas, bastando que o desenvolvedor implemente apenas a chamada para as APIs
 * e exiba as informações.
 */
var PoPageDynamicSearchBaseComponent = /** @class */ (function () {
    function PoPageDynamicSearchBaseComponent(languageService) {
        this._filters = [];
        /** Nesta propriedade deve ser definido um array de objetos que implementam a interface `PoPageAction`. */
        this.actions = [];
        /** Objeto com propriedades do breadcrumb. */
        this.breadcrumb = { items: [] };
        /**
         * @optional
         *
         * @description
         *
         * Mantém na busca avançada os valores preenchidos do último filtro realizado pelo usuário.
         *
         * @default `false`
         */
        this.keepFilters = false;
        /**
         * @optional
         *
         * @description
         *
         * Permite a utilização da pesquisa rápida junto com a pesquisa avançada.
         *
         * Desta forma, ao ter uma pesquisa avançada estabelecida e ser
         * preenchido a pesquisa rápida, o filtro será concatenado adicionando a pesquisa
         * rápida também na lista de `disclaimers`.
         *
         * > Os valores que são emitidos no `p-quick-search` e no `p-advanced-search`
         * permanecem separados durante a emissão dos valores alterados. A concatenação
         * é apenas nos `disclaimers`.
         *
         * @default `false`
         */
        this.concatFilters = false;
        /**
         * @description
         *
         * Evento disparado ao executar a pesquisa avançada, o mesmo irá repassar um objeto com os valores preenchidos no modal de pesquisa.
         *
         * > Campos não preenchidos não irão aparecer no objeto passado por parâmetro.
         */
        this.advancedSearch = new EventEmitter();
        /** Evento disparado ao remover um ou todos os disclaimers pelo usuário. */
        this.changeDisclaimers = new EventEmitter();
        /** Evento disparado ao realizar uma busca pelo campo de pesquisa rápida, o mesmo será chamado repassando o valor digitado. */
        this.quickSearch = new EventEmitter();
        this.language = languageService.getShortLanguage();
    }
    Object.defineProperty(PoPageDynamicSearchBaseComponent.prototype, "literals", {
        get: function () {
            return this._literals || poPageDynamicSearchLiteralsDefault[this.language];
        },
        /**
         * @optional
         *
         * @description
         *
         * Objeto com as literais usadas no `po-page-dynamic-search`.
         *
         * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponíveis:
         *
         * ```
         *  const customLiterals: PoPageDynamicSearchLiterals = {
         *    disclaimerGroupTitle: 'Filtros aplicados:',
         *    filterTitle: 'Filtro avançado',
         *    filterCancelLabel: 'Fechar',
         *    filterConfirmLabel: 'Aplicar',
         *    quickSearchLabel: 'Valor pesquisado:',
         *    searchPlaceholder: 'Pesquise aqui'
         *  };
         * ```
         *
         * Ou passando apenas as literais que deseja customizar:
         *
         * ```
         *  const customLiterals: PoPageDynamicSearchLiterals = {
         *    filterTitle: 'Filtro avançado'
         *  };
         * ```
         *
         * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.
         *
         * ```
         * <po-page-dynamic-search
         *   [p-literals]="customLiterals">
         * </po-page-dynamic-search>
         * ```
         *
         * > O valor padrão será traduzido de acordo com o idioma configurado no [`PoI18nService`](/documentation/po-i18n) ou *browser*.
         */
        set: function (value) {
            if (value instanceof Object && !(value instanceof Array)) {
                this._literals = __assign(__assign(__assign({}, poPageDynamicSearchLiteralsDefault[poLocaleDefault]), poPageDynamicSearchLiteralsDefault[this.language]), value);
            }
            else {
                this._literals = poPageDynamicSearchLiteralsDefault[this.language];
            }
            this.setAdvancedFilterLiterals(this.literals);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageDynamicSearchBaseComponent.prototype, "filters", {
        get: function () {
            return this._filters;
        },
        /**
         * @optional
         *
         * @description
         *
         * Lista dos campos usados na busca avançada. Caso o mesmo não seja passado a busca avançada não será exibida.
         */
        set: function (filters) {
            this._filters = Array.isArray(filters) ? __spread(filters) : [];
            if (JSON.stringify(this._filters) !== JSON.stringify(this.previousFilters)) {
                this.onChangeFilters(this.filters);
                this.previousFilters = __spread(this._filters);
            }
        },
        enumerable: true,
        configurable: true
    });
    PoPageDynamicSearchBaseComponent.prototype.setAdvancedFilterLiterals = function (literals) {
        this.advancedFilterLiterals = {
            cancelLabel: literals.filterCancelLabel,
            confirmLabel: literals.filterConfirmLabel,
            title: literals.filterTitle
        };
    };
    PoPageDynamicSearchBaseComponent.ctorParameters = function () { return [
        { type: PoLanguageService }
    ]; };
    __decorate([
        Input('p-actions'),
        __metadata("design:type", Array)
    ], PoPageDynamicSearchBaseComponent.prototype, "actions", void 0);
    __decorate([
        Input('p-breadcrumb'),
        __metadata("design:type", Object)
    ], PoPageDynamicSearchBaseComponent.prototype, "breadcrumb", void 0);
    __decorate([
        Input('p-literals'),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], PoPageDynamicSearchBaseComponent.prototype, "literals", null);
    __decorate([
        Input('p-filters'),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], PoPageDynamicSearchBaseComponent.prototype, "filters", null);
    __decorate([
        InputBoolean(),
        Input('p-keep-filters'),
        __metadata("design:type", Boolean)
    ], PoPageDynamicSearchBaseComponent.prototype, "keepFilters", void 0);
    __decorate([
        InputBoolean(),
        Input('p-concat-filters'),
        __metadata("design:type", Boolean)
    ], PoPageDynamicSearchBaseComponent.prototype, "concatFilters", void 0);
    __decorate([
        Input('p-load'),
        __metadata("design:type", Object)
    ], PoPageDynamicSearchBaseComponent.prototype, "onLoad", void 0);
    __decorate([
        Input('p-title'),
        __metadata("design:type", String)
    ], PoPageDynamicSearchBaseComponent.prototype, "title", void 0);
    __decorate([
        Output('p-advanced-search'),
        __metadata("design:type", EventEmitter)
    ], PoPageDynamicSearchBaseComponent.prototype, "advancedSearch", void 0);
    __decorate([
        Output('p-change-disclaimers'),
        __metadata("design:type", EventEmitter)
    ], PoPageDynamicSearchBaseComponent.prototype, "changeDisclaimers", void 0);
    __decorate([
        Output('p-quick-search'),
        __metadata("design:type", EventEmitter)
    ], PoPageDynamicSearchBaseComponent.prototype, "quickSearch", void 0);
    PoPageDynamicSearchBaseComponent = __decorate([
        Directive(),
        __metadata("design:paramtypes", [PoLanguageService])
    ], PoPageDynamicSearchBaseComponent);
    return PoPageDynamicSearchBaseComponent;
}());

/**
 * @docsExtends PoPageDynamicSearchBaseComponent
 *
 * @example
 *
 * <example name="po-page-dynamic-search-basic" title="PO Page Dynamic Search Basic">
 *  <file name="sample-po-page-dynamic-search-basic/sample-po-page-dynamic-search-basic.component.html"> </file>
 *  <file name="sample-po-page-dynamic-search-basic/sample-po-page-dynamic-search-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-page-dynamic-search-hiring-processes" title="PO Page Dynamic Search - Hiring processes">
 *  <file name="sample-po-page-dynamic-search-hiring-processes/sample-po-page-dynamic-search-hiring-processes.component.html"> </file>
 *  <file name="sample-po-page-dynamic-search-hiring-processes/sample-po-page-dynamic-search-hiring-processes.component.ts"> </file>
 *  <file name="sample-po-page-dynamic-search-hiring-processes/sample-po-page-dynamic-search-hiring-processes.service.ts"> </file>
 * </example>
 */
var PoPageDynamicSearchComponent = /** @class */ (function (_super) {
    __extends(PoPageDynamicSearchComponent, _super);
    function PoPageDynamicSearchComponent(languageService, poPageCustomizationService, changeDetector) {
        var _this = _super.call(this, languageService) || this;
        _this.poPageCustomizationService = poPageCustomizationService;
        _this.changeDetector = changeDetector;
        _this._disclaimerGroup = {
            remove: _this.onRemoveDisclaimer.bind(_this),
            removeAll: _this.onRemoveAllDisclaimers.bind(_this),
            disclaimers: [],
            title: _this.literals.disclaimerGroupTitle
        };
        _this._filterSettings = {
            action: _this.onAction.bind(_this),
            advancedAction: _this.onAdvancedAction.bind(_this),
            placeholder: _this.literals.searchPlaceholder
        };
        return _this;
    }
    Object.defineProperty(PoPageDynamicSearchComponent.prototype, "disclaimerGroup", {
        get: function () {
            return Object.assign({}, this._disclaimerGroup, { title: this.literals.disclaimerGroupTitle });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageDynamicSearchComponent.prototype, "filterSettings", {
        get: function () {
            this._filterSettings.advancedAction = this.filters.length === 0 ? undefined : this.onAdvancedAction.bind(this);
            return Object.assign({}, this._filterSettings, { placeholder: this.literals.searchPlaceholder });
        },
        enumerable: true,
        configurable: true
    });
    PoPageDynamicSearchComponent.prototype.ngOnInit = function () {
        this.setAdvancedFilterLiterals(this.literals);
        if (this.onLoad) {
            this.loadOptionsOnInitialize(this.onLoad);
        }
    };
    PoPageDynamicSearchComponent.prototype.ngOnDestroy = function () {
        if (this.loadSubscription) {
            this.loadSubscription.unsubscribe();
        }
    };
    PoPageDynamicSearchComponent.prototype.onChangeFilters = function (filters) {
        var filterObjectWithValue = filters
            .filter(function (filter) { return filter.initValue; })
            .reduce(function (prev, current) {
            var _a;
            return __assign(__assign({}, prev), (_a = {}, _a[current.property] = current.initValue, _a));
        }, {});
        if (Object.keys(filterObjectWithValue).length) {
            this.onAdvancedSearch(filterObjectWithValue);
        }
    };
    PoPageDynamicSearchComponent.prototype.onAction = function (quickFilter) {
        var _this = this;
        var disclaimerQuickSearchUpdated = {
            property: 'search',
            label: this.literals.quickSearchLabel + " " + quickFilter,
            value: quickFilter
        };
        var getDisclaimersWithConcatFilters = function () { return __spread(_this.getDisclaimersWithoutQuickSearch(), [
            disclaimerQuickSearchUpdated
        ]); };
        this._disclaimerGroup.disclaimers = this.concatFilters
            ? getDisclaimersWithConcatFilters()
            : [disclaimerQuickSearchUpdated];
        if (this.quickSearch.observers && this.quickSearch.observers.length > 0) {
            this.quickSearch.emit(quickFilter);
        }
        if (this.keepFilters && !this.concatFilters) {
            this.filters.forEach(function (element) { return delete element.initValue; });
        }
        this.changeDetector.detectChanges();
    };
    PoPageDynamicSearchComponent.prototype.onAdvancedAction = function () {
        this.poAdvancedFilter.open();
    };
    PoPageDynamicSearchComponent.prototype.onAdvancedSearch = function (filters) {
        this._disclaimerGroup.disclaimers = this.setDisclaimers(filters);
        this.setFilters(filters);
        this.advancedSearch.emit(filters);
    };
    PoPageDynamicSearchComponent.prototype.getDisclaimersWithoutQuickSearch = function () {
        var quickSearchProperty = 'search';
        return this._disclaimerGroup.disclaimers.filter(function (item) { return item.property !== quickSearchProperty; });
    };
    PoPageDynamicSearchComponent.prototype.setFilters = function (filters) {
        var formattedFilters = this.convertToFilters(filters);
        this.filters.forEach(function (element) {
            var compatibleObject = formattedFilters.find(function (item) { return item.property === element.property; });
            if (compatibleObject) {
                element.initValue = compatibleObject.value;
            }
            else {
                delete element.initValue;
            }
        });
    };
    PoPageDynamicSearchComponent.prototype.convertToFilters = function (filters) {
        return Object.entries(filters).map(function (_a) {
            var _b = __read(_a, 2), property = _b[0], value = _b[1];
            return ({ property: property, value: value });
        });
    };
    PoPageDynamicSearchComponent.prototype.applyDisclaimerLabelValue = function (field, filterValue) {
        var values = Array.isArray(filterValue) ? filterValue : [filterValue];
        var labels = values.map(function (value) {
            var filteredField = field.options.find(function (option) { return option.value === value || option === value; });
            if (filteredField) {
                return filteredField.label || filteredField.value || filteredField;
            }
        });
        return labels.join(', ');
    };
    PoPageDynamicSearchComponent.prototype.formatDate = function (date) {
        var year = parseInt(date.substr(0, 4), 10);
        var month = parseInt(date.substr(5, 2), 10);
        var day = parseInt(date.substr(8, 2), 10);
        return new Date(year, month - 1, day).toLocaleDateString(getBrowserLanguage());
    };
    PoPageDynamicSearchComponent.prototype.formatArrayToObjectKeyValue = function (filters) {
        var formattedObject = filters.reduce(function (result, item) {
            var _a;
            return Object.assign(result, (_a = {}, _a[item.property] = item.value || item.initValue, _a));
        }, {});
        Object.keys(formattedObject).forEach(function (key) {
            if (!formattedObject[key]) {
                delete formattedObject[key];
            }
        });
        return formattedObject;
    };
    PoPageDynamicSearchComponent.prototype.getFieldByProperty = function (fields, fieldName) {
        return fields.find(function (field) { return field.property === fieldName; });
    };
    PoPageDynamicSearchComponent.prototype.getFilterValueToDisclaimer = function (field, value) {
        if (field.type === PoDynamicFieldType.Date) {
            return this.formatDate(value);
        }
        if (field.options && value) {
            return this.applyDisclaimerLabelValue(field, value);
        }
        return value;
    };
    PoPageDynamicSearchComponent.prototype.onRemoveDisclaimer = function (removeData) {
        var currentDisclaimers = removeData.currentDisclaimers;
        this.emitChangesDisclaimers(currentDisclaimers);
    };
    PoPageDynamicSearchComponent.prototype.emitChangesDisclaimers = function (currentDisclaimers) {
        this.changeDisclaimers.emit(currentDisclaimers);
        this.setFilters(this.formatArrayToObjectKeyValue(currentDisclaimers));
    };
    PoPageDynamicSearchComponent.prototype.onRemoveAllDisclaimers = function () {
        this.emitChangesDisclaimers([]);
    };
    PoPageDynamicSearchComponent.prototype.setDisclaimers = function (filters) {
        var _this = this;
        var disclaimers = [];
        var properties = Object.keys(filters);
        properties.forEach(function (property) {
            var field = _this.getFieldByProperty(_this.filters, property);
            var label = field.label || capitalizeFirstLetter(field.property);
            var value = filters[property];
            var valueDisplayedOnTheDisclaimerLabel = _this.getFilterValueToDisclaimer(field, value);
            if (valueDisplayedOnTheDisclaimerLabel !== '') {
                disclaimers.push({
                    label: label + ": " + valueDisplayedOnTheDisclaimerLabel,
                    property: property,
                    value: value
                });
            }
        });
        return disclaimers;
    };
    PoPageDynamicSearchComponent.prototype.loadOptionsOnInitialize = function (onLoad) {
        var _this = this;
        this.loadSubscription = this.getPoDynamicPageOptions(onLoad).subscribe(function (responsePoOption) {
            return _this.poPageCustomizationService.changeOriginalOptionsToNewOptions(_this, responsePoOption);
        });
    };
    PoPageDynamicSearchComponent.prototype.getPoDynamicPageOptions = function (onLoad) {
        var originalOption = {
            title: this.title,
            actions: this.actions,
            breadcrumb: this.breadcrumb,
            filters: this.filters,
            keepFilters: this.keepFilters,
            concatFilters: this.concatFilters
        };
        var pageOptionSchema = {
            schema: [
                {
                    nameProp: 'filters',
                    merge: true,
                    keyForMerge: 'property'
                },
                {
                    nameProp: 'actions',
                    merge: true,
                    keyForMerge: 'label'
                },
                {
                    nameProp: 'breadcrumb'
                },
                {
                    nameProp: 'title'
                },
                {
                    nameProp: 'keepFilters'
                },
                {
                    nameProp: 'concatFilters'
                }
            ]
        };
        return this.poPageCustomizationService.getCustomOptions(onLoad, originalOption, pageOptionSchema);
    };
    PoPageDynamicSearchComponent.ctorParameters = function () { return [
        { type: PoLanguageService },
        { type: PoPageCustomizationService },
        { type: ChangeDetectorRef }
    ]; };
    __decorate([
        ViewChild(PoAdvancedFilterComponent, { static: true }),
        __metadata("design:type", PoAdvancedFilterComponent)
    ], PoPageDynamicSearchComponent.prototype, "poAdvancedFilter", void 0);
    PoPageDynamicSearchComponent = __decorate([
        Component({
            selector: 'po-page-dynamic-search',
            template: "<po-page-list\n  [p-actions]=\"actions\"\n  [p-breadcrumb]=\"breadcrumb\"\n  [p-disclaimer-group]=\"disclaimerGroup\"\n  [p-filter]=\"filterSettings\"\n  [p-title]=\"title\"\n>\n  <po-advanced-filter\n    [p-filters]=\"filters\"\n    [p-keep-filters]=\"keepFilters\"\n    [p-literals]=\"advancedFilterLiterals\"\n    (p-search-event)=\"onAdvancedSearch($event)\"\n  >\n  </po-advanced-filter>\n\n  <ng-content></ng-content>\n</po-page-list>\n"
        }),
        __metadata("design:paramtypes", [PoLanguageService,
            PoPageCustomizationService,
            ChangeDetectorRef])
    ], PoPageDynamicSearchComponent);
    return PoPageDynamicSearchComponent;
}(PoPageDynamicSearchBaseComponent));

/**
 * @description
 *
 * Módulo do template do po-page-dynamic-search.
 */
var PoPageDynamicSearchModule = /** @class */ (function () {
    function PoPageDynamicSearchModule() {
    }
    PoPageDynamicSearchModule = __decorate([
        NgModule({
            imports: [
                CommonModule,
                FormsModule,
                RouterModule,
                PoDynamicModule,
                PoLanguageModule,
                PoModalModule,
                PoPageModule,
                PoPageCustomizationModule
            ],
            declarations: [PoAdvancedFilterComponent, PoPageDynamicSearchComponent],
            exports: [PoPageDynamicSearchComponent]
        })
    ], PoPageDynamicSearchModule);
    return PoPageDynamicSearchModule;
}());

var PoPageDynamicListBaseComponent = /** @class */ (function () {
    function PoPageDynamicListBaseComponent() {
        this._autoRouter = false;
        this._columns = [];
        this._duplicates = [];
        this._fields = [];
        this._filters = [];
        this._keys = [];
        /** Objeto com propriedades do breadcrumb. */
        this.breadcrumb = { items: [] };
    }
    Object.defineProperty(PoPageDynamicListBaseComponent.prototype, "autoRouter", {
        get: function () {
            return this._autoRouter;
        },
        /**
         * @optional
         *
         * @description
         *
         * Cria automaticamente as rotas de edição (novo/duplicate) e detalhes caso sejam definidas ações na propriedade `p-actions`
         *
         * As rotas criadas serão baseadas na propriedade `p-actions`.
         *
         * > Para o correto funcionamento não pode haver nenhuma rota coringa (`**`) especificada.
         *
         * @default false
         */
        set: function (value) {
            this._autoRouter = convertToBoolean(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageDynamicListBaseComponent.prototype, "fields", {
        get: function () {
            return this._fields;
        },
        /**
         * @optional
         *
         * @description
         *
         * Lista dos campos usados na tabela e busca avançada.
         *
         *
         * > Caso não seja definido fields a tabela assumirá o comportamento padrão.
         */
        set: function (fields) {
            this._fields = Array.isArray(fields) ? __spread(fields) : [];
            this.setFieldsProperties(this.fields);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageDynamicListBaseComponent.prototype, "columns", {
        get: function () {
            return this._columns;
        },
        set: function (value) {
            this._columns = __spread(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageDynamicListBaseComponent.prototype, "duplicates", {
        get: function () {
            return __spread(this._duplicates);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageDynamicListBaseComponent.prototype, "filters", {
        get: function () {
            return __spread(this._filters);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageDynamicListBaseComponent.prototype, "keys", {
        get: function () {
            return __spread(this._keys);
        },
        enumerable: true,
        configurable: true
    });
    PoPageDynamicListBaseComponent.prototype.setFieldsProperties = function (fields) {
        this._filters = fields.filter(function (field) { return field.filter === true; });
        this.columns = fields.filter(function (field) { return field.visible === undefined || field.visible === true; });
        this._keys = fields.filter(function (field) { return field.key === true; }).map(function (field) { return field.property; });
        this._duplicates = fields.filter(function (field) { return field.duplicate === true; }).map(function (field) { return field.property; });
    };
    __decorate([
        Input('p-auto-router'),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], PoPageDynamicListBaseComponent.prototype, "autoRouter", null);
    __decorate([
        Input('p-breadcrumb'),
        __metadata("design:type", Object)
    ], PoPageDynamicListBaseComponent.prototype, "breadcrumb", void 0);
    __decorate([
        Input('p-fields'),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], PoPageDynamicListBaseComponent.prototype, "fields", null);
    __decorate([
        Input('p-service-api'),
        __metadata("design:type", String)
    ], PoPageDynamicListBaseComponent.prototype, "serviceApi", void 0);
    __decorate([
        Input('p-title'),
        __metadata("design:type", String)
    ], PoPageDynamicListBaseComponent.prototype, "title", void 0);
    PoPageDynamicListBaseComponent = __decorate([
        Directive()
    ], PoPageDynamicListBaseComponent);
    return PoPageDynamicListBaseComponent;
}());

var PoPageDynamicTableActionsService = /** @class */ (function () {
    function PoPageDynamicTableActionsService(http) {
        this.http = http;
        this.headers = new HttpHeaders({
            'X-PO-SCREEN-LOCK': 'true'
        });
    }
    PoPageDynamicTableActionsService.prototype.beforeDuplicate = function (action, id, body) {
        var resource = body !== null && body !== void 0 ? body : {};
        return this.executeAction({ action: action, resource: resource, id: id });
    };
    PoPageDynamicTableActionsService.prototype.beforeEdit = function (action, id, body) {
        var resource = body !== null && body !== void 0 ? body : {};
        return this.executeAction({ action: action, resource: resource, id: id });
    };
    PoPageDynamicTableActionsService.prototype.beforeNew = function (action) {
        return this.executeAction({ action: action });
    };
    PoPageDynamicTableActionsService.prototype.beforeRemove = function (action, id, resource) {
        return this.executeAction({ action: action, id: id, resource: resource });
    };
    PoPageDynamicTableActionsService.prototype.beforeRemoveAll = function (action, resources) {
        return this.executeAction({ action: action, resource: resources });
    };
    PoPageDynamicTableActionsService.prototype.beforeDetail = function (action, id, resource) {
        return this.executeAction({ action: action, id: id, resource: resource });
    };
    PoPageDynamicTableActionsService.prototype.executeAction = function (_a) {
        var action = _a.action, _b = _a.resource, resource = _b === void 0 ? {} : _b, id = _a.id;
        if (!action) {
            return of({});
        }
        if (typeof action === 'string') {
            var url = id ? action + "/" + id : action;
            return this.http.post(url, resource, { headers: this.headers });
        }
        if (id) {
            return of(action(id, resource));
        }
        return of(action(resource));
    };
    PoPageDynamicTableActionsService.ctorParameters = function () { return [
        { type: HttpClient }
    ]; };
    PoPageDynamicTableActionsService.ɵprov = ɵɵdefineInjectable({ factory: function PoPageDynamicTableActionsService_Factory() { return new PoPageDynamicTableActionsService(ɵɵinject(HttpClient)); }, token: PoPageDynamicTableActionsService, providedIn: "root" });
    PoPageDynamicTableActionsService = __decorate([
        Injectable({
            providedIn: 'root'
        }),
        __metadata("design:paramtypes", [HttpClient])
    ], PoPageDynamicTableActionsService);
    return PoPageDynamicTableActionsService;
}());

var poPageDynamicTableLiteralsDefault = {
    en: {
        pageAction: 'New',
        pageActionRemoveAll: 'Delete',
        tableActionView: 'View',
        tableActionEdit: 'Edit',
        tableActionDuplicate: 'Duplicate',
        tableActionDelete: 'Delete',
        confirmRemoveTitle: 'Confirm delete',
        confirmRemoveMessage: 'Are you sure you want to delete this record? You can not undo this action.',
        confirmRemoveAllTitle: 'Confirm batch deletion',
        confirmRemoveAllMessage: 'Are you sure you want to delete all these records? You can not undo this action.',
        loadDataErrorNotification: 'Service not found',
        removeSuccessNotification: 'Item deleted successfully',
        removeAllSuccessNotification: 'Items deleted successfully'
    },
    es: {
        pageAction: 'Nuevo',
        pageActionRemoveAll: 'Borrar',
        tableActionView: 'Visualizar',
        tableActionEdit: 'Editar',
        tableActionDuplicate: 'Duplicar',
        tableActionDelete: 'Borrar',
        confirmRemoveTitle: 'Confirmar la exclusión',
        confirmRemoveMessage: '¿Está seguro de que desea eliminar este registro? No puede deshacer esta acción.',
        confirmRemoveAllTitle: 'Confirmar la exclusión por lotes',
        confirmRemoveAllMessage: '¿Está seguro de que desea eliminar todos estos registros? No puede deshacer esta acción.',
        loadDataErrorNotification: 'Servicio no informado.',
        removeSuccessNotification: 'Elemento eliminado con éxito',
        removeAllSuccessNotification: 'Elementos eliminados con éxito'
    },
    pt: {
        pageAction: 'Novo',
        pageActionRemoveAll: 'Excluir',
        tableActionView: 'Visualizar',
        tableActionEdit: 'Editar',
        tableActionDuplicate: 'Duplicar',
        tableActionDelete: 'Excluir',
        confirmRemoveTitle: 'Confirmar exclusão',
        confirmRemoveMessage: 'Tem certeza de que deseja excluir esse registro? Você não poderá desfazer essa ação.',
        confirmRemoveAllTitle: 'Confirmar exclusão em lote',
        confirmRemoveAllMessage: 'Tem certeza de que deseja excluir todos esses registros? Você não poderá desfazer essa ação.',
        loadDataErrorNotification: 'Serviço não informado.',
        removeSuccessNotification: 'Item excluido com sucesso',
        removeAllSuccessNotification: 'Items excluidos com sucesso'
    }
};
/**
 * @docsExtends PoPageDynamicListBaseComponent
 *
 * @description
 *
 * O `po-page-dynamic-table` é uma página que exibe uma lista de registros em uma tabela baseado em uma lista de fields,
 * o mesmo também suporta metadados conforme especificado na documentação.
 *
 * ### Utilização via rota
 *
 * Ao utilizar as rotas para carregar o template, o `page-dynamic-table` disponibiliza propriedades para
 * poder especificar o endpoint dos dados e dos metadados. Exemplo de utilização:
 *
 * O componente primeiro irá carregar o metadado da rota definida na propriedade serviceMetadataApi
 * e depois irá buscar da rota definida na propriedade serviceLoadApi
 *
 * > Caso o servidor retornar um erro ao recuperar o metadados, será repassado o metadados salvo em cache,
 * se o cache não existe será disparado uma notificação.
 *
 * ```
 * {
 *   path: 'people',
 *   component: PoPageDynamicTableComponent,
 *   data: {
 *     serviceApi: 'http://localhost:3000/v1/people', // endpoint dos dados
 *     serviceMetadataApi: 'http://localhost:3000/v1/metadata', // endpoint dos metadados utilizando o método HTTP Get
 *     serviceLoadApi: 'http://localhost:3000/load-metadata' // endpoint de customizações dos metadados utilizando o método HTTP Post
 *   }
 * }
 *
 * ```
 *
 * A requisição dos metadados é feita na inicialização do template para buscar os metadados da página passando o
 * tipo do metadado esperado e a versão cacheada pelo browser.
 *
 * O formato esperado na resposta da requisição está especificado na interface
 * [PoPageDynamicTableMetadata](/documentation/po-page-dynamic-table#po-page-dynamic-table-metadata). Por exemplo:
 *
 * ```
 *  {
 *   version: 1,
 *   title: 'Person Table',
 *   fields: [
 *     { property: 'id', key: true, disabled: true },
 *     { property: 'status' },
 *     { property: 'name' },
 *     { property: 'nickname' },
 *     { property: 'birthdate', label: 'Birth date' },
 *     { property: 'genre' },
 *     { property: 'city' },
 *     { property: 'country' }
 *   ],
 *   keepFilters: true
 * }
 * ```
 *
 * > Caso o endpoint dos metadados não seja especificado, será feito uma requisição utilizando o `serviceApi` da seguinte forma:
 * ```
 * GET {end-point}/metadata?type=list&version={version}
 * ```
 *
 * @example
 *
 * <example name="po-page-dynamic-table-basic" title="PO Page Dynamic Table Basic">
 *  <file name="sample-po-page-dynamic-table-basic/sample-po-page-dynamic-table-basic.component.html"> </file>
 *  <file name="sample-po-page-dynamic-table-basic/sample-po-page-dynamic-table-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-page-dynamic-table-users" title="PO Page Dynamic Table - Users">
 *  <file name="sample-po-page-dynamic-table-users/sample-po-page-dynamic-table-users.component.html"> </file>
 *  <file name="sample-po-page-dynamic-table-users/sample-po-page-dynamic-table-users.component.ts"> </file>
 * </example>
 */
var PoPageDynamicTableComponent = /** @class */ (function (_super) {
    __extends(PoPageDynamicTableComponent, _super);
    function PoPageDynamicTableComponent(router, activatedRoute, poDialogService, poNotification, poPageDynamicService, poPageCustomizationService, poPageDynamicTableActionsService) {
        var _this = _super.call(this) || this;
        _this.router = router;
        _this.activatedRoute = activatedRoute;
        _this.poDialogService = poDialogService;
        _this.poNotification = poNotification;
        _this.poPageDynamicService = poPageDynamicService;
        _this.poPageCustomizationService = poPageCustomizationService;
        _this.poPageDynamicTableActionsService = poPageDynamicTableActionsService;
        _this._actions = {};
        _this._pageActions = [];
        _this._tableActions = [];
        _this.page = 1;
        _this.params = {};
        _this.subscriptions = new Subscription();
        _this.hasNext = false;
        _this.items = [];
        _this.literals = __assign(__assign({}, poPageDynamicTableLiteralsDefault[poLocaleDefault]), poPageDynamicTableLiteralsDefault[browserLanguage()]);
        /**
         * @optional
         *
         * @description
         *
         * Mantém na modal de `Busca Avançada` os valores preenchidos do último filtro realizado pelo usuário.
         *
         * @default `false`
         */
        _this.keepFilters = false;
        /**
         * @optional
         *
         * @description
         *
         * Permite a utilização da pesquisa rápida junto com a pesquisa avançada.
         *
         * Desta forma, ao ter uma pesquisa avançada estabelecida e ser
         * preenchido a pesquisa rápida, o filtro será concatenado adicionando a pesquisa
         * rápida também na lista de `disclaimers` a aplicando uma nova busca com a concatenação.
         *
         * Por exemplo, com os seguintes filtros aplicados:
         *   - filtro avançado: `{ name: 'Mike', age: '12' }`
         *   - filtro rápido: `{ search: 'paper' }`
         *
         * A requisição dos dados na API ficará com os parâmetros:
         * ```
         * page=1&pageSize=10&name=Mike&age=12&search=paper
         * ```
         *
         * @default `false`
         */
        _this.concatFilters = false;
        return _this;
    }
    Object.defineProperty(PoPageDynamicTableComponent.prototype, "actions", {
        get: function () {
            return this._actions;
        },
        /**
         * @optional
         *
         * @description
         *
         * Ações da página e da tabela.
         */
        set: function (value) {
            this._actions = value && typeof value === 'object' && Object.keys(value).length > 0 ? value : {};
            this.setPageActions(this.actions);
            this.setRemoveAllAction();
            this.setTableActions(this.actions);
        },
        enumerable: true,
        configurable: true
    });
    PoPageDynamicTableComponent.prototype.ngOnInit = function () {
        this.loadDataFromAPI();
    };
    PoPageDynamicTableComponent.prototype.ngOnDestroy = function () {
        this.subscriptions.unsubscribe();
    };
    PoPageDynamicTableComponent.prototype.onAdvancedSearch = function (filter) {
        this.subscriptions.add(this.loadData(__assign({ page: 1 }, filter)).subscribe());
        this.params = filter;
        if (this.keepFilters) {
            this.updateFilterValue(filter);
        }
    };
    PoPageDynamicTableComponent.prototype.onChangeDisclaimers = function (disclaimers) {
        var filter = {};
        disclaimers.forEach(function (disclaimer) {
            filter[disclaimer.property] = disclaimer.value;
        });
        this.onAdvancedSearch(filter);
    };
    PoPageDynamicTableComponent.prototype.onQuickSearch = function (termTypedInQuickSearch) {
        var quickSearchParam = termTypedInQuickSearch ? { search: termTypedInQuickSearch } : {};
        this.params = this.concatFilters ? __assign(__assign({}, this.params), quickSearchParam) : __assign({}, quickSearchParam);
        this.subscriptions.add(this.loadData(termTypedInQuickSearch ? __assign({ page: 1 }, this.params) : undefined).subscribe());
    };
    PoPageDynamicTableComponent.prototype.onSort = function (sortedColumn) {
        this.sortedColumn = sortedColumn;
    };
    PoPageDynamicTableComponent.prototype.showMore = function () {
        this.subscriptions.add(this.loadData(__assign({ page: ++this.page }, this.params)).subscribe());
    };
    Object.defineProperty(PoPageDynamicTableComponent.prototype, "hasActionRemoveAll", {
        get: function () {
            return !!this.actions.removeAll;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageDynamicTableComponent.prototype, "pageActions", {
        get: function () {
            return __spread(this._pageActions);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageDynamicTableComponent.prototype, "tableActions", {
        get: function () {
            return this._tableActions;
        },
        enumerable: true,
        configurable: true
    });
    PoPageDynamicTableComponent.prototype.confirmRemove = function (actionRemove, actionBeforeRemove, item) {
        var confirmOptions = {
            title: this.literals.confirmRemoveTitle,
            message: this.literals.confirmRemoveMessage,
            confirm: this.remove.bind(this, item, actionRemove, actionBeforeRemove)
        };
        this.poDialogService.confirm(confirmOptions);
    };
    PoPageDynamicTableComponent.prototype.confirmRemoveAll = function (actionRemoveAll, actionBeforeRemoveAll) {
        var confirmOptions = {
            title: this.literals.confirmRemoveAllTitle,
            message: this.literals.confirmRemoveAllMessage,
            confirm: this.removeAll.bind(this, actionRemoveAll, actionBeforeRemoveAll)
        };
        this.poDialogService.confirm(confirmOptions);
    };
    PoPageDynamicTableComponent.prototype.formatUniqueKey = function (item) {
        var keys = mapObjectByProperties(item, this.keys);
        return valuesFromObject(keys).join('|');
    };
    PoPageDynamicTableComponent.prototype.getOrderParam = function (sortedColumn) {
        if (sortedColumn === void 0) { sortedColumn = { type: undefined }; }
        var column = sortedColumn.column, type = sortedColumn.type;
        if (!column) {
            return {};
        }
        if (type === PoTableColumnSortType.Descending) {
            return { order: "-" + column.property };
        }
        return { order: "" + column.property };
    };
    PoPageDynamicTableComponent.prototype.loadData = function (params) {
        var _this = this;
        if (params === void 0) { params = {}; }
        if (!this.serviceApi) {
            this.poNotification.error(this.literals.loadDataErrorNotification);
            return EMPTY;
        }
        var orderParam = this.getOrderParam(this.sortedColumn);
        var defaultParams = { page: 1, pageSize: 10 };
        var fullParams = __assign(__assign(__assign({}, defaultParams), params), orderParam);
        return this.poPageDynamicService.getResources(fullParams).pipe(tap(function (response) {
            _this.items = fullParams.page === 1 ? response.items : __spread(_this.items, response.items);
            _this.page = fullParams.page;
            _this.hasNext = response.hasNext;
        }));
    };
    PoPageDynamicTableComponent.prototype.getMetadata = function (serviceApiFromRoute, onLoad) {
        var _this = this;
        if (serviceApiFromRoute) {
            return this.poPageDynamicService.getMetadata().pipe(tap(function (response) {
                _this.autoRouter = response.autoRouter || _this.autoRouter;
                _this.actions = response.actions || _this.actions;
                _this.breadcrumb = response.breadcrumb || _this.breadcrumb;
                _this.fields = response.fields || _this.fields;
                _this.title = response.title || _this.title;
            }), switchMap(function () { return _this.loadOptionsOnInitialize(onLoad); }));
        }
        return this.loadOptionsOnInitialize(onLoad);
    };
    // @todo Validar rotas na mão pois se existir uma rota '**' o catch do navigation não funciona.
    PoPageDynamicTableComponent.prototype.navigateTo = function (route, forceStopAutoRouter) {
        var _this = this;
        if (forceStopAutoRouter === void 0) { forceStopAutoRouter = false; }
        this.router.navigate([route.url || route.path], { queryParams: route.params }).catch(function () {
            if (forceStopAutoRouter || !_this.autoRouter) {
                return;
            }
            _this.router.config.unshift({
                path: route.path,
                component: route.component,
                data: { serviceApi: _this.serviceApi, autoRouter: true }
            });
            _this.navigateTo(route, true);
        });
    };
    PoPageDynamicTableComponent.prototype.openDetail = function (action, item) {
        var _this = this;
        var id = this.formatUniqueKey(item);
        this.subscriptions.add(this.poPageDynamicTableActionsService
            .beforeDetail(this.actions.beforeDetail, id, item)
            .subscribe(function (beforeDetailResult) {
            return _this.executeDetail(action, beforeDetailResult, id, item);
        }));
    };
    PoPageDynamicTableComponent.prototype.executeDetail = function (action, beforeDetailResult, id, item) {
        var before = beforeDetailResult !== null && beforeDetailResult !== void 0 ? beforeDetailResult : {};
        var allowAction = typeof before.allowAction === 'boolean' ? before.allowAction : true;
        var newUrl = before.newUrl;
        if (allowAction && action) {
            if (newUrl) {
                var path = this.getPathFromNewUrl(newUrl, id);
                return this.navigateTo({ path: path });
            }
            if (typeof action === 'string') {
                var url = this.resolveUrl(item, action);
                this.navigateTo({ path: action, url: url, component: PoPageDynamicDetailComponent });
            }
            else {
                action(id, item);
            }
        }
    };
    PoPageDynamicTableComponent.prototype.getPathFromNewUrl = function (newUrl, id) {
        if (newUrl.includes(':id')) {
            return newUrl.replace(/:id/g, id);
        }
        return newUrl;
    };
    PoPageDynamicTableComponent.prototype.openDuplicate = function (actionDuplicate, item) {
        var _this = this;
        var id = this.formatUniqueKey(item);
        var duplicates = removeKeysProperties(this.keys, mapObjectByProperties(item, this.duplicates));
        this.subscriptions.add(this.poPageDynamicTableActionsService
            .beforeDuplicate(this.actions.beforeDuplicate, id, duplicates)
            .subscribe(function (beforeDuplicateResult) {
            return _this.executeDuplicate(actionDuplicate, beforeDuplicateResult, duplicates);
        }));
    };
    PoPageDynamicTableComponent.prototype.executeDuplicate = function (actionDuplicate, beforeDuplicateResult, duplicates) {
        var _a;
        var before = beforeDuplicateResult !== null && beforeDuplicateResult !== void 0 ? beforeDuplicateResult : {};
        var allowAction = typeof before.allowAction === 'boolean' ? before.allowAction : true;
        var beforeDuplicateResource = before.resource;
        var newAction = (_a = before.newUrl) !== null && _a !== void 0 ? _a : actionDuplicate;
        if (allowAction && actionDuplicate) {
            if (typeof beforeDuplicateResource === 'object' && beforeDuplicateResource !== null) {
                duplicates = removeKeysProperties(this.keys, beforeDuplicateResource);
            }
            if (typeof newAction === 'string') {
                return this.navigateTo({ path: newAction, params: { duplicate: JSON.stringify(duplicates) } });
            }
            return newAction(duplicates);
        }
    };
    PoPageDynamicTableComponent.prototype.openEdit = function (actionEdit, item) {
        var _this = this;
        var id = this.formatUniqueKey(item);
        this.subscriptions.add(this.poPageDynamicTableActionsService
            .beforeEdit(this.actions.beforeEdit, id, item)
            .pipe(switchMap(function (beforeEditResult) {
            return _this.executeEditAction(actionEdit, beforeEditResult, item, id);
        }))
            .subscribe());
    };
    PoPageDynamicTableComponent.prototype.executeEditAction = function (action, beforeEditResult, item, id) {
        var _a, _b;
        var newEditAction = (_a = beforeEditResult === null || beforeEditResult === void 0 ? void 0 : beforeEditResult.newUrl) !== null && _a !== void 0 ? _a : action;
        var allowAction = (_b = beforeEditResult === null || beforeEditResult === void 0 ? void 0 : beforeEditResult.allowAction) !== null && _b !== void 0 ? _b : true;
        if (!allowAction) {
            return EMPTY;
        }
        if (typeof newEditAction === 'string') {
            this.openEditUrl(newEditAction, item);
        }
        else {
            var updatedItem = newEditAction(id, item);
            if (typeof updatedItem === 'object' && updatedItem !== null) {
                this.modifyUITableItem(item, removeKeysProperties(this.keys, updatedItem));
            }
        }
        return EMPTY;
    };
    PoPageDynamicTableComponent.prototype.openEditUrl = function (path, item) {
        var url = this.resolveUrl(item, path);
        this.navigateTo({ path: path, url: url });
    };
    PoPageDynamicTableComponent.prototype.modifyUITableItem = function (currentItem, newItemValue) {
        var tableItem = this.items.findIndex(function (item) { return item === currentItem; });
        this.items[tableItem] = __assign(__assign({}, currentItem), newItemValue);
    };
    PoPageDynamicTableComponent.prototype.openNew = function (actionNew) {
        var _this = this;
        this.subscriptions.add(this.poPageDynamicTableActionsService
            .beforeNew(this.actions.beforeNew)
            .subscribe(function (beforeNewResult) { return _this.executeNew(actionNew, beforeNewResult); }));
    };
    PoPageDynamicTableComponent.prototype.executeNew = function (actionNew, beforeNewResult) {
        var before = beforeNewResult !== null && beforeNewResult !== void 0 ? beforeNewResult : {};
        var allowAction = typeof before.allowAction === 'boolean' ? before.allowAction : true;
        var newUrl = before.newUrl;
        if (allowAction && actionNew) {
            if (newUrl) {
                return this.navigateTo({ path: newUrl });
            }
            if (typeof actionNew === 'string') {
                return this.navigateTo({ path: actionNew });
            }
            return actionNew();
        }
    };
    /**
     * Caso exista mais de um identificador, será concatenado com '|'.
     *
     * Ex: { id: 1, company: 'po' }
     *
     * Para o endpoint /resources/:id será executada a url /resources/1|po
     */
    PoPageDynamicTableComponent.prototype.remove = function (item, actionRemove, actionBeforeRemove) {
        var _this = this;
        var uniqueKey = this.formatUniqueKey(item);
        this.subscriptions.add(this.poPageDynamicTableActionsService
            .beforeRemove(actionBeforeRemove, uniqueKey, item)
            .pipe(switchMap(function (beforeRemove) {
            return _this.deleteAction(item, actionRemove, beforeRemove);
        }))
            .subscribe());
    };
    PoPageDynamicTableComponent.prototype.deleteAction = function (item, actionRemove, beforeRemove) {
        var _this = this;
        var _a = beforeRemove || {}, allowAction = _a.allowAction, newUrl = _a.newUrl;
        var allow = allowAction !== null && allowAction !== void 0 ? allowAction : true;
        if (allow) {
            var uniqueKey = this.formatUniqueKey(item);
            var resourceToRemoveKey_1 = this.returnResourcesKeys([item]);
            if (typeof actionRemove === 'boolean' || newUrl) {
                return this.poPageDynamicService
                    .deleteResource(uniqueKey, newUrl)
                    .pipe(map(function () { return _this.removeFromUI(resourceToRemoveKey_1, _this.literals.removeSuccessNotification); }));
            }
            return of(actionRemove(uniqueKey, item)).pipe(tap(function (remove) {
                var removeItem = remove !== null && remove !== void 0 ? remove : false;
                _this.removeFromUI(resourceToRemoveKey_1, _this.literals.removeSuccessNotification, removeItem);
            }));
        }
        return of({});
    };
    PoPageDynamicTableComponent.prototype.removeFromUI = function (items, message, remove) {
        if (remove === void 0) { remove = true; }
        if (remove === true && (items === null || items === void 0 ? void 0 : items.length)) {
            this.removeLocalItems(items);
            this.poNotification.success(message);
        }
    };
    PoPageDynamicTableComponent.prototype.removeAll = function (actionRemoveAll, actionBeforeRemoveAll) {
        var _this = this;
        var originalResourcesKeys = this.getSelectedItemsKeysToRemove();
        this.subscriptions.add(this.poPageDynamicTableActionsService
            .beforeRemoveAll(actionBeforeRemoveAll, originalResourcesKeys)
            .pipe(switchMap(function (beforeRemove) {
            return _this.deleteAllAction(actionRemoveAll, beforeRemove, originalResourcesKeys);
        }))
            .subscribe());
    };
    PoPageDynamicTableComponent.prototype.getSelectedItemsKeysToRemove = function () {
        var resources = this.items.filter(function (item) { return item.$selected; });
        if (resources.length === 0) {
            return;
        }
        return this.returnResourcesKeys(resources);
    };
    PoPageDynamicTableComponent.prototype.returnResourcesKeys = function (resources) {
        return mapArrayByProperties(resources, this.keys);
    };
    PoPageDynamicTableComponent.prototype.deleteAllAction = function (actionRemoveAll, beforeRemoveAll, originalResources) {
        var _this = this;
        var _a = beforeRemoveAll !== null && beforeRemoveAll !== void 0 ? beforeRemoveAll : {}, allowAction = _a.allowAction, newUrl = _a.newUrl, resources = _a.resources;
        var allow = allowAction !== null && allowAction !== void 0 ? allowAction : true;
        var resourcestoDelete = resources !== null && resources !== void 0 ? resources : originalResources;
        if (allow && Array.isArray(resourcestoDelete)) {
            if (typeof actionRemoveAll === 'boolean' || newUrl) {
                return this.poPageDynamicService.deleteResources(resourcestoDelete, newUrl).pipe(tap(function () {
                    _this.removeFromUI(resourcestoDelete, _this.literals.removeAllSuccessNotification);
                }));
            }
            return of(actionRemoveAll(resourcestoDelete)).pipe(tap(function (removeItems) { return _this.removeFromUI(removeItems, _this.literals.removeSuccessNotification); }));
        }
        return of({});
    };
    PoPageDynamicTableComponent.prototype.removeLocalItems = function (itemsKeysToRemove) {
        var _this = this;
        if (itemsKeysToRemove === void 0) { itemsKeysToRemove = []; }
        if (itemsKeysToRemove.length) {
            this.items = this.items.filter(function (item) {
                var itemKey = _this.formatUniqueKey(item);
                return !itemsKeysToRemove.find(function (itemKeyToRemove) { return valuesFromObject(itemKeyToRemove).join('|') === itemKey; });
            });
        }
    };
    PoPageDynamicTableComponent.prototype.resolveUrl = function (item, path) {
        var uniqueKey = this.formatUniqueKey(item);
        return path.replace(/:id/g, uniqueKey);
    };
    PoPageDynamicTableComponent.prototype.setPageActions = function (actions) {
        if (actions) {
            this._pageActions = [
                { label: this.literals.pageAction, action: this.openNew.bind(this, actions.new), disabled: !this._actions.new }
            ];
        }
    };
    PoPageDynamicTableComponent.prototype.setRemoveAllAction = function () {
        var action = this._actions;
        if (this.showRemove(action.removeAll)) {
            this._pageActions.push({
                label: this.literals.pageActionRemoveAll,
                action: this.confirmRemoveAll.bind(this, action.removeAll, action.beforeRemoveAll),
                disabled: this.disableRemoveAll.bind(this)
            });
        }
    };
    PoPageDynamicTableComponent.prototype.disableRemoveAll = function () {
        return !this.getSelectedItemsKeysToRemove();
    };
    PoPageDynamicTableComponent.prototype.setTableActions = function (actions) {
        if (actions) {
            var visibleRemove = this.showRemove(actions.remove);
            this._tableActions = [
                {
                    action: this.openDetail.bind(this, actions.detail),
                    label: this.literals.tableActionView,
                    visible: !!this._actions.detail
                },
                {
                    action: this.openEdit.bind(this, actions.edit),
                    label: this.literals.tableActionEdit,
                    visible: !!this._actions.edit
                },
                {
                    action: this.openDuplicate.bind(this, actions.duplicate),
                    label: this.literals.tableActionDuplicate,
                    visible: !!this._actions.duplicate
                },
                {
                    action: this.confirmRemove.bind(this, actions.remove, actions.beforeRemove),
                    label: this.literals.tableActionDelete,
                    separator: true,
                    type: 'danger',
                    visible: visibleRemove
                }
            ];
        }
    };
    PoPageDynamicTableComponent.prototype.loadDataFromAPI = function () {
        var _a = this.activatedRoute.snapshot.data, serviceApiFromRoute = _a.serviceApi, serviceMetadataApi = _a.serviceMetadataApi, serviceLoadApi = _a.serviceLoadApi;
        var onLoad = serviceLoadApi || this.onLoad;
        this.serviceApi = serviceApiFromRoute || this.serviceApi;
        this.poPageDynamicService.configServiceApi({ endpoint: this.serviceApi, metadata: serviceMetadataApi });
        var metadata$ = this.getMetadata(serviceApiFromRoute, onLoad);
        var data$ = this.loadData();
        var initialFilters = this.getInitialValuesFromFilter();
        if (Object.keys(initialFilters).length) {
            this.subscriptions.add(metadata$.subscribe());
        }
        else {
            this.subscriptions.add(concat(metadata$, data$).subscribe());
        }
    };
    PoPageDynamicTableComponent.prototype.getInitialValuesFromFilter = function () {
        var initialFilters = this.filters.reduce(function (result, item) {
            var _a;
            return Object.assign(result, (_a = {}, _a[item.property] = item.initValue, _a));
        }, {});
        Object.keys(initialFilters).forEach(function (key) {
            if (!initialFilters[key]) {
                delete initialFilters[key];
            }
        });
        return initialFilters;
    };
    PoPageDynamicTableComponent.prototype.loadOptionsOnInitialize = function (onLoad) {
        var _this = this;
        if (onLoad) {
            return this.getPoDynamicPageOptions(onLoad).pipe(tap(function (responsePoOption) {
                return _this.poPageCustomizationService.changeOriginalOptionsToNewOptions(_this, responsePoOption);
            }));
        }
        return EMPTY;
    };
    PoPageDynamicTableComponent.prototype.getPoDynamicPageOptions = function (onLoad) {
        var originalOption = {
            fields: this.fields,
            actions: this.actions,
            breadcrumb: this.breadcrumb,
            title: this.title,
            keepFilters: this.keepFilters,
            concatFilters: this.concatFilters
        };
        var pageOptionSchema = {
            schema: [
                {
                    nameProp: 'fields',
                    merge: true,
                    keyForMerge: 'property'
                },
                {
                    nameProp: 'actions',
                    merge: true
                },
                {
                    nameProp: 'breadcrumb'
                },
                {
                    nameProp: 'title'
                },
                {
                    nameProp: 'keepFilters'
                },
                {
                    nameProp: 'concatFilters'
                }
            ]
        };
        return this.poPageCustomizationService.getCustomOptions(onLoad, originalOption, pageOptionSchema);
    };
    PoPageDynamicTableComponent.prototype.showRemove = function (actionRemove) {
        var action = actionRemove !== null && actionRemove !== void 0 ? actionRemove : false;
        if (typeof action === 'boolean') {
            return action;
        }
        return true;
    };
    PoPageDynamicTableComponent.prototype.updateFilterValue = function (filter) {
        return this.fields.map(function (item) {
            if (filter.hasOwnProperty(item.property)) {
                item.initValue = filter[item.property];
            }
        });
    };
    PoPageDynamicTableComponent.ctorParameters = function () { return [
        { type: Router },
        { type: ActivatedRoute },
        { type: PoDialogService },
        { type: PoNotificationService },
        { type: PoPageDynamicService },
        { type: PoPageCustomizationService },
        { type: PoPageDynamicTableActionsService }
    ]; };
    __decorate([
        Input('p-load'),
        __metadata("design:type", Object)
    ], PoPageDynamicTableComponent.prototype, "onLoad", void 0);
    __decorate([
        Input('p-actions'),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], PoPageDynamicTableComponent.prototype, "actions", null);
    __decorate([
        InputBoolean(),
        Input('p-keep-filters'),
        __metadata("design:type", Boolean)
    ], PoPageDynamicTableComponent.prototype, "keepFilters", void 0);
    __decorate([
        InputBoolean(),
        Input('p-concat-filters'),
        __metadata("design:type", Boolean)
    ], PoPageDynamicTableComponent.prototype, "concatFilters", void 0);
    PoPageDynamicTableComponent = __decorate([
        Component({
            selector: 'po-page-dynamic-table',
            template: "<po-page-dynamic-search\n  [p-actions]=\"pageActions\"\n  [p-breadcrumb]=\"breadcrumb\"\n  [p-filters]=\"filters\"\n  [p-keep-filters]=\"keepFilters\"\n  [p-concat-filters]=\"concatFilters\"\n  [p-title]=\"title\"\n  (p-advanced-search)=\"onAdvancedSearch($event)\"\n  (p-change-disclaimers)=\"onChangeDisclaimers($event)\"\n  (p-quick-search)=\"onQuickSearch($event)\"\n>\n  <po-table\n    p-sort=\"true\"\n    [p-actions]=\"tableActions\"\n    [p-checkbox]=\"hasActionRemoveAll\"\n    [p-columns]=\"columns\"\n    [p-items]=\"items\"\n    [p-show-more-disabled]=\"!hasNext\"\n    (p-show-more)=\"showMore()\"\n    (p-sort-by)=\"onSort($event)\"\n  >\n  </po-table>\n</po-page-dynamic-search>\n",
            providers: [PoPageDynamicService]
        }),
        __metadata("design:paramtypes", [Router,
            ActivatedRoute,
            PoDialogService,
            PoNotificationService,
            PoPageDynamicService,
            PoPageCustomizationService,
            PoPageDynamicTableActionsService])
    ], PoPageDynamicTableComponent);
    return PoPageDynamicTableComponent;
}(PoPageDynamicListBaseComponent));

/**
 * @description
 *
 * Módulo do template do po-page-dynamic-table.
 */
var PoPageDynamicTableModule = /** @class */ (function () {
    function PoPageDynamicTableModule() {
    }
    PoPageDynamicTableModule = __decorate([
        NgModule({
            imports: [
                CommonModule,
                FormsModule,
                RouterModule,
                PoTableModule,
                PoPageDynamicSearchModule,
                PoPageCustomizationModule,
                PoPageDynamicModule
            ],
            declarations: [PoPageDynamicTableComponent],
            exports: [PoPageDynamicTableComponent]
        })
    ], PoPageDynamicTableModule);
    return PoPageDynamicTableModule;
}());

var PoPageJobSchedulerInternal = /** @class */ (function () {
    function PoPageJobSchedulerInternal() {
        this.periodicity = 'single';
        this.firstExecution = new Date();
        this.firstExecutionHour = this.getCurrentHour(this.firstExecution);
        this.recurrent = true;
    }
    PoPageJobSchedulerInternal.prototype.getCurrentHour = function (date) {
        var hours = date.getHours() < 10 ? '0' + date.getHours() : date.getHours();
        var minutes = date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes();
        return hours + ":" + minutes;
    };
    return PoPageJobSchedulerInternal;
}());

var PoPageJobSchedulerService = /** @class */ (function () {
    function PoPageJobSchedulerService(http) {
        this.http = http;
        this.endpoint = '/';
        this.headers = new HttpHeaders({
            'X-PO-SCREEN-LOCK': 'true'
        });
    }
    PoPageJobSchedulerService.prototype.configServiceApi = function (config) {
        if (config === void 0) { config = {}; }
        this.endpoint = config.endpoint;
    };
    // Cria um recurso
    PoPageJobSchedulerService.prototype.createResource = function (resource) {
        var jobScheduler = this.convertToJobScheduler(resource);
        return this.http.post("" + this.endpoint, jobScheduler, { headers: this.headers });
    };
    PoPageJobSchedulerService.prototype.getHeadProcesses = function () {
        var headers = { 'X-PO-No-Error': 'true' };
        return this.http.head(this.endpoint + "/processes", { headers: headers });
    };
    // Busca parametros pelo processo id
    PoPageJobSchedulerService.prototype.getParametersByProcess = function (processId) {
        return this.http
            .get(this.endpoint + "/processes/" + processId + "/parameters", { headers: this.headers })
            .pipe(map(function (resource) { return resource.items; }));
    };
    // Busca um único recurso
    PoPageJobSchedulerService.prototype.getProcess = function (id) {
        return this.http.get(this.endpoint + "/processes/" + id, { headers: this.headers });
    };
    // Busca uma lista de processos
    PoPageJobSchedulerService.prototype.getProcesses = function (params) {
        if (params === void 0) { params = {}; }
        return this.http.get(this.endpoint + "/processes", { params: params });
    };
    // Busca um único recurso
    PoPageJobSchedulerService.prototype.getResource = function (id) {
        var _this = this;
        return this.http
            .get(this.endpoint + "/" + id, { headers: this.headers })
            .pipe(map(function (resource) { return _this.convertToJobSchedulerInternal(resource); }));
    };
    // Atualiza um recurso
    PoPageJobSchedulerService.prototype.updateResource = function (id, resource) {
        var jobScheduler = this.convertToJobScheduler(resource);
        return this.http.put(this.endpoint + "/" + id, jobScheduler, { headers: this.headers });
    };
    PoPageJobSchedulerService.prototype.convertToJobScheduler = function (jobSchedulerInternal) {
        var jobScheduler = __assign({}, jobSchedulerInternal);
        if (jobSchedulerInternal.periodicity) {
            if (jobSchedulerInternal.periodicity === 'single') {
                jobScheduler.recurrent = false;
            }
            else {
                Object.assign(jobScheduler, this.convertToPeriodicity(jobSchedulerInternal));
            }
        }
        if (jobSchedulerInternal.firstExecutionHour) {
            jobScheduler.firstExecution = this.replaceHourFirstExecution(jobSchedulerInternal.firstExecution, jobSchedulerInternal.firstExecutionHour);
        }
        if (!Object.keys(this.returnValidExecutionParameter(jobScheduler.executionParameter)).length) {
            delete jobScheduler.executionParameter;
        }
        this.removeInvalidKeys(jobScheduler);
        return jobScheduler;
    };
    PoPageJobSchedulerService.prototype.convertToJobSchedulerInternal = function (jobScheduler) {
        if (jobScheduler === void 0) { jobScheduler = {}; }
        var jobSchedulerInternal = __assign({}, jobScheduler);
        if (jobScheduler.firstExecution) {
            jobSchedulerInternal.firstExecutionHour = this.getHourFirstExecution(jobScheduler.firstExecution);
        }
        Object.assign(jobSchedulerInternal, this.convertToPeriodicityInternal(jobScheduler));
        this.removeInvalidKeys(jobSchedulerInternal, ['weekly', 'monthly', 'daily']);
        return jobSchedulerInternal;
    };
    PoPageJobSchedulerService.prototype.convertToPeriodicity = function (value) {
        var newValue = {};
        var valuePeriodicity = value.periodicity;
        if (valuePeriodicity) {
            newValue[valuePeriodicity] = {};
            if (valuePeriodicity === 'monthly') {
                newValue[valuePeriodicity].day = value.dayOfMonth ? parseInt(value.dayOfMonth, 10) : 0;
            }
            else if (valuePeriodicity === 'weekly') {
                newValue[valuePeriodicity].daysOfWeek = value.daysOfWeek;
            }
            newValue[valuePeriodicity].hour = value.hour ? parseInt(value.hour.split(':')[0], 10) : 0;
            newValue[valuePeriodicity].minute = value.hour ? parseInt(value.hour.split(':')[1], 10) : 0;
        }
        return newValue;
    };
    PoPageJobSchedulerService.prototype.convertToPeriodicityInternal = function (value) {
        if (value === void 0) { value = {}; }
        if (value.monthly) {
            return {
                periodicity: 'monthly',
                hour: addZero(value.monthly.hour) + ":" + addZero(value.monthly.minute),
                dayOfMonth: value.monthly.day
            };
        }
        else if (value.daily) {
            return {
                periodicity: 'daily',
                hour: addZero(value.daily.hour) + ":" + addZero(value.daily.minute)
            };
        }
        else if (value.weekly) {
            return {
                periodicity: 'weekly',
                hour: addZero(value.weekly.hour) + ":" + addZero(value.weekly.minute),
                daysOfWeek: __spread(value.weekly.daysOfWeek)
            };
        }
        else {
            return {
                periodicity: 'single'
            };
        }
    };
    PoPageJobSchedulerService.prototype.getCurrentHour = function (date) {
        var hours = addZero(date.getHours());
        var minutes = addZero(date.getMinutes());
        return hours + ":" + minutes;
    };
    PoPageJobSchedulerService.prototype.getHourFirstExecution = function (firstExecutionDate) {
        return this.getCurrentHour(new Date(firstExecutionDate));
    };
    PoPageJobSchedulerService.prototype.removeInvalidKeys = function (value, keys) {
        var invalidKeys = keys || [
            'periodicity',
            'hour',
            'minute',
            'day',
            'daysOfWeek',
            'dayOfMonth',
            'firstExecutionHour'
        ];
        Object.keys(value).forEach(function (key) {
            if (invalidKeys.includes(key)) {
                delete value[key];
            }
        });
    };
    PoPageJobSchedulerService.prototype.replaceHourFirstExecution = function (date, time) {
        var firstExecutionDate = new Date(date);
        var timeSplited = time.split(':');
        var hours = parseInt(timeSplited[0], 10);
        var minutes = parseInt(timeSplited[1], 10);
        firstExecutionDate.setHours(hours, minutes);
        return convertDateToISOExtended(firstExecutionDate);
    };
    PoPageJobSchedulerService.prototype.returnValidExecutionParameter = function (parameter) {
        var newParameter = __assign({}, parameter);
        for (var key in newParameter) {
            if (newParameter.hasOwnProperty(key) && newParameter[key] === undefined) {
                delete newParameter[key];
            }
        }
        return newParameter;
    };
    PoPageJobSchedulerService.ctorParameters = function () { return [
        { type: HttpClient }
    ]; };
    PoPageJobSchedulerService = __decorate([
        Injectable(),
        __metadata("design:paramtypes", [HttpClient])
    ], PoPageJobSchedulerService);
    return PoPageJobSchedulerService;
}());

/**
 * @description
 *
 * O `po-page-job-scheduler` é uma página para criação e atualização de agendamentos da execução de processos (Job Scheduler),
 * como por exemplo: a geração da folha de pagamento dos funcionários.
 *
 * Para utilizar esta página, basta informar o serviço (endpoint) para consumo,
 * sem a necessidade de criar componentes e tratamentos dos dados.
 *
 * Veja mais sobre os padrões utilizados nas requisições no [Guia de implementação de APIs](guides/api).
 */
var PoPageJobSchedulerBaseComponent = /** @class */ (function () {
    function PoPageJobSchedulerBaseComponent(poPageJobSchedulerService) {
        this.poPageJobSchedulerService = poPageJobSchedulerService;
        this._subscription = new Subscription();
        /** Objeto com as propriedades do breadcrumb. */
        this.breadcrumb = { items: [] };
        this.model = new PoPageJobSchedulerInternal();
    }
    PoPageJobSchedulerBaseComponent.prototype.ngOnDestroy = function () {
        this._subscription.unsubscribe();
    };
    PoPageJobSchedulerBaseComponent.prototype.loadData = function (id) {
        var _this = this;
        if (!id) {
            this.model = new PoPageJobSchedulerInternal();
            return;
        }
        this._subscription.add(this.poPageJobSchedulerService.getResource(id).subscribe(function (response) {
            _this.model = response;
        }, function () {
            _this.model = new PoPageJobSchedulerInternal();
        }));
    };
    PoPageJobSchedulerBaseComponent.prototype.markAsDirtyInvalidControls = function (controls) {
        for (var key in controls) {
            if (controls.hasOwnProperty(key)) {
                var control = controls[key];
                if (control.invalid) {
                    control.markAsDirty();
                }
            }
        }
    };
    PoPageJobSchedulerBaseComponent.ctorParameters = function () { return [
        { type: PoPageJobSchedulerService }
    ]; };
    __decorate([
        Input('p-breadcrumb'),
        __metadata("design:type", Object)
    ], PoPageJobSchedulerBaseComponent.prototype, "breadcrumb", void 0);
    __decorate([
        Input('p-service-api'),
        __metadata("design:type", String)
    ], PoPageJobSchedulerBaseComponent.prototype, "serviceApi", void 0);
    __decorate([
        Input('p-title'),
        __metadata("design:type", String)
    ], PoPageJobSchedulerBaseComponent.prototype, "title", void 0);
    PoPageJobSchedulerBaseComponent = __decorate([
        Directive(),
        __metadata("design:paramtypes", [PoPageJobSchedulerService])
    ], PoPageJobSchedulerBaseComponent);
    return PoPageJobSchedulerBaseComponent;
}());

var poPageJobSchedulerLiteralsDefault = {
    en: {
        at: 'at',
        back: 'Back',
        next: 'Next',
        periodicity: 'Periodicity',
        execution: 'Execution',
        process: 'Process',
        enterProcess: 'Enter a process',
        recurrent: 'Recurrent',
        single: 'Single',
        daily: 'Daily',
        weekly: 'Weekly',
        monthly: 'Monthly',
        scheduling: 'Scheduling',
        parameterization: 'Parameterization',
        conclude: 'Conclude',
        firstExecution: 'First Execution',
        hour: 'Hour',
        day: 'Day',
        weekDays: 'Week days',
        sunday: 'Sunday',
        monday: 'Monday',
        tuesday: 'Tuesday',
        wednesday: 'Wednesday',
        thursday: 'Thursday',
        friday: 'Friday',
        saturday: 'Saturday',
        parameters: 'Parameters',
        yes: 'Yes',
        no: 'No',
        notReported: 'Not reported',
        periodicityData: 'Periodicity data',
        confirmation: 'Confirmation',
        confirmSaveMessage: 'Are you sure you want to complete this schedule?',
        confirmUpdateMessage: 'Are you sure you want to update this schedule?',
        saveNotificationSuccessUpdate: 'Successfully updated scheduling',
        saveNotificationSuccessSave: 'Successfully saved scheduling',
        parametersNotFound: 'Parameters not found.'
    },
    es: {
        at: 'a las',
        back: 'Volver',
        next: 'Avanzar',
        periodicity: 'Periodicidad',
        execution: 'Ejecución',
        process: 'Proceso',
        enterProcess: 'Informe un proceso',
        recurrent: 'Recurrente',
        single: 'Única',
        daily: 'Diaria',
        weekly: 'Semanal',
        monthly: 'Mensual',
        scheduling: 'Programación',
        parameterization: 'Parametrización',
        conclude: 'Completar',
        firstExecution: 'Primera ejecución',
        hour: 'Horario',
        day: 'Día',
        weekDays: 'Dias de la semana',
        sunday: 'Domingo',
        monday: 'Lunes',
        tuesday: 'Martes',
        wednesday: 'Miércoles',
        thursday: 'Jueves',
        friday: 'Viernes',
        saturday: 'Sábado',
        parameters: 'Parámetros',
        yes: 'Sí',
        no: 'No',
        notReported: 'No informado',
        periodicityData: 'Dados da periodicidade',
        confirmation: 'Confirmación',
        confirmSaveMessage: '¿Está seguro de que desea completar esta programación de proceso?',
        confirmUpdateMessage: '¿Está seguro de que desea cambiar esta programación de proceso?',
        saveNotificationSuccessUpdate: 'Programación de proceso actualizada con éxito.',
        saveNotificationSuccessSave: 'Programación de proceso salvo con éxito.',
        parametersNotFound: 'No se encontraron parámetros.'
    },
    pt: {
        at: 'às',
        back: 'Voltar',
        next: 'Avançar',
        periodicity: 'Periodicidade',
        execution: 'Execução',
        process: 'Processo',
        enterProcess: 'Informe um processo',
        recurrent: 'Recorrente',
        single: 'Única',
        daily: 'Diária',
        weekly: 'Semanal',
        monthly: 'Mensal',
        scheduling: 'Agendamento',
        parameterization: 'Parametrização',
        conclude: 'Concluir',
        firstExecution: 'Primeira execução',
        hour: 'Horário',
        day: 'Dia',
        weekDays: 'Dias de semana',
        sunday: 'Domingo',
        monday: 'Segunda-feira',
        tuesday: 'Terça-feira',
        wednesday: 'Quarta-feira',
        thursday: 'Quinta-feira',
        friday: 'Sexta-feira',
        saturday: 'Sábado',
        parameters: 'Parâmetros',
        yes: 'Sim',
        no: 'Não',
        notReported: 'Não informado',
        periodicityData: 'Dados da periodicidade',
        confirmation: 'Confirmação',
        confirmSaveMessage: 'Tem certeza que deseja concluir este agendamento de processo?',
        confirmUpdateMessage: 'Tem certeza que deseja alterar este agendamento de processo?',
        saveNotificationSuccessUpdate: 'Agendamento de processo atualizado com sucesso.',
        saveNotificationSuccessSave: 'Agendamento de processo salvo com sucesso.',
        parametersNotFound: 'Parâmetros não foram encontrados.'
    }
};

var PoPageJobSchedulerLookupService = /** @class */ (function () {
    function PoPageJobSchedulerLookupService(poPageJobSchedulerService) {
        this.poPageJobSchedulerService = poPageJobSchedulerService;
    }
    PoPageJobSchedulerLookupService.prototype.getFilteredData = function (search, page, pageSize) {
        var params = { page: page, pageSize: pageSize, search: search };
        return this.poPageJobSchedulerService.getProcesses(params);
    };
    PoPageJobSchedulerLookupService.prototype.getObjectByValue = function (processId) {
        return this.poPageJobSchedulerService.getProcess(processId);
    };
    PoPageJobSchedulerLookupService.ctorParameters = function () { return [
        { type: PoPageJobSchedulerService }
    ]; };
    PoPageJobSchedulerLookupService = __decorate([
        Injectable(),
        __metadata("design:paramtypes", [PoPageJobSchedulerService])
    ], PoPageJobSchedulerLookupService);
    return PoPageJobSchedulerLookupService;
}());

/**
 * @docsExtends PoPageJobSchedulerBaseComponent
 *
 * @example
 *
 * <example name="po-page-job-scheduler-background-process" title="PO Page Job Scheduler - Background Process">
 *  <file name="sample-po-page-job-scheduler-background-process/sample-po-page-job-scheduler-background-process.component.html"> </file>
 *  <file name="sample-po-page-job-scheduler-background-process/sample-po-page-job-scheduler-background-process.component.ts"> </file>
 * </example>
 *
 */
var PoPageJobSchedulerComponent = /** @class */ (function (_super) {
    __extends(PoPageJobSchedulerComponent, _super);
    function PoPageJobSchedulerComponent(poPageDynamicLookupService, activatedRoute, poDialogService, poNotification, poPageJobSchedulerService) {
        var _this = _super.call(this, poPageJobSchedulerService) || this;
        _this.poPageDynamicLookupService = poPageDynamicLookupService;
        _this.activatedRoute = activatedRoute;
        _this.poDialogService = poDialogService;
        _this.poNotification = poNotification;
        _this.poPageJobSchedulerService = poPageJobSchedulerService;
        _this.isEdit = false;
        _this.literals = __assign(__assign({}, poPageJobSchedulerLiteralsDefault[poLocaleDefault]), poPageJobSchedulerLiteralsDefault[browserLanguage()]);
        _this.parameters = [];
        _this.step = 1;
        _this.backPageAction = {
            label: _this.literals.back,
            action: _this.nextStepOperation.bind(_this, 'back'),
            disabled: _this.isDisabledBack.bind(_this)
        };
        _this.concludePageActions = [
            {
                label: _this.literals.conclude,
                action: _this.confirmJobScheduler.bind(_this)
            },
            __assign({}, _this.backPageAction)
        ];
        _this.nextPageActions = [
            {
                label: _this.literals.next,
                action: _this.nextStepOperation.bind(_this, 'next'),
                disabled: _this.isDisabledAdvance.bind(_this)
            },
            __assign({}, _this.backPageAction)
        ];
        _this.jobSchedulerActions = __spread(_this.nextPageActions);
        _this.steps = [
            { label: _this.literals.scheduling },
            { label: _this.literals.parameterization },
            { label: _this.literals.conclude }
        ];
        return _this;
    }
    Object.defineProperty(PoPageJobSchedulerComponent.prototype, "stepperOrientation", {
        get: function () {
            return window.innerWidth > 481 && window.innerWidth < 960 ? 'horizontal' : 'vertical';
        },
        enumerable: true,
        configurable: true
    });
    PoPageJobSchedulerComponent.prototype.ngOnInit = function () {
        var paramId = this.activatedRoute.snapshot.params['id'];
        this.isEdit = !!paramId;
        this.poPageJobSchedulerService.configServiceApi({ endpoint: this.serviceApi });
        this.loadData(paramId);
    };
    PoPageJobSchedulerComponent.prototype.changePageActionsBySteps = function (currentStep, nextStep) {
        var stepsLength = this.steps.length;
        if (nextStep === stepsLength) {
            this.jobSchedulerActions = __spread(this.concludePageActions);
        }
        else if (currentStep === stepsLength && nextStep < currentStep) {
            this.jobSchedulerActions = __spread(this.nextPageActions);
        }
    };
    PoPageJobSchedulerComponent.prototype.nextStep = function (stepNumber) {
        if (stepNumber > 1 && this.schedulerExecution.form.invalid) {
            this.markAsDirtyInvalidControls(this.schedulerExecution.form.controls);
            return;
        }
        if (stepNumber > 2 &&
            this.schedulerParameters &&
            this.schedulerParameters.form &&
            this.schedulerParameters.form.invalid) {
            this.markAsDirtyInvalidControls(this.schedulerParameters.form.controls);
            return;
        }
        this.setModelRecurrent();
        var model = JSON.parse(JSON.stringify(this.model));
        if (stepNumber === this.steps.length) {
            this.publicValues = this.hidesSecretValues(model);
        }
        this.changePageActionsBySteps(this.step, stepNumber);
        var steps = this.steps[this.step - 1];
        this.step = stepNumber;
        if (steps) {
            steps.status = PoStepperStatus.Done;
        }
    };
    PoPageJobSchedulerComponent.prototype.onChangeProcess = function (process) {
        if (process.existAPI && process.processId) {
            this.getParametersByProcess(process.processId);
            if (!this.isEdit) {
                this.model.executionParameter = {};
            }
            return;
        }
    };
    PoPageJobSchedulerComponent.prototype.confirmJobScheduler = function () {
        var _this = this;
        var paramId = this.activatedRoute.snapshot.params['id'];
        var confirmMessage = paramId ? this.literals.confirmUpdateMessage : this.literals.confirmSaveMessage;
        this.poDialogService.confirm({
            title: this.literals.confirmation,
            message: confirmMessage,
            confirm: function () {
                var model = __assign({}, _this.model);
                _this.save(model, paramId);
            }
        });
    };
    PoPageJobSchedulerComponent.prototype.emitSuccessMessage = function (msgSuccess, saveOperation) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, saveOperation.toPromise()];
                    case 1:
                        _a.sent();
                        this.poNotification.success(msgSuccess);
                        this.resetJobSchedulerForm();
                        return [2 /*return*/];
                }
            });
        });
    };
    PoPageJobSchedulerComponent.prototype.getParametersByProcess = function (process) {
        var _this = this;
        this.poPageJobSchedulerService.getParametersByProcess(process).subscribe(function (parameters) {
            _this.parameters = parameters;
        });
    };
    PoPageJobSchedulerComponent.prototype.hidesSecretValues = function (model) {
        var _this = this;
        var hiddenSecretValue = '**********';
        this.parameters.forEach(function (parameter) {
            if (_this.isSecretParameter(model, parameter)) {
                model.executionParameter[parameter.property] = hiddenSecretValue;
            }
        });
        return model;
    };
    PoPageJobSchedulerComponent.prototype.isDisabledAdvance = function () {
        var _a, _b;
        var componentByStep = {
            1: this.schedulerExecution,
            2: this.schedulerParameters
        };
        return ((_b = (_a = componentByStep[this.step]) === null || _a === void 0 ? void 0 : _a.form) === null || _b === void 0 ? void 0 : _b.invalid) || false;
    };
    PoPageJobSchedulerComponent.prototype.isDisabledBack = function () {
        return this.step === 1;
    };
    PoPageJobSchedulerComponent.prototype.isSecretParameter = function (model, parameter) {
        return (model.executionParameter &&
            parameter.hasOwnProperty('secret') &&
            parameter['secret'] === true &&
            model.executionParameter.hasOwnProperty(parameter.property));
    };
    PoPageJobSchedulerComponent.prototype.nextStepOperation = function (operation) {
        var stepNumber = operation === 'back' ? this.step - 1 : this.step + 1;
        this.nextStep(stepNumber);
    };
    PoPageJobSchedulerComponent.prototype.resetJobSchedulerForm = function () {
        var _this = this;
        this.schedulerExecution.form.reset();
        // radiogroup não estava atribuindo novo valor, fica vermelho sem o timetout.
        setTimeout(function () {
            _this.model = new PoPageJobSchedulerInternal();
            _this.step = 1;
            _this.steps.forEach(function (step) {
                step.status = PoStepperStatus.Default;
            });
            _this.jobSchedulerActions = __spread(_this.nextPageActions);
        });
    };
    PoPageJobSchedulerComponent.prototype.save = function (model, paramId) {
        var saveOperation = paramId
            ? this.poPageJobSchedulerService.updateResource(paramId, model)
            : this.poPageJobSchedulerService.createResource(model);
        var msgSuccess = paramId
            ? this.literals.saveNotificationSuccessUpdate
            : this.literals.saveNotificationSuccessSave;
        this.emitSuccessMessage(msgSuccess, saveOperation);
    };
    PoPageJobSchedulerComponent.prototype.setModelRecurrent = function () {
        this.model.recurrent = this.model.periodicity === 'single' ? false : this.model.recurrent;
    };
    PoPageJobSchedulerComponent.ctorParameters = function () { return [
        { type: PoPageJobSchedulerLookupService },
        { type: ActivatedRoute },
        { type: PoDialogService },
        { type: PoNotificationService },
        { type: PoPageJobSchedulerService }
    ]; };
    __decorate([
        ViewChild('schedulerExecution', { static: true }),
        __metadata("design:type", Object)
    ], PoPageJobSchedulerComponent.prototype, "schedulerExecution", void 0);
    __decorate([
        ViewChild('schedulerParameters'),
        __metadata("design:type", Object)
    ], PoPageJobSchedulerComponent.prototype, "schedulerParameters", void 0);
    PoPageJobSchedulerComponent = __decorate([
        Component({
            selector: 'po-page-job-scheduler',
            template: "<po-page-default [p-actions]=\"jobSchedulerActions\" [p-breadcrumb]=\"breadcrumb\" [p-title]=\"title\">\n  <div class=\"po-row\">\n    <po-stepper\n      class=\"po-lg-3 po-xl-2\"\n      p-sequential=\"true\"\n      [p-orientation]=\"stepperOrientation\"\n      [p-step]=\"step\"\n      [p-steps]=\"steps\"\n      (p-change-step)=\"nextStep($event)\"\n    >\n    </po-stepper>\n\n    <po-container class=\"po-lg-8 po-xl-6\">\n      <form #formScheduler=\"ngForm\">\n        <div class=\"po-row\">\n          <po-page-job-scheduler-execution\n            [hidden]=\"step !== 1\"\n            #schedulerExecution\n            class=\"po-md-12\"\n            [p-is-edit]=\"isEdit\"\n            [p-literals]=\"literals\"\n            [p-value]=\"model\"\n            (p-change-process)=\"onChangeProcess($event)\"\n          >\n          </po-page-job-scheduler-execution>\n\n          <po-page-job-scheduler-parameters\n            *ngIf=\"step === 2\"\n            #schedulerParameters\n            class=\"po-md-12\"\n            [p-literals]=\"literals\"\n            [p-parameters]=\"parameters || []\"\n            [(p-value)]=\"model.executionParameter\"\n          >\n          </po-page-job-scheduler-parameters>\n\n          <po-page-job-scheduler-summary\n            *ngIf=\"step === 3\"\n            class=\"po-md-12\"\n            [p-literals]=\"literals\"\n            [p-parameters]=\"parameters\"\n            [p-value]=\"publicValues\"\n          >\n          </po-page-job-scheduler-summary>\n        </div>\n      </form>\n    </po-container>\n  </div>\n</po-page-default>\n",
            encapsulation: ViewEncapsulation.None,
            styles: ["\n      po-container .po-container {\n        overflow-y: unset;\n      }\n    "]
        }),
        __metadata("design:paramtypes", [PoPageJobSchedulerLookupService,
            ActivatedRoute,
            PoDialogService,
            PoNotificationService,
            PoPageJobSchedulerService])
    ], PoPageJobSchedulerComponent);
    return PoPageJobSchedulerComponent;
}(PoPageJobSchedulerBaseComponent));

var PoPageJobSchedulerExecutionComponent = /** @class */ (function () {
    function PoPageJobSchedulerExecutionComponent(poPageJobSchedulerService, poPageJobSchedulerLookup) {
        this.poPageJobSchedulerService = poPageJobSchedulerService;
        this.poPageJobSchedulerLookup = poPageJobSchedulerLookup;
        this._value = {};
        this.dayPattern = '^(3[0-1]|[0-2][0-9]|[1-9]|0[1-9])$';
        this.existProcessAPI = true;
        this.minDateFirstExecution = new Date();
        this.periodicityOptions = [];
        this.timePattern = '^(2[0-3]|[01][0-9]):?([0-5][0-9])$';
        this.weekDays = [];
        this.isEdit = false;
        this.literals = {};
        this.changeProcess = new EventEmitter();
    }
    Object.defineProperty(PoPageJobSchedulerExecutionComponent.prototype, "value", {
        get: function () {
            return this._value;
        },
        set: function (value) {
            this._value = value && isTypeof(value, 'object') ? value : {};
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageJobSchedulerExecutionComponent.prototype, "startDateFirstExecution", {
        get: function () {
            return this.isEdit ? undefined : this.minDateFirstExecution;
        },
        enumerable: true,
        configurable: true
    });
    PoPageJobSchedulerExecutionComponent.prototype.ngAfterViewInit = function () {
        var _this = this;
        setTimeout(function () {
            _this.subscribeProcessIdValueChanges();
        });
    };
    PoPageJobSchedulerExecutionComponent.prototype.ngOnInit = function () {
        this.periodicityTemplates = {
            daily: this.dailyTemplate,
            monthly: this.monthlyTemplate,
            weekly: this.weeklyTempalte
        };
        this.checkExistsProcessesAPI();
        this.periodicityOptions = this.getPeriodicityOptions();
        this.weekDays = this.getWeekDays();
    };
    PoPageJobSchedulerExecutionComponent.prototype.checkExistsProcessesAPI = function () {
        var _this = this;
        this.poPageJobSchedulerService.getHeadProcesses().subscribe(undefined, function (error) {
            _this.existProcessAPI = false;
        });
    };
    PoPageJobSchedulerExecutionComponent.prototype.getPeriodicityOptions = function () {
        return [
            { label: this.literals.single, value: 'single' },
            { label: this.literals.daily, value: 'daily' },
            { label: this.literals.weekly, value: 'weekly' },
            { label: this.literals.monthly, value: 'monthly' }
        ];
    };
    PoPageJobSchedulerExecutionComponent.prototype.getWeekDays = function () {
        return [
            { label: this.literals.sunday, value: 'Sunday' },
            { label: this.literals.monday, value: 'Monday' },
            { label: this.literals.tuesday, value: 'Tuesday' },
            { label: this.literals.wednesday, value: 'Wednesday' },
            { label: this.literals.thursday, value: 'Thursday' },
            { label: this.literals.friday, value: 'Friday' },
            { label: this.literals.saturday, value: 'Saturday' }
        ];
    };
    PoPageJobSchedulerExecutionComponent.prototype.subscribeProcessIdValueChanges = function () {
        var _this = this;
        this.form.controls['processID'].valueChanges.subscribe(function (processId) {
            _this.changeProcess.emit({ processId: processId, existAPI: _this.existProcessAPI });
        });
    };
    PoPageJobSchedulerExecutionComponent.ctorParameters = function () { return [
        { type: PoPageJobSchedulerService },
        { type: PoPageJobSchedulerLookupService }
    ]; };
    __decorate([
        ViewChild('formExecution', { static: true }),
        __metadata("design:type", NgForm)
    ], PoPageJobSchedulerExecutionComponent.prototype, "form", void 0);
    __decorate([
        ViewChild('dailyTemplate', { static: true }),
        __metadata("design:type", Object)
    ], PoPageJobSchedulerExecutionComponent.prototype, "dailyTemplate", void 0);
    __decorate([
        ViewChild('monthlyTemplate', { static: true }),
        __metadata("design:type", Object)
    ], PoPageJobSchedulerExecutionComponent.prototype, "monthlyTemplate", void 0);
    __decorate([
        ViewChild('weeklyTemplate', { static: true }),
        __metadata("design:type", Object)
    ], PoPageJobSchedulerExecutionComponent.prototype, "weeklyTempalte", void 0);
    __decorate([
        Input('p-is-edit'),
        __metadata("design:type", Boolean)
    ], PoPageJobSchedulerExecutionComponent.prototype, "isEdit", void 0);
    __decorate([
        Input('p-literals'),
        __metadata("design:type", Object)
    ], PoPageJobSchedulerExecutionComponent.prototype, "literals", void 0);
    __decorate([
        Input('p-value'),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], PoPageJobSchedulerExecutionComponent.prototype, "value", null);
    __decorate([
        Output('p-change-process'),
        __metadata("design:type", EventEmitter)
    ], PoPageJobSchedulerExecutionComponent.prototype, "changeProcess", void 0);
    PoPageJobSchedulerExecutionComponent = __decorate([
        Component({
            selector: 'po-page-job-scheduler-execution',
            template: "<form #formExecution=\"ngForm\">\n  <div class=\"po-row\">\n    <ng-container *ngIf=\"existProcessAPI; then lookupProcessesID; else inputProcessesID\"></ng-container>\n  </div>\n\n  <div class=\"po-row\">\n    <po-divider class=\"po-md-12\" [p-label]=\"literals.firstExecution\"></po-divider>\n\n    <po-datepicker\n      class=\"po-md-4\"\n      name=\"firstExecution\"\n      [(ngModel)]=\"value.firstExecution\"\n      p-placeholder=\"dd/mm/aaaa\"\n      p-required\n      [p-disabled]=\"isEdit\"\n      [p-label]=\"literals.day\"\n      [p-min-date]=\"startDateFirstExecution\"\n    >\n    </po-datepicker>\n\n    <po-input\n      class=\"po-md-2\"\n      name=\"firstExecutionHour\"\n      [(ngModel)]=\"value.firstExecutionHour\"\n      p-mask=\"99:99\"\n      p-mask-format-model\n      p-placeholder=\"HH:mm\"\n      p-required\n      [p-disabled]=\"isEdit\"\n      [p-label]=\"literals.hour\"\n      [p-pattern]=\"timePattern\"\n    >\n    </po-input>\n  </div>\n\n  <hr />\n\n  <div class=\"po-row\">\n    <po-radio-group\n      class=\"po-sm-12\"\n      name=\"periodicity\"\n      [(ngModel)]=\"value.periodicity\"\n      p-columns=\"4\"\n      p-required\n      [p-label]=\"literals.periodicity\"\n      [p-options]=\"periodicityOptions\"\n    >\n    </po-radio-group>\n\n    <ng-container *ngIf=\"value.periodicity !== 'single'\">\n      <po-divider class=\"po-md-12\" [p-label]=\"literals.periodicityData\"> </po-divider>\n\n      <div class=\"po-row\">\n        <ng-container *ngTemplateOutlet=\"periodicityTemplates[value.periodicity]\"> </ng-container>\n      </div>\n\n      <div class=\"po-row\">\n        <po-switch\n          class=\"po-md-3\"\n          name=\"recurrent\"\n          [(ngModel)]=\"value.recurrent\"\n          [p-label]=\"literals.recurrent\"\n          [p-label-off]=\"literals.no\"\n          [p-label-on]=\"literals.yes\"\n        >\n        </po-switch>\n      </div>\n    </ng-container>\n  </div>\n\n  <ng-template #lookupProcessesID>\n    <po-lookup\n      class=\"po-md-12\"\n      name=\"processID\"\n      [(ngModel)]=\"value.processID\"\n      p-field-label=\"description\"\n      p-field-value=\"processID\"\n      p-required\n      [p-disabled]=\"isEdit\"\n      [p-filter-service]=\"poPageJobSchedulerLookup\"\n      [p-label]=\"literals.process\"\n      [p-placeholder]=\"literals.enterProcess\"\n    >\n    </po-lookup>\n  </ng-template>\n\n  <ng-template #inputProcessesID>\n    <po-input\n      class=\"po-md-12\"\n      name=\"processID\"\n      [(ngModel)]=\"value.processID\"\n      p-required\n      [p-disabled]=\"isEdit\"\n      [p-label]=\"literals.process\"\n      [p-placeholder]=\"literals.enterProcess\"\n    >\n    </po-input>\n  </ng-template>\n\n  <ng-template #dailyTemplate>\n    <ng-container *ngTemplateOutlet=\"inputHourTemplate\"> </ng-container>\n  </ng-template>\n\n  <ng-template #weeklyTemplate>\n    <div class=\"po-row\">\n      <ng-container *ngTemplateOutlet=\"inputHourTemplate\"> </ng-container>\n    </div>\n\n    <po-checkbox-group\n      class=\"po-md-12\"\n      name=\"daysOfWeek\"\n      [(ngModel)]=\"value.daysOfWeek\"\n      p-columns=\"4\"\n      p-required\n      [p-label]=\"literals.weekDays\"\n      [p-options]=\"weekDays\"\n    >\n    </po-checkbox-group>\n  </ng-template>\n\n  <ng-template #monthlyTemplate>\n    <po-number\n      class=\"po-md-3\"\n      name=\"dayOfMonth\"\n      [(ngModel)]=\"value.dayOfMonth\"\n      p-required\n      [p-error-pattern]=\"'Dia inv\u00E1lido'\"\n      [p-label]=\"literals.day\"\n      [p-max]=\"31\"\n      [p-pattern]=\"dayPattern\"\n    >\n    </po-number>\n\n    <ng-container *ngTemplateOutlet=\"inputHourTemplate\"> </ng-container>\n  </ng-template>\n\n  <ng-template #inputHourTemplate>\n    <po-input\n      class=\"po-md-2\"\n      name=\"hour\"\n      [(ngModel)]=\"value.hour\"\n      p-mask=\"99:99\"\n      p-mask-format-model\n      p-placeholder=\"HH:mm\"\n      p-required\n      [p-label]=\"literals.hour\"\n      [p-pattern]=\"timePattern\"\n    >\n    </po-input>\n  </ng-template>\n</form>\n"
        }),
        __metadata("design:paramtypes", [PoPageJobSchedulerService,
            PoPageJobSchedulerLookupService])
    ], PoPageJobSchedulerExecutionComponent);
    return PoPageJobSchedulerExecutionComponent;
}());

var PoPageJobSchedulerParametersComponent = /** @class */ (function () {
    function PoPageJobSchedulerParametersComponent() {
        this.literals = {};
        this.parameters = [];
        this.valueChange = new EventEmitter();
    }
    PoPageJobSchedulerParametersComponent.prototype.ngAfterViewInit = function () {
        var _this = this;
        if (this.form) {
            setTimeout(function () {
                _this.form.valueChanges.subscribe(function (value) {
                    _this.valueChange.emit(value);
                });
            });
        }
    };
    __decorate([
        ViewChild('parametersForm'),
        __metadata("design:type", NgForm)
    ], PoPageJobSchedulerParametersComponent.prototype, "form", void 0);
    __decorate([
        Input('p-literals'),
        __metadata("design:type", Object)
    ], PoPageJobSchedulerParametersComponent.prototype, "literals", void 0);
    __decorate([
        Input('p-parameters'),
        __metadata("design:type", Array)
    ], PoPageJobSchedulerParametersComponent.prototype, "parameters", void 0);
    __decorate([
        Input('p-value'),
        __metadata("design:type", Object)
    ], PoPageJobSchedulerParametersComponent.prototype, "value", void 0);
    __decorate([
        Output('p-valueChange'),
        __metadata("design:type", EventEmitter)
    ], PoPageJobSchedulerParametersComponent.prototype, "valueChange", void 0);
    PoPageJobSchedulerParametersComponent = __decorate([
        Component({
            selector: 'po-page-job-scheduler-parameters',
            template: "<ng-container *ngIf=\"parameters && parameters.length; then formFieldsTemplate; else parametersNotFoundTemplate\">\n</ng-container>\n\n<ng-template #parametersNotFoundTemplate>\n  <div class=\"po-text-center\">\n    <span class=\"po-icon po-icon-info\"></span>\n    <span class=\"po-font-text-large\">\n      {{ literals.parametersNotFound }}\n    </span>\n  </div>\n</ng-template>\n\n<ng-template #formFieldsTemplate>\n  <form #parametersForm=\"ngForm\">\n    <po-dynamic-form p-group-form [p-fields]=\"parameters\" [p-value]=\"value\"> </po-dynamic-form>\n  </form>\n</ng-template>\n"
        })
    ], PoPageJobSchedulerParametersComponent);
    return PoPageJobSchedulerParametersComponent;
}());

var PoPageJobSchedulerSummaryComponent = /** @class */ (function () {
    function PoPageJobSchedulerSummaryComponent(datePipe) {
        this.datePipe = datePipe;
        this.executionValue = '';
        this.firstExecutionValue = '';
        this.infoOrientation = PoInfoOrientation.Horizontal;
        this.periodicityValue = '';
        this.recurrentValue = '';
        this.literals = {};
        this.parameters = [];
        this.value = {};
    }
    PoPageJobSchedulerSummaryComponent.prototype.ngOnInit = function () {
        var _a = this.value, periodicity = _a.periodicity, hour = _a.hour, dayOfMonth = _a.dayOfMonth, daysOfWeek = _a.daysOfWeek, recurrent = _a.recurrent, firstExecution = _a.firstExecution, firstExecutionHour = _a.firstExecutionHour;
        this.periodicityValue = this.getPeriodicityLabel(periodicity);
        this.executionValue = this.getExecutionValue(periodicity, hour, daysOfWeek, dayOfMonth);
        this.firstExecutionValue = this.getFirstExecutionLabel(firstExecution, firstExecutionHour);
        this.recurrentValue = this.getRecurrentValue(recurrent);
    };
    PoPageJobSchedulerSummaryComponent.prototype.getExecutionValue = function (periodicity, hour, daysOfWeek, dayOfMonth) {
        switch (periodicity) {
            case 'daily':
                return this.getHourLabel(hour);
            case 'monthly':
                return this.getMonthlyLabelExecution(dayOfMonth, hour);
            case 'weekly':
                return this.getWeeklyLabelExecution(daysOfWeek, hour);
            default:
                return this.literals.notReported;
        }
    };
    PoPageJobSchedulerSummaryComponent.prototype.getFirstExecutionLabel = function (firstExecution, firstExecutionHour) {
        if (firstExecution) {
            var date = this.datePipe.transform(firstExecution, 'dd/MM/yyyy', '-0200');
            return date + " " + this.getHourLabel(firstExecutionHour);
        }
        else {
            return this.literals.notReported;
        }
    };
    PoPageJobSchedulerSummaryComponent.prototype.getHourLabel = function (hour) {
        return this.literals.at + " " + (hour || '00:00') + "h";
    };
    PoPageJobSchedulerSummaryComponent.prototype.getMonthlyLabelExecution = function (dayOfMonth, hour) {
        var hourLabel = this.getHourLabel(hour);
        return this.literals.day + " " + dayOfMonth + " " + hourLabel;
    };
    PoPageJobSchedulerSummaryComponent.prototype.getPeriodicityLabel = function (periodicity) {
        switch (periodicity) {
            case 'daily':
                return this.literals.daily;
            case 'monthly':
                return this.literals.monthly;
            case 'weekly':
                return this.literals.weekly;
            default:
                return this.literals.single;
        }
    };
    PoPageJobSchedulerSummaryComponent.prototype.getRecurrentValue = function (recurrent) {
        return recurrent ? this.literals.yes : this.literals.no;
    };
    PoPageJobSchedulerSummaryComponent.prototype.getSorterWeekDays = function () {
        return {
            'sunday': 0,
            'monday': 1,
            'tuesday': 2,
            'wednesday': 3,
            'thursday': 4,
            'friday': 5,
            'saturday': 6
        };
    };
    PoPageJobSchedulerSummaryComponent.prototype.getTranslateWeekDay = function (day) {
        var days = {
            Sunday: this.literals.sunday,
            Monday: this.literals.monday,
            Tuesday: this.literals.tuesday,
            Wednesday: this.literals.wednesday,
            Thursday: this.literals.thursday,
            Friday: this.literals.friday,
            Saturday: this.literals.saturday
        };
        return days[day] || '';
    };
    PoPageJobSchedulerSummaryComponent.prototype.getWeekDaysLabel = function (days) {
        var _this = this;
        if (days === void 0) { days = []; }
        var weekDaysSorted = this.sortWeekDays(days);
        return weekDaysSorted.map(function (day) { return _this.getTranslateWeekDay(day); }).join(', ');
    };
    PoPageJobSchedulerSummaryComponent.prototype.getWeeklyLabelExecution = function (daysOfWeek, hour) {
        if (daysOfWeek && Array.isArray(daysOfWeek)) {
            return this.getWeekDaysLabel(daysOfWeek) + " " + this.getHourLabel(hour);
        }
        else {
            return this.literals.notReported;
        }
    };
    PoPageJobSchedulerSummaryComponent.prototype.sortWeekDays = function (days) {
        if (days === void 0) { days = []; }
        var sorterWeekDays = this.getSorterWeekDays();
        return days.sort(function (a, b) {
            var currDay = a.toLowerCase();
            var nextDay = b.toLowerCase();
            return sorterWeekDays[currDay] > sorterWeekDays[nextDay] ? 1 : -1;
        });
    };
    PoPageJobSchedulerSummaryComponent.ctorParameters = function () { return [
        { type: DatePipe }
    ]; };
    __decorate([
        Input('p-literals'),
        __metadata("design:type", Object)
    ], PoPageJobSchedulerSummaryComponent.prototype, "literals", void 0);
    __decorate([
        Input('p-parameters'),
        __metadata("design:type", Array)
    ], PoPageJobSchedulerSummaryComponent.prototype, "parameters", void 0);
    __decorate([
        Input('p-value'),
        __metadata("design:type", Object)
    ], PoPageJobSchedulerSummaryComponent.prototype, "value", void 0);
    PoPageJobSchedulerSummaryComponent = __decorate([
        Component({
            selector: 'po-page-job-scheduler-summary',
            template: "<div class=\"po-md-12\">\n  <po-info [p-label]=\"literals.process\" [p-orientation]=\"infoOrientation\" [p-value]=\"value.processID\"> </po-info>\n\n  <po-info [p-label]=\"literals.periodicity\" [p-orientation]=\"infoOrientation\" [p-value]=\"periodicityValue\"> </po-info>\n\n  <po-info\n    *ngIf=\"value.periodicity !== 'single'\"\n    [p-label]=\"literals.execution\"\n    [p-orientation]=\"infoOrientation\"\n    [p-value]=\"executionValue\"\n  >\n  </po-info>\n\n  <po-info [p-label]=\"literals.recurrent\" [p-orientation]=\"infoOrientation\" [p-value]=\"recurrentValue\"> </po-info>\n\n  <po-info [p-label]=\"literals.firstExecution\" [p-orientation]=\"infoOrientation\" [p-value]=\"firstExecutionValue\">\n  </po-info>\n</div>\n\n<po-widget *ngIf=\"parameters && parameters.length\" class=\"po-pt-1 po-pb-1 po-md-12\" [p-title]=\"literals.parameters\">\n  <po-dynamic-view [p-fields]=\"parameters\" [p-value]=\"value.executionParameter\"> </po-dynamic-view>\n</po-widget>\n"
        }),
        __metadata("design:paramtypes", [DatePipe])
    ], PoPageJobSchedulerSummaryComponent);
    return PoPageJobSchedulerSummaryComponent;
}());

var PoPageJobSchedulerModule = /** @class */ (function () {
    function PoPageJobSchedulerModule() {
    }
    PoPageJobSchedulerModule = __decorate([
        NgModule({
            declarations: [
                PoPageJobSchedulerComponent,
                PoPageJobSchedulerExecutionComponent,
                PoPageJobSchedulerParametersComponent,
                PoPageJobSchedulerSummaryComponent
            ],
            exports: [PoPageJobSchedulerComponent],
            imports: [
                CommonModule,
                FormsModule,
                PoButtonModule,
                PoContainerModule,
                PoDialogModule,
                PoDividerModule,
                PoDynamicModule,
                PoFieldModule,
                PoInfoModule,
                PoPageModule,
                PoStepperModule,
                PoWidgetModule
            ],
            providers: [PoPageJobSchedulerService, PoPageJobSchedulerLookupService]
        })
    ], PoPageJobSchedulerModule);
    return PoPageJobSchedulerModule;
}());

/**
 * @usedBy PoPageLoginComponent
 *
 * @description
 *
 * *Enum* para definição do tipo de autenticação.
 */
var PoPageLoginAuthenticationType;
(function (PoPageLoginAuthenticationType) {
    /** Autenticação Basic */
    PoPageLoginAuthenticationType["Basic"] = "Basic";
    /** Autenticação Bearer */
    PoPageLoginAuthenticationType["Bearer"] = "Bearer";
})(PoPageLoginAuthenticationType || (PoPageLoginAuthenticationType = {}));

var PoPageLoginService = /** @class */ (function () {
    function PoPageLoginService(http) {
        this.http = http;
    }
    PoPageLoginService.prototype.onLogin = function (url, type, loginForm) {
        if (type === PoPageLoginAuthenticationType.Bearer) {
            loginForm.password = btoa(loginForm.password);
            return this.http.post(url, loginForm);
        }
        else {
            var user = "(" + loginForm.login + ":" + loginForm.password + ")";
            var headers = new HttpHeaders({
                'Authorization': type + " " + btoa(user)
            });
            delete loginForm.login;
            delete loginForm.password;
            return this.http.post(url, loginForm, { headers: headers });
        }
    };
    PoPageLoginService.ctorParameters = function () { return [
        { type: HttpClient }
    ]; };
    PoPageLoginService = __decorate([
        Injectable(),
        __metadata("design:paramtypes", [HttpClient])
    ], PoPageLoginService);
    return PoPageLoginService;
}());

var poPageLoginContentMaxLength = 40;
var poPageLoginLiteralsDefault = {
    en: {
        title: 'Welcome',
        loginErrorPattern: 'Invalid Login',
        loginHint: "Your login user was given to you at your first day.\n    If you don't have this information contact support",
        loginPlaceholder: 'Insert your e-mail',
        passwordErrorPattern: 'Invalid Password',
        passwordPlaceholder: 'Insert your password',
        customFieldErrorPattern: 'Invalid value',
        customFieldPlaceholder: 'Please enter a value',
        rememberUser: 'Automatic login',
        rememberUserHint: 'You can disable this option in system configuration',
        submitLabel: 'Enter',
        submittedLabel: 'Loading...',
        forgotPassword: 'Forgot your Password?',
        highlightInfo: '',
        registerUrl: 'New register',
        titlePopover: 'Oops!',
        forgotYourPassword: 'Forgot your password?',
        ifYouTryHarder: 'If you try ',
        attempts: '{0} more time(s) ',
        yourUserWillBeBlocked: 'without success your user will be blocked and you will be left 24 hours without being able to access :(',
        createANewPasswordNow: 'Better create a new password now! You will be able to log into the system right away.',
        iForgotMyPassword: 'I forgot my password'
    },
    es: {
        title: 'Bienvenido',
        loginErrorPattern: 'Login inválido',
        loginHint: "Su usuario ha sido entregado para usted en su primer d\u00EDa.\n    Si no tiene esta informaci\u00F3n, p\u00F3ngase en contacto con el soporte t\u00E9cnico",
        loginPlaceholder: 'Inserte su e-mail',
        passwordErrorPattern: 'Contraseña inválida',
        passwordPlaceholder: 'Inserte su contraseña',
        customFieldErrorPattern: 'Valor no válido.',
        customFieldPlaceholder: 'Por favor introduzca un valor',
        rememberUser: 'Inicio de sesión automáticamente',
        rememberUserHint: 'Puede deshabilitar esta opción en el menú del sistema.',
        submitLabel: 'Entrar',
        submittedLabel: 'Cargando...',
        forgotPassword: 'Olvidaste tu contraseña?',
        highlightInfo: '',
        registerUrl: 'Nuevo registro',
        titlePopover: 'Opa!',
        forgotYourPassword: 'Olvidaste tu contraseña?',
        ifYouTryHarder: 'Si intenta más ',
        attempts: '{0} vez/veces ',
        yourUserWillBeBlocked: 'sin éxito su usuario sera bloqueado y usted vás permanecer 24 horas sin poder acceder a :(',
        createANewPasswordNow: '¡Mejor crear una nueva contraseña ahora! Usted podrá entrar en el sistema inmediatamente después.',
        iForgotMyPassword: 'Olvide mi contraseña'
    },
    pt: {
        title: 'Bem-vindo',
        loginErrorPattern: 'Login inválido',
        loginHint: "Seu usu\u00E1rio foi entregue a voc\u00EA no seu primeiro dia.\n    Caso n\u00E3o tenha mais essa informa\u00E7\u00E3o contacte o suporte",
        loginPlaceholder: 'Insira seu e-mail',
        passwordErrorPattern: 'Senha inválida',
        passwordPlaceholder: 'Insira sua senha',
        customFieldErrorPattern: 'Valor inválido.',
        customFieldPlaceholder: 'Por favor insira um valor',
        rememberUser: 'Logar automaticamente',
        rememberUserHint: 'Você pode desabilitar essa opção no menu do sistema',
        submitLabel: 'Entrar',
        submittedLabel: 'Carregando...',
        forgotPassword: 'Esqueceu sua senha?',
        highlightInfo: '',
        registerUrl: 'Novo registro',
        titlePopover: 'Opa!',
        forgotYourPassword: 'Esqueceu sua senha?',
        ifYouTryHarder: 'Se tentar mais ',
        attempts: '{0} vez(es) ',
        yourUserWillBeBlocked: 'sem sucesso seu usuário será bloqueado e você fica 24 horas sem poder acessar :(',
        createANewPasswordNow: 'Melhor criar uma senha nova agora! Você vai poder entrar no sistema logo em seguida.',
        iForgotMyPassword: 'Esqueci minha senha'
    },
    ru: {
        title: 'Добро пожаловать!',
        loginErrorPattern: 'Неверный логин',
        loginHint: "\u0412\u0430\u0448 \u043B\u043E\u0433\u0438\u043D \u0431\u044B\u043B \u043F\u0440\u0435\u0434\u043E\u0441\u0442\u0430\u0432\u043B\u0435\u043D \u0432\u0430\u043C \u0432 \u043F\u0435\u0440\u0432\u044B\u0439 \u0434\u0435\u043D\u044C.\n    \u0415\u0441\u043B\u0438 \u0443 \u0432\u0430\u0441 \u043D\u0435\u0442 \u044D\u0442\u043E\u0439 \u0438\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u0438, \u043E\u0431\u0440\u0430\u0442\u0438\u0442\u0435\u0441\u044C \u0432 \u0441\u043B\u0443\u0436\u0431\u0443 \u043F\u043E\u0434\u0434\u0435\u0440\u0436\u043A\u0438",
        loginPlaceholder: 'Вставьте свой адрес электронной почты',
        passwordErrorPattern: 'Неверный пароль',
        passwordPlaceholder: 'Введите свой пароль',
        customFieldErrorPattern: 'Неверное значение.',
        customFieldPlaceholder: 'Пожалуйста, введите значение',
        rememberUser: 'Автоматический вход',
        rememberUserHint: 'Вы можете отключить эту опцию в конфигурации системы',
        submitLabel: 'Войти',
        submittedLabel: '3агрузка...',
        forgotPassword: 'Забыли пароль?',
        highlightInfo: '',
        registerUrl: 'Новый регистр',
        titlePopover: 'Ой!',
        forgotYourPassword: 'Забыли пароль?',
        ifYouTryHarder: 'Если вы безуспешно попытаетесь войти еще ',
        attempts: '{0} раз(а) ',
        yourUserWillBeBlocked: 'Ваш пользователь будет заблокирован, и Вы останетесь на 24 часа без возможности доступа :(',
        createANewPasswordNow: 'Лучше создайте новый пароль сейчас! Вы сможете сразу войти в систему.',
        iForgotMyPassword: 'Я забыл свой пароль'
    }
};
var poPageLoginLiteralIn = {
    en: 'in',
    es: 'en',
    pt: 'em',
    ru: 'в'
};
var poPageLoginLiteralTo = {
    en: 'to',
    es: 'al',
    pt: 'ao',
    ru: 'к'
};
/**
 * @description
 *
 * O componente `po-page-login` é utilizado como template para tela de login.
 * Com ele é possível definirmos valores para usuário, senha e definir ações para recuperação de senha e gravação de dados do usuário.
 * Também é possível inserir uma imagem em conjunto com um texto de destaque.
 *
 *
 * A propriedade `p-authentication-url` automatiza a rotina do componente e simplifica o processo para autenticação do usuário, bastando
 * definir uma url para requisição da autenticação. A flexibilidade e praticidade podem chegar a um nível em que o desenvolvimento
 * da aplicação no *client side* é desprovida de qualquer código-fonte relacionado à rotina de login de usuário.
 * Seu detalhamento para uso pode ser visto logo abaixo em *propriedades*.
 * Caso julgue necessário, pode-se também definir manualmente a rotina do componente.
 *
 *
 * Para que as imagens sejam exibidas corretamente, é necessário incluir o caminho delas ao projeto. Para isso, edite
 * o *assets* no arquivo **angular.json** da aplicação na seguinte ordem:
 * ```
 *   "assets": [
 *     "src/assets",
 *     "src/favicon.ico",
 *     {
 *       "glob": "**\/*",
 *       "input": "node_modules/@po-ui/style/images",
 *       "output": "assets/images"
 *     }
 *   ]
 * ```
 */
var PoPageLoginBaseComponent = /** @class */ (function () {
    function PoPageLoginBaseComponent(loginService, router) {
        this.loginService = loginService;
        this.router = router;
        this.allLoginErrors = [];
        this.allPasswordErrors = [];
        this.rememberUser = false;
        this.showExceededAttemptsWarning = false;
        this._authenticationType = PoPageLoginAuthenticationType.Basic;
        this._hideRememberUser = false;
        this._loading = false;
        this._loginErrors = [];
        this._passwordErrors = [];
        /**
         * Evento disparado quando o usuário alterar o input do campo login.
         *
         * Esse evento receberá como parâmetro uma variável do tipo `string` com o texto informado no campo.
         *
         * > Esta propriedade será ignorada se for definido valor para a propriedade `p-authentication-url`.
         */
        this.loginChange = new EventEmitter();
        /**
         * Evento disparado ao submeter o formulário de login (apertando `Enter` dentro dos campos ou pressionando o botão de confirmação).
         *
         * Esse evento receberá como parâmetro um objeto do tipo `PoPageLogin` com os dados informados no formulário.
         *
         * > Esta propriedade será ignorada se for definido valor para a propriedade `p-url-recovery`.
         *
         * > Para mais detalhes consulte a documentação sobre a interface `PoPageLogin` mais abaixo.
         */
        this.loginSubmit = new EventEmitter();
        /**
         * Evento disparado quando o usuário alterar o input do campo password.
         *
         * Esse evento receberá como parâmetro uma variável do tipo `string` com o texto informado no campo.
         *
         * > Esta propriedade será ignorada se for definido valor para a propriedade `p-authentication-url`.
         */
        this.passwordChange = new EventEmitter();
    }
    Object.defineProperty(PoPageLoginBaseComponent.prototype, "customField", {
        get: function () {
            return this._customField;
        },
        /**
         * @optional
         *
         * @description
         *
         * Ao informar um valor do tipo `string`, o mesmo será aplicado como a chave do campo customizado e utilizará
         * os valores padrões contidos na propriedade `literals` como `customFieldErrorPattern` e `customFieldPlaceholder`.
         *
         * Existe a possibilidade de informar um objeto que segue a definição da interface `PoPageLoginCustomField`, onde
         * através dos parâmetros enviados pode gerar um `po-input`, `po-combo` especificamente para serviços
         * ou `po-select` para valores fixos.
         *
         * Abaixo seguem os exemplos de cada tipo de campo.
         *
         * `po-input`:
         *
         * ```
         * {
         *   property: 'domain',
         *   value: 'jv01',
         *   placeholder: 'Enter your domain',
         *   pattern: '[a-z]',
         *   errorPattern: 'Invalid value'
         * }
         * ```
         *
         * `po-combo`:
         *
         * ```
         * {
         *   property: 'domain',
         *   value: 'jv01',
         *   placeholder: 'Enter your domain',
         *   url: 'https://po-ui.io/sample/api/comboOption/domains',
         *   fieldValue: 'nickname'
         * }
         * ```
         *
         * `po-select`:
         *
         * ```
         * {
         *   property: 'domain',
         *   value: 'jv01',
         *   placeholder: 'Enter your domain',
         *   options: [{label: 'Domain 1', value: '1'}, {label: 'Domain 2', value: '2'}]
         * }
         * ```
         *
         * Caso o customField possua options, url e fieldValue preenchidos, será priorizado o po-select
         * utilizando o options.
         *
         */
        set: function (value) {
            if (value) {
                if (isTypeof(value, 'string')) {
                    this.customFieldType = 'input';
                    this._customField = value;
                    this.customFieldObject = this.getDefaultCustomFieldObject(value);
                    return;
                }
                if (isTypeof(value, 'object') && !Array.isArray(value) && value['property']) {
                    this._customField = value;
                    this.customFieldObject = value;
                    if (!this.customFieldObject.options && !this.customFieldObject.url) {
                        this.customFieldType = 'input';
                    }
                    else {
                        this.customFieldType = this.customFieldObject.options ? 'select' : 'combo';
                    }
                    return;
                }
            }
            this._customField = undefined;
            this.customFieldObject = undefined;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageLoginBaseComponent.prototype, "contactEmail", {
        get: function () {
            return this._contactEmail;
        },
        /**
         * @optional
         *
         * @description
         *
         * Personaliza o e-mail que é exibido na mensagem de dica de login padrão para contato de suporte.
         */
        set: function (value) {
            this._contactEmail = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageLoginBaseComponent.prototype, "productName", {
        get: function () {
            return this._productName;
        },
        /**
         * @optional
         *
         * @description
         *
         * Valor customizado que sucede o título de boas-vindas.
         *
         * > Esta propriedade é sobreposta se `p-literals` contiver uma definição customizada para a literal `title`.
         *
         * > Veja mais sobre as literais na propriedade `p-literals`.
         *
         */
        set: function (value) {
            this._productName = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageLoginBaseComponent.prototype, "environment", {
        get: function () {
            return this._environment;
        },
        /**
         * @optional
         *
         * @description
         * Adiciona uma `tag` abaixo do título que especifica o ambiente que o usuário está fazendo o login.
         *
         * > Essa propriedade limita o texto em 40 caracteres.
         */
        set: function (environment) {
            if (environment && environment.length > poPageLoginContentMaxLength) {
                this._environment = environment.substring(0, poPageLoginContentMaxLength);
            }
            else {
                this._environment = environment;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageLoginBaseComponent.prototype, "exceededAttemptsWarning", {
        get: function () {
            return this._exceededAttemptsWarning;
        },
        /**
         * @optional
         *
         * @description
         * Exibe um aviso de bloqueio de acordo com a quantidade restante de tentativas.
         * O aviso será exibido somente se a quantidade for maior que zero.
         *
         * > Caso tenha algum valor atribuído para o atributo `p-authentication-url` e o retorno da requisição estiver atribuindo valor
         * para o `p-exceeded-attempts-warning`, o valor considerado será o do retorno da requisição.
         *
         * @default `0`
         */
        set: function (value) {
            this._exceededAttemptsWarning = convertToInt(value);
            this.showExceededAttemptsWarning = this.exceededAttemptsWarning > 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageLoginBaseComponent.prototype, "hideRememberUser", {
        get: function () {
            return this._hideRememberUser;
        },
        /**
         * @optional
         *
         * @description
         *
         * Esconde a função "Lembrar usuário" do formulário de login.
         *
         * Quando essa propriedade é setada com `true` a propriedade `rememberUser` enviada no evento `p-login-submit` será sempre
         * `false`.
         *
         * > Veja a propriedade `p-literals` para customizar a literal `rememberUser`.
         *
         * @default `false`
         */
        set: function (value) {
            this._hideRememberUser = value === '' ? true : convertToBoolean(value);
            if (this._hideRememberUser) {
                this.rememberUser = false;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageLoginBaseComponent.prototype, "literals", {
        get: function () {
            return this._literals;
        },
        /**
         * @optional
         *
         * @description
         *
         * Objeto com as literais usadas no `po-page-login`.
         *
         * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponíveis:
         *
         * ```
         *  const customLiterals: PoPageLoginLiterals = {
         *    attempts: '{0} vez(es) ',
         *    createANewPasswordNow: 'Melhor criar uma senha nova agora! Você vai poder entrar no sistema logo em seguida.',
         *    forgotPassword: 'Esqueceu sua senha?',
         *    forgotYourPassword: 'Esqueceu sua senha?',
         *    highlightInfo: '',
         *    iForgotMyPassword: 'Esqueci minha senha',
         *    ifYouTryHarder: 'Se tentar mais ',
         *    title: 'Seja bem-vindo',
         *    loginErrorPattern: 'Login obrigatório',
         *    loginHint: 'Caso não possua usuário entre em contato com o suporte',
         *    loginLabel: 'Insira seu usuário',
         *    loginPlaceholder: 'Insira seu usuário de acesso',
         *    passwordErrorPattern: 'Senha obrigatória',
         *    passwordLabel: 'Insira sua senha',
         *    passwordPlaceholder: 'Insira sua senha de acesso',
         *    customFieldErrorPattern: 'Campo customizado inválido',
         *    customFieldPlaceholder: 'Por favor insira um valor',
         *    registerUrl: 'Novo registro',
         *    rememberUser: 'Lembrar usuário',
         *    rememberUserHint: 'Esta opção pode ser desabilitada nas configurações do sistema',
         *    submitLabel: 'Acessar sistema',
         *    submittedLabel: 'Carregando...',
         *    titlePopover: 'Opa!',
         *    yourUserWillBeBlocked: 'sem sucesso seu usuário será bloqueado e você fica 24 horas sem poder acessar :('
         *  };
         * ```
         *
         * Ou passando apenas as literais que deseja customizar:
         *
         * ```
         *  const customLiterals: PoPageLoginLiterals = {
         *    loginPlaceholder: 'Insira seu usuário de acesso',
         *    passwordPlaceholder: 'Insira sua senha de acesso',
         *    submitLabel: 'Acessar sistema'
         *  };
         * ```
         *
         * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.
         *
         * ```
         * <po-page-login
         *   [p-literals]="customLiterals">
         * </po-page-login>
         * ```
         *
         *  > O objeto padrão de literais será traduzido de acordo com o idioma do browser (pt, en, es).
         *  > É também possível alternar o objeto padrão de literais através do seletor de idiomas localizado na parte inferior do template,
         * nesse caso, há também a opção do idioma russo.
         */
        set: function (value) {
            this._literals = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageLoginBaseComponent.prototype, "loading", {
        get: function () {
            return this._loading;
        },
        /**
         * @optional
         *
         * @description
         *
         * Habilita um estado de carregamento ao botão de *login*.
         *
         * > É necessário atribuir `true` à esta propriedade na função definida em `p-login-submit`.
         *
         * @default `false`
         */
        set: function (value) {
            this._loading = convertToBoolean(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageLoginBaseComponent.prototype, "login", {
        get: function () {
            return this._login;
        },
        /**
         * @optional
         *
         * @description
         *
         * Valor do modelo do campo de login.
         */
        set: function (value) {
            this._login = value;
            if (!this.authenticationUrl) {
                this.loginChange.emit(this._login);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageLoginBaseComponent.prototype, "loginErrors", {
        get: function () {
            return this._loginErrors;
        },
        /**
         * @optional
         *
         * @description
         *
         * Atributo que recebe uma lista de erros e exibe abaixo do campo de login.
         */
        set: function (value) {
            this._loginErrors = value || [];
            this.setLoginErrors(this._loginErrors);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageLoginBaseComponent.prototype, "passwordErrors", {
        get: function () {
            return this._passwordErrors;
        },
        /**
         * @optional
         *
         * @description
         *
         * Atributo que recebe uma lista de erros e exibe abaixo do campo de password.
         */
        set: function (value) {
            this._passwordErrors = value || [];
            this.setPasswordErrors(this._passwordErrors);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageLoginBaseComponent.prototype, "recovery", {
        get: function () {
            return this._recovery;
        },
        /**
         * @optional
         *
         * @description
         *
         * Exibe um link abaixo do formulário de login para que os usuários da aplicação façam a recuperação dos dados de autenticação.
         *
         * A propriedade aceita os seguintes tipos:
         *
         * - **String**: informe uma url externa ou uma rota válida;
         * - **Function**: pode-se customizar a ação. Para esta possilidade basta atribuir:
         * ```
         * <po-page-login>
         *   [recovery]="this.myRecovery.bind(this)">
         * </po-page-login>
         * ```
         *
         * - **PoPageLoginRecovery**: cria-se vínculo automático com o template **po-modal-password-recovery**.
         *   O objeto deve conter a **url** para requisição dos recursos e pode-se definir o **tipo** de modal para recuperação de senha,
         *   **email** para contato e **máscara** do campo de telefone.
         */
        set: function (value) {
            this._recovery = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageLoginBaseComponent.prototype, "registerUrl", {
        get: function () {
            return this._registerUrl;
        },
        /**
         * @optional
         *
         * @description
         *
         * Caso a aplicação tenha um link para novos cadastros, informe uma url externa ou uma rota válida, dessa
         * forma será exibido um link abaixo do formulário de login para os usuários da aplicação.
         *
         * Exemplos de valores válidos:
         * - **local**: `/home`
         * - **url externa**: `https://po-ui.io`
         *
         * > Veja a propriedade `p-literals` para customizar a literal `registerUrl`.
         */
        set: function (value) {
            this._registerUrl = isTypeof(value, 'string') ? value : undefined;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageLoginBaseComponent.prototype, "authenticationType", {
        get: function () {
            return this._authenticationType;
        },
        /**
         * @optional
         *
         * @description
         *
         * Atributo que recebe o tipo de esquema da autenticação, sendo suportados apenas os valores `Basic` e `Bearer`.
         *
         * > Caso o tipo definido seja `Basic`, o componente fará uma requisição `POST` contendo:
         *
         * ```
         * headers {
         *  Authorization: Basic base64(login:password)
         * }
         *
         * body {
         *  rememberUser: rememberUser
         * }
         * ```
         *
         * > Caso o tipo definido seja `Bearer`, o componente fará uma requisição `POST` contendo:
         *
         * ```
         * body {
         *  login: login,
         *  password: base64(password),
         *  rememberUser: rememberUser
         * }
         * ```
         *
         * @default `PoPageLoginAuthenticationType.Basic`
         */
        set: function (value) {
            this._authenticationType = Object.values(PoPageLoginAuthenticationType).includes(value)
                ? value
                : PoPageLoginAuthenticationType.Basic;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageLoginBaseComponent.prototype, "authenticationUrl", {
        get: function () {
            return this._authenticationUrl;
        },
        /**
         * @optional
         *
         * @description
         *
         * Endpoint usado pelo template para requisição do recurso. Quando preenchido, o método `p-login-submit` será ignorado e o
         * componente adquirirá automatização para o processo de autenticação.
         *
         * ### Processos
         * Ao digitar um valor válido no campo de login/password e pressionar **Enter**, o componente fará uma requisição `POST`
         * na url especificada nesta propriedade passando o objeto contendo o valor definido pelo usuário:
         *
         * ```
         * headers {
         *  Authorization: Basic base64(login:password)
         * }
         *
         * body {
         *  rememberUser: rememberUser
         * }
         * ```
         *
         * Em caso de **sucesso**, o objeto de retorno é armazenado no `sessionStorage` e o usuário é redirecionado para a página inicial da
         * aplicação `/`.
         *
         * ```
         * 200:
         *  {
         *    user: user
         *  }
         * ```
         *
         * Em caso de **erro** na autenticação, espera-se o seguinte retorno:
         *
         * ```
         * 400/401
         *  {
         *    code: 400/401,
         *    message: message,
         *    detailedMessage: detailedMessage,
         *    helpUrl?: helpUrl
         *  }
         * ```
         *
         * > Pode-se atribuir uma quantidade máxima de tentativas restantes (maxAttemptsRemaining) para o atributo `p-exceeded-attempts-warning`,
         * assim como os avisos relacionados aos campos login e password (loginWarnings, passwordWarnings) para os atributos `p-login-errors` e
         * `p-password-errors` conforme retorno abaixo:
         *
         * ```
         * 400
         *  {
         *    code: 400/401,
         *    message: message,
         *    detailedMessage: detailedMessage,
         *    helpUrl?: helpUrl,
         *    maxAttemptsRemaining?: maxAttemptsRemaining,
         *    loginWarnings?: [loginWarnings],
         *    passwordWarnings?: [passwordWarnings]
         *  }
         * ```
         *
         * > Caso o valor atribuído para `p-exceeded-attempts-warning` seja igual a 0(zero), poderá ser passado um valor para o
         * atributo `p-blocked-url` e o usuário será redirecionado para uma tela de bloqueio.
         *
         * *Processo finalizado.*
         *
         * _______________
         *
         * #### Praticidade
         * As informações do serviço de autenticação também podem ser transmitidas diretamente pelas configuraçãos de rota e, desta maneira,
         * dispensa-se qualquer menção e/ou importação do componente `po-page-login` no restante da aplicação. O exemplo abaixo exemplifica
         * a forma dinâmica com a qual o template de tela de login pode ser gerado ao navegar para rota `/login`, e também como ele se comunica
         * com o serviço para efetuação do processo de autenticação do usuário e solicitação de nova senha.
         * Basta definir nas configurações de rota:
         *
         *
         * ```
         *   import { PoPageLoginComponent, PoPageLoginAthenticationType } from '@po-ui/ng-templates';
         *
         *   ...
         *   const routes: Routes = [
         *     {
         *       path: 'login', component: PoPageLoginComponent, data: {
         *         serviceApi: 'https://po-ui.io/sample/api/users/authentication',
         *         environment: 'development',
         *         recovery: {
         *           url: 'https://po-ui.io/sample/api/users',
         *           type: PoModalPasswordRecoveryType.All,
         *           contactMail: 'dev.po@po-ui.com',
         *           phoneMask: '9-999-999-9999'
         *         },
         *         registerUrl: '/new-password',
         *         authenticationType: PoPageLoginAthenticationType.Basic
         *       }
         *     }
         *     ...
         *   ];
         *
         *   @NgModule({
         *     imports: [RouterModule.forRoot(routes)],
         *     exports: [RouterModule]
         *   })
         *   export class AppRoutingModule { }
         * ```
         *
         *
         * O metadado `serviceApi` deve ser a **url** para requisição dos recursos de autenticação, o `environment` alimenta a propriedade
         * `p-environment`, `recovery` é a interface `PoPageLoginRecovery` responsável pelas especificações contidas na modal de recuperação de
         * senha, `registerUrl` alimenta a propriedade `p-register-url` e `authenticationType` que define a propriedade `p-authentication-type`.
         *
         * > É essencial que siga a nomenclatura dos atributos exemplificados acima para sua efetiva funcionalidade.
         *
         */
        set: function (value) {
            this._authenticationUrl = isTypeof(value, 'string') ? value : undefined;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageLoginBaseComponent.prototype, "blockedUrl", {
        get: function () {
            return this._blockedUrl;
        },
        /**
         * @optional
         *
         * @description
         *
         * Caso o valor atribuído para `p-exceeded-attempts-warning` seja igual a 0(zero) e a aplicação tenha um link de bloqueio de usuário,
         * informe uma url externa ou uma rota válida, dessa forma em caso de bloqueio o usuário será redirecionado.
         */
        set: function (value) {
            this._blockedUrl = isTypeof(value, 'string') ? value : undefined;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageLoginBaseComponent.prototype, "language", {
        get: function () {
            return this.selectedLanguage || getShortBrowserLanguage();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PoPageLoginBaseComponent.prototype, "pageLoginLiterals", {
        get: function () {
            var loginHintWithContactEmail = this.contactEmail
                ? this.concatenateLoginHintWithContactEmail(this.contactEmail)
                : undefined;
            var titleWithProductName = this.productName ? this.concatenateTitleWithProductName(this.productName) : undefined;
            return __assign(__assign(__assign(__assign(__assign({}, poPageLoginLiteralsDefault[poLocaleDefault]), poPageLoginLiteralsDefault[this.language]), loginHintWithContactEmail), titleWithProductName), this.literals);
        },
        enumerable: true,
        configurable: true
    });
    PoPageLoginBaseComponent.prototype.ngOnDestroy = function () {
        if (this.loginSubscription) {
            this.loginSubscription.unsubscribe();
        }
    };
    PoPageLoginBaseComponent.prototype.closePopover = function () {
        this.showExceededAttemptsWarning = false;
    };
    PoPageLoginBaseComponent.prototype.onLoginSubmit = function () {
        var _this = this;
        var loginForm = {
            login: this.login,
            password: this.password,
            rememberUser: this.rememberUser
        };
        if (this.customField) {
            loginForm[this.customFieldObject.property] = this.customFieldObject.value;
        }
        if (this.authenticationUrl) {
            this.loginSubscription = this.loginService
                .onLogin(this.authenticationUrl, this.authenticationType, loginForm)
                .subscribe(function (data) {
                _this.setValuesToProperties();
                sessionStorage.setItem('PO_USER_LOGIN', JSON.stringify(data));
                _this.openInternalLink('/');
            }, function (error) {
                if (error.error.code === '400' || error.error.code === '401') {
                    _this.setValuesToProperties(error);
                    _this.redirectBlockedUrl(_this.exceededAttemptsWarning, _this.blockedUrl);
                }
            });
        }
        else {
            this.loginSubmit.emit(loginForm);
            this.showExceededAttemptsWarning = this.exceededAttemptsWarning > 0;
        }
    };
    PoPageLoginBaseComponent.prototype.getDefaultCustomFieldObject = function (property) {
        return { property: property };
    };
    PoPageLoginBaseComponent.prototype.openExternalLink = function (url) {
        window.open(url, '_blank');
    };
    PoPageLoginBaseComponent.prototype.openInternalLink = function (url) {
        this.router.navigate([url]);
    };
    PoPageLoginBaseComponent.prototype.redirectBlockedUrl = function (attempts, blockedUrl) {
        if (attempts === 0 && blockedUrl) {
            this.showExceededAttemptsWarning = false;
            isExternalLink(blockedUrl) ? this.openExternalLink(blockedUrl) : this.openInternalLink(blockedUrl);
        }
    };
    PoPageLoginBaseComponent.prototype.setValuesToProperties = function (result) {
        if (result) {
            this.exceededAttemptsWarning = result.error.maxAttemptsRemaining;
            this.loginErrors = result.error.loginWarnings;
            this.passwordErrors = result.error.passwordWarnings;
            this.blockedUrl = result.error.blockedUrl;
        }
        else {
            this.exceededAttemptsWarning = 0;
            this.loginErrors = [];
            this.passwordErrors = [];
            this.blockedUrl = '';
        }
    };
    PoPageLoginBaseComponent.ctorParameters = function () { return [
        { type: PoPageLoginService },
        { type: Router }
    ]; };
    __decorate([
        Input('p-custom-field'),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], PoPageLoginBaseComponent.prototype, "customField", null);
    __decorate([
        Input('p-background'),
        __metadata("design:type", String)
    ], PoPageLoginBaseComponent.prototype, "background", void 0);
    __decorate([
        Input('p-contact-email'),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], PoPageLoginBaseComponent.prototype, "contactEmail", null);
    __decorate([
        Input('p-product-name'),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], PoPageLoginBaseComponent.prototype, "productName", null);
    __decorate([
        Input('p-environment'),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], PoPageLoginBaseComponent.prototype, "environment", null);
    __decorate([
        Input('p-exceeded-attempts-warning'),
        __metadata("design:type", Number),
        __metadata("design:paramtypes", [Number])
    ], PoPageLoginBaseComponent.prototype, "exceededAttemptsWarning", null);
    __decorate([
        Input('p-hide-remember-user'),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], PoPageLoginBaseComponent.prototype, "hideRememberUser", null);
    __decorate([
        Input('p-literals'),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], PoPageLoginBaseComponent.prototype, "literals", null);
    __decorate([
        Input('p-loading'),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], PoPageLoginBaseComponent.prototype, "loading", null);
    __decorate([
        Input('p-login'),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], PoPageLoginBaseComponent.prototype, "login", null);
    __decorate([
        Input('p-logo'),
        __metadata("design:type", String)
    ], PoPageLoginBaseComponent.prototype, "logo", void 0);
    __decorate([
        Input('p-login-pattern'),
        __metadata("design:type", String)
    ], PoPageLoginBaseComponent.prototype, "loginPattern", void 0);
    __decorate([
        Input('p-login-errors'),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], PoPageLoginBaseComponent.prototype, "loginErrors", null);
    __decorate([
        Input('p-password-errors'),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], PoPageLoginBaseComponent.prototype, "passwordErrors", null);
    __decorate([
        Input('p-password-pattern'),
        __metadata("design:type", String)
    ], PoPageLoginBaseComponent.prototype, "passwordPattern", void 0);
    __decorate([
        Input('p-recovery'),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], PoPageLoginBaseComponent.prototype, "recovery", null);
    __decorate([
        Input('p-register-url'),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], PoPageLoginBaseComponent.prototype, "registerUrl", null);
    __decorate([
        Input('p-secondary-logo'),
        __metadata("design:type", String)
    ], PoPageLoginBaseComponent.prototype, "secondaryLogo", void 0);
    __decorate([
        Input('p-authentication-type'),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], PoPageLoginBaseComponent.prototype, "authenticationType", null);
    __decorate([
        Input('p-authentication-url'),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], PoPageLoginBaseComponent.prototype, "authenticationUrl", null);
    __decorate([
        Input('p-blocked-url'),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], PoPageLoginBaseComponent.prototype, "blockedUrl", null);
    __decorate([
        Output('p-login-change'),
        __metadata("design:type", EventEmitter)
    ], PoPageLoginBaseComponent.prototype, "loginChange", void 0);
    __decorate([
        Output('p-login-submit'),
        __metadata("design:type", Object)
    ], PoPageLoginBaseComponent.prototype, "loginSubmit", void 0);
    __decorate([
        Output('p-password-change'),
        __metadata("design:type", EventEmitter)
    ], PoPageLoginBaseComponent.prototype, "passwordChange", void 0);
    PoPageLoginBaseComponent = __decorate([
        Directive(),
        __metadata("design:paramtypes", [PoPageLoginService, Router])
    ], PoPageLoginBaseComponent);
    return PoPageLoginBaseComponent;
}());

/**
 * @docsExtends PoPageLoginBaseComponent
 *
 * @example
 *
 * <example name="po-page-login-basic" title="PO Page Login Basic">
 *  <file name="sample-po-page-login-basic/sample-po-page-login-basic.component.html"> </file>
 *  <file name="sample-po-page-login-basic/sample-po-page-login-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-page-login-labs" title="PO Page Login Labs">
 *  <file name="sample-po-page-login-labs/sample-po-page-login-labs.component.html"> </file>
 *  <file name="sample-po-page-login-labs/sample-po-page-login-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-page-login-human-resources" title="PO Page Login - Human Resources">
 *  <file name="sample-po-page-login-human-resources/sample-po-page-login-human-resources.component.html"> </file>
 *  <file name="sample-po-page-login-human-resources/sample-po-page-login-human-resources.component.ts"> </file>
 *  <file name="sample-po-page-login-human-resources/sample-po-page-login-human-resources.module.ts"> </file>
 * </example>
 *
 * <example name="po-page-login-automatic-service" title="PO Page Login - Automatic Service">
 *  <file name="sample-po-page-login-automatic-service/sample-po-page-login-automatic-service.component.html"> </file>
 *  <file name="sample-po-page-login-automatic-service/sample-po-page-login-automatic-service.component.ts"> </file>
 * </example>
 */
var PoPageLoginComponent = /** @class */ (function (_super) {
    __extends(PoPageLoginComponent, _super);
    function PoPageLoginComponent(changeDetector, activatedRoute, poComponentInjector, differs, loginService, router) {
        var _this = _super.call(this, loginService, router) || this;
        _this.changeDetector = changeDetector;
        _this.activatedRoute = activatedRoute;
        _this.poComponentInjector = poComponentInjector;
        _this.componentRef = null;
        _this.customPasswordError = { custom: false };
        _this.differ = differs.find([]).create(null);
        return _this;
    }
    PoPageLoginComponent.prototype.ngAfterViewChecked = function () {
        if (this.differ) {
            this.validateArrayChanges(this.differ, [
                { array: this.loginErrors, callback: this.generateLoginError.bind(this) },
                { array: this.passwordErrors, callback: this.generatePasswordError.bind(this) }
            ]);
        }
    };
    PoPageLoginComponent.prototype.ngOnInit = function () {
        this.checkingForRouteMetadata(this.activatedRoute.snapshot.data);
    };
    PoPageLoginComponent.prototype.changeLoginModel = function () {
        if (this.authenticationUrl) {
            this.loginErrors = [];
        }
        else {
            this.setLoginErrors(this.loginErrors);
            this.loginChange.emit(this.login);
        }
    };
    PoPageLoginComponent.prototype.changePasswordModel = function () {
        if (this.authenticationUrl) {
            this.passwordErrors = [];
        }
        else {
            this.setPasswordErrors(this.passwordErrors);
            this.passwordChange.emit(this.password);
        }
    };
    PoPageLoginComponent.prototype.onSelectedLanguage = function (language) {
        this.selectedLanguage = language;
    };
    PoPageLoginComponent.prototype.openUrl = function (recovery) {
        switch (typeof recovery) {
            case 'string': {
                this.setUrlRedirect(recovery);
                break;
            }
            case 'function': {
                recovery();
                break;
            }
            case 'object': {
                this.createModalPasswordRecoveryComponent(recovery);
                break;
            }
        }
    };
    PoPageLoginComponent.prototype.checkingForMetadataProperty = function (object, property) {
        if (Object.prototype.hasOwnProperty.call(object, property)) {
            return object[property];
        }
    };
    PoPageLoginComponent.prototype.checkingForRouteMetadata = function (data) {
        if (Object.keys(data).length !== 0) {
            this.authenticationUrl = this.checkingForMetadataProperty(data, 'serviceApi') || this.authenticationUrl;
            this.authenticationType = this.checkingForMetadataProperty(data, 'authenticationType') || this.authenticationType;
            this.environment = this.checkingForMetadataProperty(data, 'environment') || this.environment;
            this.recovery = this.checkingForMetadataProperty(data, 'recovery') || this.recovery;
            this.registerUrl = this.checkingForMetadataProperty(data, 'registerUrl') || this.registerUrl;
        }
    };
    PoPageLoginComponent.prototype.concatenate = function (defaultLiteral, prefixLiteral, value) {
        return defaultLiteral + " " + prefixLiteral + " " + value;
    };
    PoPageLoginComponent.prototype.concatenateLiteral = function (value, literal, defaultLiteral, prepositionLiteral) {
        var _a;
        return _a = {}, _a[literal] = this.concatenate(defaultLiteral, prepositionLiteral, value), _a;
    };
    PoPageLoginComponent.prototype.createModalPasswordRecoveryComponent = function (poPageLoginRecovery) {
        var _this = this;
        if (this.componentRef) {
            this.poComponentInjector.destroyComponentInApplication(this.componentRef);
        }
        this.componentRef = this.poComponentInjector.createComponentInApplication(PoModalPasswordRecoveryComponent);
        this.componentRef.instance.urlRecovery = poPageLoginRecovery.url;
        this.componentRef.instance.contactEmail = poPageLoginRecovery.contactMail;
        this.componentRef.instance.phoneMask = poPageLoginRecovery.phoneMask;
        this.componentRef.instance.type = poPageLoginRecovery.type || PoModalPasswordRecoveryType.Email;
        this.componentRef.changeDetectorRef.detectChanges();
        setTimeout(function () {
            _this.componentRef.instance.open();
        });
    };
    PoPageLoginComponent.prototype.generateLoginError = function () {
        if (this.loginErrors && this.loginErrors.length) {
            this.setLoginErrors(this.loginErrors);
        }
        else {
            var control = this.loginForm.form.controls['login'];
            if (control) {
                this.resetControl(control);
            }
        }
    };
    PoPageLoginComponent.prototype.generatePasswordError = function () {
        if (this.passwordErrors && this.passwordErrors.length) {
            this.setPasswordErrors(this.passwordErrors);
        }
        else {
            var control = this.loginForm.form.controls['password'];
            if (control) {
                this.resetControl(control);
            }
        }
    };
    PoPageLoginComponent.prototype.resetControl = function (control) {
        control.markAsPristine();
        control.markAsUntouched();
        control.updateValueAndValidity();
    };
    PoPageLoginComponent.prototype.setControlErrors = function (allErrors, control, errors, patternError) {
        if (control) {
            this[allErrors] = control.hasError('pattern') ? __spread(errors, [patternError]) : __spread(errors);
            if (errors && errors.length && (control.valid || control.pristine)) {
                control.markAsTouched();
                control.markAsDirty();
                control.setErrors(this.customPasswordError);
            }
        }
    };
    PoPageLoginComponent.prototype.setUrlRedirect = function (url) {
        isExternalLink(url) ? window.open(url, '_blank') : this.router.navigate([url]);
    };
    PoPageLoginComponent.prototype.validateArrayChanges = function (differ, array) {
        var _this = this;
        array.forEach(function (element) {
            var changes = differ.diff(element.array);
            if (changes) {
                element.callback();
                _this.changeDetector.detectChanges();
            }
        });
    };
    PoPageLoginComponent.prototype.concatenateLoginHintWithContactEmail = function (contactEmail) {
        var defaultLoginHintLiteral = poPageLoginLiteralsDefault[this.language].loginHint;
        var prepositionLiteral = poPageLoginLiteralIn[this.language];
        return this.concatenateLiteral(contactEmail, 'loginHint', defaultLoginHintLiteral, prepositionLiteral);
    };
    PoPageLoginComponent.prototype.concatenateTitleWithProductName = function (productName) {
        var defaultTitleLiteral = poPageLoginLiteralsDefault[this.language].title;
        var prepositionLiteral = poPageLoginLiteralTo[this.language];
        return this.concatenateLiteral(productName, 'title', defaultTitleLiteral, prepositionLiteral);
    };
    PoPageLoginComponent.prototype.setLoginErrors = function (errors) {
        var control = this.loginForm.form.controls['login'];
        this.setControlErrors('allLoginErrors', control, errors, this.pageLoginLiterals.loginErrorPattern);
    };
    PoPageLoginComponent.prototype.setPasswordErrors = function (errors) {
        var control = this.loginForm.form.controls['password'];
        this.setControlErrors('allPasswordErrors', control, errors, this.pageLoginLiterals.passwordErrorPattern);
    };
    PoPageLoginComponent.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ActivatedRoute },
        { type: PoComponentInjectorService },
        { type: IterableDiffers },
        { type: PoPageLoginService },
        { type: Router }
    ]; };
    __decorate([
        ViewChild('loginForm', { read: NgForm, static: true }),
        __metadata("design:type", NgForm)
    ], PoPageLoginComponent.prototype, "loginForm", void 0);
    __decorate([
        ViewChild('pageLogin', { read: ViewContainerRef, static: true }),
        __metadata("design:type", ViewContainerRef)
    ], PoPageLoginComponent.prototype, "pageLogin", void 0);
    PoPageLoginComponent = __decorate([
        Component({
            selector: 'po-page-login',
            template: "<po-page-background\n  #pageLogin\n  p-show-select-language\n  [p-background]=\"background\"\n  [p-highlight-info]=\"pageLoginLiterals.highlightInfo\"\n  [p-logo]=\"logo\"\n  [p-secondary-logo]=\"secondaryLogo\"\n  (p-selected-language)=\"onSelectedLanguage($event)\"\n>\n  <div class=\"po-page-login-header po-mb-2 po-mb-sm-1 po-pt-sm-1\">\n    <div class=\"po-page-login-header-title po-mb-sm-1\">{{ pageLoginLiterals.title }}</div>\n    <po-tag *ngIf=\"environment\" p-type=\"warning\" [p-value]=\"environment\"> </po-tag>\n  </div>\n\n  <form #loginForm=\"ngForm\" class=\"po-page-login-form\">\n    <div class=\"po-row\">\n      <div class=\"po-lg-12\">\n        <div class=\"po-page-login-hint po-page-login-info-container\">\n          <po-login\n            class=\"po-page-login-info-field\"\n            name=\"login\"\n            [(ngModel)]=\"login\"\n            p-auto-focus\n            p-required\n            [p-label]=\"pageLoginLiterals.loginLabel\"\n            [p-pattern]=\"loginPattern\"\n            [p-placeholder]=\"pageLoginLiterals.loginPlaceholder\"\n            (click)=\"closePopover()\"\n            (keyup.enter)=\"loginForm.valid && onLoginSubmit()\"\n            (p-change-model)=\"changeLoginModel()\"\n          >\n          </po-login>\n\n          <div class=\"po-page-login-info-icon-container\">\n            <span\n              class=\"po-icon po-field-icon po-icon-info\"\n              p-tooltip-position=\"right\"\n              [p-tooltip]=\"pageLoginLiterals.loginHint\"\n            >\n            </span>\n          </div>\n        </div>\n\n        <div class=\"po-field-container-bottom po-field-container-error-container\">\n          <div\n            *ngFor=\"let error of allLoginErrors\"\n            class=\"po-field-container-bottom-text-error po-field-container-error-item\"\n          >\n            <span class=\"po-icon po-icon-exclamation\"></span>\n            <span class=\"po-field-container-error-text\">{{ error }}</span>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"po-lg-12\">\n        <div class=\"po-page-login-password-container\">\n          <po-password\n            class=\"po-page-login-field-size po-page-login-password-item\"\n            name=\"password\"\n            [(ngModel)]=\"password\"\n            p-required\n            [p-label]=\"pageLoginLiterals.passwordLabel\"\n            [p-pattern]=\"passwordPattern\"\n            [p-placeholder]=\"pageLoginLiterals.passwordPlaceholder\"\n            (click)=\"closePopover()\"\n            (keyup.enter)=\"loginForm.valid && onLoginSubmit()\"\n            (p-change-model)=\"changePasswordModel()\"\n          >\n          </po-password>\n          <div class=\"po-page-login-password-item po-page-login-password-popover-container\">\n            <po-page-login-popover\n              *ngIf=\"showExceededAttemptsWarning && exceededAttemptsWarning\"\n              [p-literals]=\"pageLoginLiterals\"\n              [p-recovery]=\"recovery\"\n              [p-remaining-attempts]=\"exceededAttemptsWarning\"\n              (p-forgot-password)=\"openUrl($event)\"\n            >\n            </po-page-login-popover>\n          </div>\n        </div>\n        <div class=\"po-field-container-bottom po-field-container-error-container\">\n          <div\n            *ngFor=\"let error of allPasswordErrors\"\n            class=\"po-field-container-bottom-text-error po-field-container-error-item\"\n          >\n            <span class=\"po-icon po-icon-exclamation\"></span>\n            <span class=\"po-field-container-error-text\">{{ error }}</span>\n          </div>\n        </div>\n      </div>\n\n      <po-input\n        *ngIf=\"customField && customFieldType === 'input'\"\n        class=\"po-page-login-field-size po-lg-12\"\n        name=\"customFieldInput\"\n        [(ngModel)]=\"customFieldObject.value\"\n        p-required\n        [p-error-pattern]=\"customFieldObject.errorPattern || pageLoginLiterals.customFieldErrorPattern\"\n        [p-pattern]=\"customFieldObject.pattern\"\n        [p-placeholder]=\"customFieldObject.placeholder || pageLoginLiterals.customFieldPlaceholder\"\n        (keyup.enter)=\"loginForm.valid && onLoginSubmit()\"\n      >\n      </po-input>\n\n      <po-combo\n        *ngIf=\"customField && customFieldType === 'combo'\"\n        class=\"po-page-login-field-size po-lg-12\"\n        name=\"customFieldCombo\"\n        [(ngModel)]=\"customFieldObject.value\"\n        p-required\n        [p-field-value]=\"customFieldObject.fieldValue\"\n        [p-filter-service]=\"customFieldObject.url\"\n        [p-placeholder]=\"customFieldObject.placeholder || pageLoginLiterals.customFieldPlaceholder\"\n      >\n      </po-combo>\n\n      <po-select\n        *ngIf=\"customField && customFieldType === 'select'\"\n        class=\"po-page-login-field-size po-lg-12\"\n        name=\"customFieldSelect\"\n        [(ngModel)]=\"customFieldObject.value\"\n        p-required\n        [p-placeholder]=\"customFieldObject.placeholder || pageLoginLiterals.customFieldPlaceholder\"\n        [p-options]=\"customFieldObject.options\"\n      >\n      </po-select>\n\n      <div class=\"po-lg-12\">\n        <div *ngIf=\"!hideRememberUser\" class=\"po-page-login-hint po-page-login-info-container\">\n          <po-switch\n            class=\"po-page-login-info-field po-lg-7 po-offset-lg-5 po-offset-xl-5\"\n            name=\"rememberUser\"\n            [(ngModel)]=\"rememberUser\"\n            p-label-position=\"1\"\n            [p-label-off]=\"pageLoginLiterals.rememberUser\"\n            [p-label-on]=\"pageLoginLiterals.rememberUser\"\n            (keyup.enter)=\"loginForm.valid && onLoginSubmit()\"\n          >\n          </po-switch>\n\n          <div class=\"po-page-login-info-icon-container po-page-login-info-icon-remember-user\">\n            <span\n              class=\"po-icon po-field-icon po-icon-info\"\n              p-tooltip-position=\"right\"\n              [p-tooltip]=\"pageLoginLiterals.rememberUserHint\"\n            >\n            </span>\n          </div>\n        </div>\n      </div>\n\n      <po-button\n        class=\"po-lg-12 po-page-login-button po-page-login-field-size\"\n        p-type=\"primary\"\n        [p-disabled]=\"loginForm.invalid\"\n        [p-label]=\"loading ? pageLoginLiterals.submittedLabel : pageLoginLiterals.submitLabel\"\n        [p-loading]=\"loading\"\n        (p-click)=\"onLoginSubmit()\"\n      >\n      </po-button>\n\n      <div *ngIf=\"recovery\" class=\"po-page-login-recovery-link\">\n        <a class=\"po-font-text-large-bold\" (click)=\"openUrl(recovery)\">{{ pageLoginLiterals.forgotPassword }}</a>\n      </div>\n\n      <div *ngIf=\"registerUrl\" class=\"po-page-login-register-link\">\n        <a class=\"po-font-text-large-bold\" (click)=\"openUrl(registerUrl)\">{{ pageLoginLiterals.registerUrl }}</a>\n      </div>\n    </div>\n  </form>\n</po-page-background>\n"
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef,
            ActivatedRoute,
            PoComponentInjectorService,
            IterableDiffers,
            PoPageLoginService,
            Router])
    ], PoPageLoginComponent);
    return PoPageLoginComponent;
}(PoPageLoginBaseComponent));

var PoPageLoginPopoverComponent = /** @class */ (function () {
    /**
     * @docsPrivate
     *
     * @description
     *
     * Componente para definição da mensagem de aviso de bloqueio do `po-page-login`.
     */
    function PoPageLoginPopoverComponent() {
        /** se 'p-recovery' for do tipo Function ou PoPageLoginRecovery, emite para o método 'openUrl' do componente 'po-page-login' */
        this.forgotPassword = new EventEmitter();
    }
    Object.defineProperty(PoPageLoginPopoverComponent.prototype, "recovery", {
        get: function () {
            return this._recovery;
        },
        /** exibe o link de 'esqueci minha senha' e verifica se o valor é um link interno ou externo */
        set: function (value) {
            this._recovery = value;
            if (isTypeof(value, 'string')) {
                this.recoveryType = isExternalLink(value) ? 'externalLink' : 'internalLink';
            }
        },
        enumerable: true,
        configurable: true
    });
    PoPageLoginPopoverComponent.prototype.onForgotPasswordClick = function (recovery) {
        this.forgotPassword.emit(recovery);
    };
    __decorate([
        Input('p-literals'),
        __metadata("design:type", Object)
    ], PoPageLoginPopoverComponent.prototype, "literals", void 0);
    __decorate([
        Input('p-recovery'),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], PoPageLoginPopoverComponent.prototype, "recovery", null);
    __decorate([
        Input('p-remaining-attempts'),
        __metadata("design:type", Number)
    ], PoPageLoginPopoverComponent.prototype, "remainingAttempts", void 0);
    __decorate([
        Output('p-forgot-password'),
        __metadata("design:type", Object)
    ], PoPageLoginPopoverComponent.prototype, "forgotPassword", void 0);
    PoPageLoginPopoverComponent = __decorate([
        Component({
            selector: 'po-page-login-popover',
            template: "<div class=\"po-page-login-popover-container\">\n  <div class=\"po-page-login-popover\">\n    <div class=\"po-page-login-popover-arrow\"></div>\n    <div class=\"po-page-login-popover-content\">\n      <p class=\"po-font-text-bold po-page-login-popover-title\">\n        {{ literals?.titlePopover }}\n      </p>\n      <p class=\"po-font-text\">\n        {{ literals?.forgotYourPassword }}\n      </p>\n      <p class=\"po-font-text\">\n        {{ literals?.ifYouTryHarder }}\n        <span class=\"po-font-text-bold po-page-login-popover-attempts\">\n          {{ literals?.attempts | poI18n: remainingAttempts }} </span\n        >{{ literals?.yourUserWillBeBlocked }}\n      </p>\n      <br />\n      <p class=\"po-font-text\">\n        {{ literals?.createANewPasswordNow }}\n      </p>\n      <div *ngIf=\"recovery\" class=\"po-font-text-bold po-mt-1 po-page-login-popover-link-container\">\n        <a *ngIf=\"recoveryType === 'internalLink'\" class=\"po-page-login-popover-link\" [routerLink]=\"recovery\">\n          {{ literals?.iForgotMyPassword }}\n        </a>\n        <a *ngIf=\"recoveryType === 'externalLink'\" class=\"po-page-login-popover-link\" [href]=\"recovery\" target=\"_blank\">\n          {{ literals?.iForgotMyPassword }}\n        </a>\n        <a *ngIf=\"!recoveryType\" class=\"po-page-login-popover-link\" (click)=\"onForgotPasswordClick(recovery)\">\n          {{ literals?.iForgotMyPassword }}\n        </a>\n      </div>\n    </div>\n  </div>\n</div>\n"
        })
        /**
         * @docsPrivate
         *
         * @description
         *
         * Componente para definição da mensagem de aviso de bloqueio do `po-page-login`.
         */
    ], PoPageLoginPopoverComponent);
    return PoPageLoginPopoverComponent;
}());

/**
 * @description
 *
 * Módulo do template do po-page-login.
 */
var PoPageLoginModule = /** @class */ (function () {
    function PoPageLoginModule() {
    }
    PoPageLoginModule = __decorate([
        NgModule({
            imports: [CommonModule, FormsModule, RouterModule, PoPageBackgroundModule, PoModule],
            declarations: [PoPageLoginComponent, PoPageLoginPopoverComponent],
            exports: [PoPageLoginComponent],
            providers: [PoPageLoginService]
        })
    ], PoPageLoginModule);
    return PoPageLoginModule;
}());

var PoComponentsModule = /** @class */ (function () {
    function PoComponentsModule() {
    }
    PoComponentsModule = __decorate([
        NgModule({
            imports: [
                PoModalPasswordRecoveryModule,
                PoPageBackgroundModule,
                PoPageBlockedUserModule,
                PoPageChangePasswordModule,
                PoPageDynamicDetailModule,
                PoPageDynamicEditModule,
                PoPageDynamicSearchModule,
                PoPageDynamicTableModule,
                PoPageJobSchedulerModule,
                PoPageLoginModule
            ],
            exports: [
                PoModalPasswordRecoveryModule,
                PoPageBackgroundModule,
                PoPageBlockedUserModule,
                PoPageChangePasswordModule,
                PoPageDynamicDetailModule,
                PoPageDynamicEditModule,
                PoPageDynamicSearchModule,
                PoPageDynamicTableModule,
                PoPageJobSchedulerModule,
                PoPageLoginModule
            ]
        })
    ], PoComponentsModule);
    return PoComponentsModule;
}());

var PoServicesModule = /** @class */ (function () {
    function PoServicesModule() {
    }
    PoServicesModule = __decorate([
        NgModule({
            imports: [PoPageCustomizationModule, PoPageDynamicModule],
            exports: [PoPageCustomizationModule, PoPageDynamicModule]
        })
    ], PoServicesModule);
    return PoServicesModule;
}());

var PoTemplatesModule = /** @class */ (function () {
    function PoTemplatesModule() {
    }
    PoTemplatesModule = __decorate([
        NgModule({
            imports: [PoComponentsModule, PoServicesModule],
            exports: [PoComponentsModule, PoServicesModule]
        })
    ], PoTemplatesModule);
    return PoTemplatesModule;
}());

/**
 * Generated bundle index. Do not edit.
 */

export { PoComponentsModule, PoModalPasswordRecoveryComponent, PoModalPasswordRecoveryErrorMessageComponent, PoModalPasswordRecoveryModalContent, PoModalPasswordRecoveryModule, PoModalPasswordRecoveryType, PoPageBackgroundComponent, PoPageBackgroundModule, PoPageBlockedUserComponent, PoPageBlockedUserContactsComponent, PoPageBlockedUserModule, PoPageBlockedUserReason, PoPageBlockedUserReasonComponent, PoPageChangePasswordComponent, PoPageChangePasswordModule, PoPageCustomizationModule, PoPageCustomizationService, PoPageDynamicDetailComponent, PoPageDynamicDetailModule, PoPageDynamicEditComponent, PoPageDynamicEditModule, PoPageDynamicModule, PoPageDynamicSearchComponent, PoPageDynamicSearchModule, PoPageDynamicService, PoPageDynamicTableComponent, PoPageDynamicTableModule, PoPageJobSchedulerComponent, PoPageJobSchedulerModule, PoPageLoginAuthenticationType, PoPageLoginComponent, PoPageLoginModule, PoServicesModule, PoTemplatesModule, poModalPasswordRecoveryLiterals, poPageBlockedUserButtonLiterals, poPageBlockedUserLiterals, poPageChangePasswordLiterals, poPageDynamicDetailLiteralsDefault, poPageDynamicEditLiteralsDefault, poPageDynamicLiterals, poPageDynamicTableLiteralsDefault, PoModalPasswordRecoveryBaseComponent as ɵa, PoModalPasswordRecoveryService as ɵb, PoPageBlockedUserBaseComponent as ɵc, PoPageChangePasswordBaseComponent as ɵd, PoPageChangePasswordService as ɵe, PoPageDynamicDetailActionsService as ɵf, PoPageDynamicEditActionsService as ɵg, PoAdvancedFilterComponent as ɵh, PoAdvancedFilterBaseComponent as ɵi, PoPageDynamicSearchBaseComponent as ɵj, PoPageDynamicListBaseComponent as ɵk, PoPageDynamicTableActionsService as ɵl, PoPageJobSchedulerBaseComponent as ɵm, PoPageJobSchedulerService as ɵn, PoPageJobSchedulerLookupService as ɵo, PoPageJobSchedulerExecutionComponent as ɵp, PoPageJobSchedulerParametersComponent as ɵq, PoPageJobSchedulerSummaryComponent as ɵr, PoPageLoginBaseComponent as ɵs, PoPageLoginService as ɵt, PoPageLoginPopoverComponent as ɵu };
//# sourceMappingURL=po-ui-ng-templates.js.map
