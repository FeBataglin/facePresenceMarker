import { __decorate, __metadata } from "tslib";
import { Directive, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import { poLocaleDefault } from './../../../utils/util';
import { PoLanguageService } from '../../../services/po-language/po-language.service';
import { PoPageContentComponent } from '../po-page-content/po-page-content.component';
export const poPageDetailLiteralsDefault = {
    en: {
        back: 'Back',
        edit: 'Edit',
        remove: 'Remove'
    },
    es: {
        back: 'Volver',
        edit: 'Editar',
        remove: 'Eliminar'
    },
    pt: {
        back: 'Voltar',
        edit: 'Editar',
        remove: 'Remover'
    },
    ru: {
        back: 'возвращение',
        edit: 'редактировать',
        remove: 'удаление'
    }
};
/**
 * @description
 *
 * O componente **po-page-detail** é utilizado como container principal para a tela de
 * detalhamento de um registro, tendo a possibilidade de usar as ações de "Voltar", "Editar" e "Remover".
 */
let PoPageDetailBaseComponent = class PoPageDetailBaseComponent {
    constructor(languageService) {
        /**
         * Evento que será disparado ao clicar no botão de "Voltar".
         *
         * ```
         * <po-page-detail (p-back)="myBackFunction()">
         * </po-page-detail>
         * ```
         *
         * > Caso não utilizar esta propriedade, o botão de "Voltar" não será exibido.
         */
        this.back = new EventEmitter();
        /**
         * Evento que será disparado ao clicar no botão de "Editar".
         *
         * ```
         * <po-page-detail (p-edit)="myEditFunction()">
         * </po-page-detail>
         * ```
         *
         * > Caso não utilizar esta propriedade, o botão de "Editar" não será exibido.
         */
        this.edit = new EventEmitter();
        /**
         * Evento que será disparado ao clicar no botão de "Remover".
         *
         * ```
         * <po-page-detail (p-remove)="myRemoveFunction()">
         * </po-page-detail>
         * ```
         *
         * > Caso não utilizar esta propriedade, o botão de "Remover" não será exibido.
         */
        this.remove = new EventEmitter();
        this.language = languageService.getShortLanguage();
    }
    /**
     * @optional
     *
     * @description
     *
     * Objeto com as literais usadas no `po-page-detail`.
     *
     * Existem duas maneiras de customizar o componente, passando um objeto com todas as literais disponíveis:
     *
     * ```
     *  const customLiterals: PoPageDetailLiterals = {
     *    edit: 'Edição',
     *    remove: 'Exclusão',
     *    back: 'Menu'
     *  };
     * ```
     *
     * Ou passando apenas as literais que deseja customizar:
     *
     * ```
     *  const customLiterals: PoPageDetailLiterals = {
     *    remove: 'Excluir registro permanentemente'
     *  };
     * ```
     *
     * E para carregar as literais customizadas, basta apenas passar o objeto para o componente.
     *
     * ```
     * <po-page-detail
     *   [p-literals]="customLiterals">
     * </po-page-detail>
     * ```
     *
     * > O objeto padrão de literais será traduzido de acordo com o idioma do
     * [`PoI18nService`](/documentation/po-i18n) ou do browser.
     */
    set literals(value) {
        if (value instanceof Object && !(value instanceof Array)) {
            this._literals = Object.assign(Object.assign(Object.assign({}, poPageDetailLiteralsDefault[poLocaleDefault]), poPageDetailLiteralsDefault[this.language]), value);
        }
        else {
            this._literals = poPageDetailLiteralsDefault[this.language];
        }
    }
    get literals() {
        return this._literals || poPageDetailLiteralsDefault[this.language];
    }
    /** Título da página. */
    set title(title) {
        this._title = title;
        setTimeout(() => this.poPageContent.recalculateHeaderSize());
    }
    get title() {
        return this._title;
    }
};
PoPageDetailBaseComponent.ctorParameters = () => [
    { type: PoLanguageService }
];
__decorate([
    ViewChild(PoPageContentComponent, { static: true }),
    __metadata("design:type", PoPageContentComponent)
], PoPageDetailBaseComponent.prototype, "poPageContent", void 0);
__decorate([
    Input('p-breadcrumb'),
    __metadata("design:type", Object)
], PoPageDetailBaseComponent.prototype, "breadcrumb", void 0);
__decorate([
    Input('p-literals'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [Object])
], PoPageDetailBaseComponent.prototype, "literals", null);
__decorate([
    Input('p-title'),
    __metadata("design:type", String),
    __metadata("design:paramtypes", [String])
], PoPageDetailBaseComponent.prototype, "title", null);
__decorate([
    Output('p-back'),
    __metadata("design:type", Object)
], PoPageDetailBaseComponent.prototype, "back", void 0);
__decorate([
    Output('p-edit'),
    __metadata("design:type", Object)
], PoPageDetailBaseComponent.prototype, "edit", void 0);
__decorate([
    Output('p-remove'),
    __metadata("design:type", Object)
], PoPageDetailBaseComponent.prototype, "remove", void 0);
PoPageDetailBaseComponent = __decorate([
    Directive(),
    __metadata("design:paramtypes", [PoLanguageService])
], PoPageDetailBaseComponent);
export { PoPageDetailBaseComponent };
//# sourceMappingURL=data:application/json;base64,