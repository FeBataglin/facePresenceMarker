import { __decorate, __metadata } from "tslib";
import { Directive, Input, TemplateRef } from '@angular/core';
/**
 * @usedBy PoTableComponent
 *
 * @description
 *
 * Esta diretiva permite que seja possível alterar o conteúdo das células de uma coluna, para que os valores possam ser exibidos
 * de acordo com a necessidade do usuário.
 *
 * Em seu uso, deve-se utilizar como parâmetro de entrada o input [p-property], o qual é responsável por informar ao PO-TABLE qual a coluna que
 * será adicionado o conteúdo do template.
 *
 * Retorno:
 *  - value: valor referente ao conteúdo da linha corrente.
 *
 * Modo de uso:
 * ```html
 * ...
 * <po-table
 *   [p-columns]="columns"
 *   [p-items]="items">
 *   <ng-template p-table-column-template [p-property]="targetProperty" let-value>
 *     <span [innerText]="value"></span>
 *   </ng-template>
 * </po-table>
 * ...
 * ```
 * > No exemplo acima, todas as células correspondentes a coluna `status` terão o conteúdo alterado para `<h1>${value}</h1>`,
 * sendo que `value` refere-se ao conteúdo da linha.
 *
 * ```html
 * ...
 * <po-table
 *   [p-columns]="columns"
 *   [p-items]="items">
 *   <ng-template  p-table-column-template [p-property]="targetProperty" let-value>
 *     <span *ngIf="value === 'FINISHED'" [style.background]="'silver'" [innerText]="value"></span>
 *     <span *ngIf="value === 'OPENED'" [style.background]="'gray'" [innerText]="value"></span>
 *   </ng-template>
 * </po-table>
 * ...
 * ```
 * > Agora, neste exemplo, com o valor da linha corrente retornado (value), é feito uma validação para
 * definir o template exato para adicionar a uma específica célula.
 *
 * Abaixo, a declaração dos dados de entrada do PO-TABLE para o uso da directiva.
 * ```typescript
 * ...
 * export class AppComponent {
 *
 *    targetProperty= 'status';
 *
 *    items = [{
 *      code: 1200,
 *      product: 'Rice',
 *      status: 'CANCELED'
 *      },{
 *      code: 1355,
 *      product: 'Bean',
 *      status: 'FINISHED'
 *    }];
 *
 *    columns = [
 *      { property: 'code', label: 'ID' },
 *      { property: 'product', label: 'PRODUTO' },
 *      { property: 'status', label: 'STATUS', type: 'columnTemplate' }
 *    ];
 * }
 * ...
 * ```
 * > Observação: Sempre adicionar o **type** da coluna que deseja manipular com a directiva como `columnTemplate`
 */
var PoTableColumnTemplateDirective = /** @class */ (function () {
    // Necessário manter templateRef para o funcionamento do column template.
    function PoTableColumnTemplateDirective(templateRef) {
        this.templateRef = templateRef;
    }
    PoTableColumnTemplateDirective.ctorParameters = function () { return [
        { type: TemplateRef }
    ]; };
    __decorate([
        Input('p-property'),
        __metadata("design:type", String)
    ], PoTableColumnTemplateDirective.prototype, "targetProperty", void 0);
    PoTableColumnTemplateDirective = __decorate([
        Directive({
            selector: '[p-table-column-template]'
        }),
        __metadata("design:paramtypes", [TemplateRef])
    ], PoTableColumnTemplateDirective);
    return PoTableColumnTemplateDirective;
}());
export { PoTableColumnTemplateDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdGFibGUtY29sdW1uLXRlbXBsYXRlLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bwby11aS9uZy1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvcG8tdGFibGUvcG8tdGFibGUtY29sdW1uLXRlbXBsYXRlL3BvLXRhYmxlLWNvbHVtbi10ZW1wbGF0ZS5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUU5RDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQXNFRztBQUtIO0lBWUUseUVBQXlFO0lBQ3pFLHdDQUFtQixXQUE2QjtRQUE3QixnQkFBVyxHQUFYLFdBQVcsQ0FBa0I7SUFBRyxDQUFDOztnQkFBcEIsV0FBVzs7SUFIdEI7UUFBcEIsS0FBSyxDQUFDLFlBQVksQ0FBQzs7MEVBQXdCO0lBVmpDLDhCQUE4QjtRQUgxQyxTQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUsMkJBQTJCO1NBQ3RDLENBQUM7eUNBY2dDLFdBQVc7T0FiaEMsOEJBQThCLENBYzFDO0lBQUQscUNBQUM7Q0FBQSxBQWRELElBY0M7U0FkWSw4QkFBOEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIElucHV0LCBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG4vKipcbiAqIEB1c2VkQnkgUG9UYWJsZUNvbXBvbmVudFxuICpcbiAqIEBkZXNjcmlwdGlvblxuICpcbiAqIEVzdGEgZGlyZXRpdmEgcGVybWl0ZSBxdWUgc2VqYSBwb3Nzw612ZWwgYWx0ZXJhciBvIGNvbnRlw7pkbyBkYXMgY8OpbHVsYXMgZGUgdW1hIGNvbHVuYSwgcGFyYSBxdWUgb3MgdmFsb3JlcyBwb3NzYW0gc2VyIGV4aWJpZG9zXG4gKiBkZSBhY29yZG8gY29tIGEgbmVjZXNzaWRhZGUgZG8gdXN1w6FyaW8uXG4gKlxuICogRW0gc2V1IHVzbywgZGV2ZS1zZSB1dGlsaXphciBjb21vIHBhcsOibWV0cm8gZGUgZW50cmFkYSBvIGlucHV0IFtwLXByb3BlcnR5XSwgbyBxdWFsIMOpIHJlc3BvbnPDoXZlbCBwb3IgaW5mb3JtYXIgYW8gUE8tVEFCTEUgcXVhbCBhIGNvbHVuYSBxdWVcbiAqIHNlcsOhIGFkaWNpb25hZG8gbyBjb250ZcO6ZG8gZG8gdGVtcGxhdGUuXG4gKlxuICogUmV0b3JubzpcbiAqICAtIHZhbHVlOiB2YWxvciByZWZlcmVudGUgYW8gY29udGXDumRvIGRhIGxpbmhhIGNvcnJlbnRlLlxuICpcbiAqIE1vZG8gZGUgdXNvOlxuICogYGBgaHRtbFxuICogLi4uXG4gKiA8cG8tdGFibGVcbiAqICAgW3AtY29sdW1uc109XCJjb2x1bW5zXCJcbiAqICAgW3AtaXRlbXNdPVwiaXRlbXNcIj5cbiAqICAgPG5nLXRlbXBsYXRlIHAtdGFibGUtY29sdW1uLXRlbXBsYXRlIFtwLXByb3BlcnR5XT1cInRhcmdldFByb3BlcnR5XCIgbGV0LXZhbHVlPlxuICogICAgIDxzcGFuIFtpbm5lclRleHRdPVwidmFsdWVcIj48L3NwYW4+XG4gKiAgIDwvbmctdGVtcGxhdGU+XG4gKiA8L3BvLXRhYmxlPlxuICogLi4uXG4gKiBgYGBcbiAqID4gTm8gZXhlbXBsbyBhY2ltYSwgdG9kYXMgYXMgY8OpbHVsYXMgY29ycmVzcG9uZGVudGVzIGEgY29sdW5hIGBzdGF0dXNgIHRlcsOjbyBvIGNvbnRlw7pkbyBhbHRlcmFkbyBwYXJhIGA8aDE+JHt2YWx1ZX08L2gxPmAsXG4gKiBzZW5kbyBxdWUgYHZhbHVlYCByZWZlcmUtc2UgYW8gY29udGXDumRvIGRhIGxpbmhhLlxuICpcbiAqIGBgYGh0bWxcbiAqIC4uLlxuICogPHBvLXRhYmxlXG4gKiAgIFtwLWNvbHVtbnNdPVwiY29sdW1uc1wiXG4gKiAgIFtwLWl0ZW1zXT1cIml0ZW1zXCI+XG4gKiAgIDxuZy10ZW1wbGF0ZSAgcC10YWJsZS1jb2x1bW4tdGVtcGxhdGUgW3AtcHJvcGVydHldPVwidGFyZ2V0UHJvcGVydHlcIiBsZXQtdmFsdWU+XG4gKiAgICAgPHNwYW4gKm5nSWY9XCJ2YWx1ZSA9PT0gJ0ZJTklTSEVEJ1wiIFtzdHlsZS5iYWNrZ3JvdW5kXT1cIidzaWx2ZXInXCIgW2lubmVyVGV4dF09XCJ2YWx1ZVwiPjwvc3Bhbj5cbiAqICAgICA8c3BhbiAqbmdJZj1cInZhbHVlID09PSAnT1BFTkVEJ1wiIFtzdHlsZS5iYWNrZ3JvdW5kXT1cIidncmF5J1wiIFtpbm5lclRleHRdPVwidmFsdWVcIj48L3NwYW4+XG4gKiAgIDwvbmctdGVtcGxhdGU+XG4gKiA8L3BvLXRhYmxlPlxuICogLi4uXG4gKiBgYGBcbiAqID4gQWdvcmEsIG5lc3RlIGV4ZW1wbG8sIGNvbSBvIHZhbG9yIGRhIGxpbmhhIGNvcnJlbnRlIHJldG9ybmFkbyAodmFsdWUpLCDDqSBmZWl0byB1bWEgdmFsaWRhw6fDo28gcGFyYVxuICogZGVmaW5pciBvIHRlbXBsYXRlIGV4YXRvIHBhcmEgYWRpY2lvbmFyIGEgdW1hIGVzcGVjw61maWNhIGPDqWx1bGEuXG4gKlxuICogQWJhaXhvLCBhIGRlY2xhcmHDp8OjbyBkb3MgZGFkb3MgZGUgZW50cmFkYSBkbyBQTy1UQUJMRSBwYXJhIG8gdXNvIGRhIGRpcmVjdGl2YS5cbiAqIGBgYHR5cGVzY3JpcHRcbiAqIC4uLlxuICogZXhwb3J0IGNsYXNzIEFwcENvbXBvbmVudCB7XG4gKlxuICogICAgdGFyZ2V0UHJvcGVydHk9ICdzdGF0dXMnO1xuICpcbiAqICAgIGl0ZW1zID0gW3tcbiAqICAgICAgY29kZTogMTIwMCxcbiAqICAgICAgcHJvZHVjdDogJ1JpY2UnLFxuICogICAgICBzdGF0dXM6ICdDQU5DRUxFRCdcbiAqICAgICAgfSx7XG4gKiAgICAgIGNvZGU6IDEzNTUsXG4gKiAgICAgIHByb2R1Y3Q6ICdCZWFuJyxcbiAqICAgICAgc3RhdHVzOiAnRklOSVNIRUQnXG4gKiAgICB9XTtcbiAqXG4gKiAgICBjb2x1bW5zID0gW1xuICogICAgICB7IHByb3BlcnR5OiAnY29kZScsIGxhYmVsOiAnSUQnIH0sXG4gKiAgICAgIHsgcHJvcGVydHk6ICdwcm9kdWN0JywgbGFiZWw6ICdQUk9EVVRPJyB9LFxuICogICAgICB7IHByb3BlcnR5OiAnc3RhdHVzJywgbGFiZWw6ICdTVEFUVVMnLCB0eXBlOiAnY29sdW1uVGVtcGxhdGUnIH1cbiAqICAgIF07XG4gKiB9XG4gKiAuLi5cbiAqIGBgYFxuICogPiBPYnNlcnZhw6fDo286IFNlbXByZSBhZGljaW9uYXIgbyAqKnR5cGUqKiBkYSBjb2x1bmEgcXVlIGRlc2VqYSBtYW5pcHVsYXIgY29tIGEgZGlyZWN0aXZhIGNvbW8gYGNvbHVtblRlbXBsYXRlYFxuICovXG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1twLXRhYmxlLWNvbHVtbi10ZW1wbGF0ZV0nXG59KVxuZXhwb3J0IGNsYXNzIFBvVGFibGVDb2x1bW5UZW1wbGF0ZURpcmVjdGl2ZSB7XG4gIC8qKlxuICAgKiBAb3B0aW9uYWxcbiAgICpcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqXG4gICAqIFZhcmnDoXZlbCByZXNwb25zw6F2ZWwgcG9yIGFybWF6ZW5hciBhIHByb3BlcnR5IGRhIGNvbHVuYSBkYSB0YWJlbGEgcXVlIHNlcsOhIGFkaWNpb25hZG8gbyB0ZW1wbGF0ZS5cbiAgICpcbiAgICogQ2FzbyBuw6NvIHNlamEgaW5mb3JtYWRhIGVzdGEgcHJvcHJpZWRhZGUsIHNlcsOjbyBhcHJlc2VudGFkb3Mgbm9ybWFsbWVudGUgb3MgZGFkb3MgZGEgY29sdW5hLlxuICAgKi9cbiAgQElucHV0KCdwLXByb3BlcnR5JykgdGFyZ2V0UHJvcGVydHk6IHN0cmluZztcblxuICAvLyBOZWNlc3PDoXJpbyBtYW50ZXIgdGVtcGxhdGVSZWYgcGFyYSBvIGZ1bmNpb25hbWVudG8gZG8gY29sdW1uIHRlbXBsYXRlLlxuICBjb25zdHJ1Y3RvcihwdWJsaWMgdGVtcGxhdGVSZWY6IFRlbXBsYXRlUmVmPGFueT4pIHt9XG59XG4iXX0=