import { EventEmitter, OnDestroy, OnInit } from '@angular/core';
import { PoModalAction } from '../../../../components/po-modal';
import { PoModalComponent } from '../../../../components/po-modal/po-modal.component';
import { PoTableColumnSort } from '../../../po-table/interfaces/po-table-column-sort.interface';
import { PoLanguageService } from '../../../../services/po-language/po-language.service';
import { PoLookupColumn } from '../interfaces/po-lookup-column.interface';
import { PoLookupFilter } from '../interfaces/po-lookup-filter.interface';
import { PoLookupLiterals } from '../interfaces/po-lookup-literals.interface';
import * as ɵngcc0 from '@angular/core';
export declare const poLookupLiteralsDefault: {
    en: PoLookupLiterals;
    es: PoLookupLiterals;
    pt: PoLookupLiterals;
    ru: PoLookupLiterals;
};
/**
 * @docsPrivate
 *
 * Classe base do componente Po Lookup Modal.
 */
export declare abstract class PoLookupModalBaseComponent implements OnDestroy, OnInit {
    private _literals;
    private _title;
    private language;
    hasNext: boolean;
    isLoading: boolean;
    page: number;
    pageSize: number;
    primaryAction: PoModalAction;
    searchValue: string;
    secondaryAction: PoModalAction;
    tableLiterals: any;
    protected sort: PoTableColumnSort;
    private filterSubscription;
    private searchSubscription;
    private showMoreSubscription;
    poModal: PoModalComponent;
    /**
     * Lista das colunas da tabela.
     * Essa propriedade deve receber um array de objetos que implementam a interface PoLookupColumn.
     */
    columns: Array<PoLookupColumn>;
    /** Lista de itens da tabela. */
    items: Array<any>;
    /** Objeto com as literais usadas no `po-lookup-modal`. */
    set literals(value: PoLookupLiterals);
    get literals(): PoLookupLiterals;
    /** Título da modal. */
    set title(value: string);
    get title(): string;
    /** Classe de serviço com a implementação do cliente. */
    filterService: PoLookupFilter;
    /** Classe de serviço com a implementação do cliente. */
    filterParams: any;
    /** Evento utilizado ao selecionar um registro da tabela. */
    model: EventEmitter<any>;
    constructor(languageService: PoLanguageService);
    ngOnDestroy(): void;
    ngOnInit(): void;
    search(): void;
    showMoreEvent(): void;
    abstract openModal(): void;
    private getFilteredItems;
    private getFilteredParams;
    private getOrderParam;
    private initializeData;
    private setLookupResponseProperties;
    private setTableLiterals;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoLookupModalBaseComponent, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<PoLookupModalBaseComponent, never, never, { "literals": "p-literals"; "title": "p-title"; "items": "p-items"; "columns": "p-columns"; "filterService": "p-filter-service"; "filterParams": "p-filter-params"; }, { "model": "p-change-model"; }, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tbG9va3VwLW1vZGFsLWJhc2UuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInBvLWxvb2t1cC1tb2RhbC1iYXNlLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudEVtaXR0ZXIsIE9uRGVzdHJveSwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBQb01vZGFsQWN0aW9uIH0gZnJvbSAnLi4vLi4vLi4vLi4vY29tcG9uZW50cy9wby1tb2RhbCc7XG5pbXBvcnQgeyBQb01vZGFsQ29tcG9uZW50IH0gZnJvbSAnLi4vLi4vLi4vLi4vY29tcG9uZW50cy9wby1tb2RhbC9wby1tb2RhbC5jb21wb25lbnQnO1xuaW1wb3J0IHsgUG9UYWJsZUNvbHVtblNvcnQgfSBmcm9tICcuLi8uLi8uLi9wby10YWJsZS9pbnRlcmZhY2VzL3BvLXRhYmxlLWNvbHVtbi1zb3J0LmludGVyZmFjZSc7XG5pbXBvcnQgeyBQb0xhbmd1YWdlU2VydmljZSB9IGZyb20gJy4uLy4uLy4uLy4uL3NlcnZpY2VzL3BvLWxhbmd1YWdlL3BvLWxhbmd1YWdlLnNlcnZpY2UnO1xuaW1wb3J0IHsgUG9Mb29rdXBDb2x1bW4gfSBmcm9tICcuLi9pbnRlcmZhY2VzL3BvLWxvb2t1cC1jb2x1bW4uaW50ZXJmYWNlJztcbmltcG9ydCB7IFBvTG9va3VwRmlsdGVyIH0gZnJvbSAnLi4vaW50ZXJmYWNlcy9wby1sb29rdXAtZmlsdGVyLmludGVyZmFjZSc7XG5pbXBvcnQgeyBQb0xvb2t1cExpdGVyYWxzIH0gZnJvbSAnLi4vaW50ZXJmYWNlcy9wby1sb29rdXAtbGl0ZXJhbHMuaW50ZXJmYWNlJztcbmV4cG9ydCBkZWNsYXJlIGNvbnN0IHBvTG9va3VwTGl0ZXJhbHNEZWZhdWx0OiB7XG4gICAgZW46IFBvTG9va3VwTGl0ZXJhbHM7XG4gICAgZXM6IFBvTG9va3VwTGl0ZXJhbHM7XG4gICAgcHQ6IFBvTG9va3VwTGl0ZXJhbHM7XG4gICAgcnU6IFBvTG9va3VwTGl0ZXJhbHM7XG59O1xuLyoqXG4gKiBAZG9jc1ByaXZhdGVcbiAqXG4gKiBDbGFzc2UgYmFzZSBkbyBjb21wb25lbnRlIFBvIExvb2t1cCBNb2RhbC5cbiAqL1xuZXhwb3J0IGRlY2xhcmUgYWJzdHJhY3QgY2xhc3MgUG9Mb29rdXBNb2RhbEJhc2VDb21wb25lbnQgaW1wbGVtZW50cyBPbkRlc3Ryb3ksIE9uSW5pdCB7XG4gICAgcHJpdmF0ZSBfbGl0ZXJhbHM7XG4gICAgcHJpdmF0ZSBfdGl0bGU7XG4gICAgcHJpdmF0ZSBsYW5ndWFnZTtcbiAgICBoYXNOZXh0OiBib29sZWFuO1xuICAgIGlzTG9hZGluZzogYm9vbGVhbjtcbiAgICBwYWdlOiBudW1iZXI7XG4gICAgcGFnZVNpemU6IG51bWJlcjtcbiAgICBwcmltYXJ5QWN0aW9uOiBQb01vZGFsQWN0aW9uO1xuICAgIHNlYXJjaFZhbHVlOiBzdHJpbmc7XG4gICAgc2Vjb25kYXJ5QWN0aW9uOiBQb01vZGFsQWN0aW9uO1xuICAgIHRhYmxlTGl0ZXJhbHM6IGFueTtcbiAgICBwcm90ZWN0ZWQgc29ydDogUG9UYWJsZUNvbHVtblNvcnQ7XG4gICAgcHJpdmF0ZSBmaWx0ZXJTdWJzY3JpcHRpb247XG4gICAgcHJpdmF0ZSBzZWFyY2hTdWJzY3JpcHRpb247XG4gICAgcHJpdmF0ZSBzaG93TW9yZVN1YnNjcmlwdGlvbjtcbiAgICBwb01vZGFsOiBQb01vZGFsQ29tcG9uZW50O1xuICAgIC8qKlxuICAgICAqIExpc3RhIGRhcyBjb2x1bmFzIGRhIHRhYmVsYS5cbiAgICAgKiBFc3NhIHByb3ByaWVkYWRlIGRldmUgcmVjZWJlciB1bSBhcnJheSBkZSBvYmpldG9zIHF1ZSBpbXBsZW1lbnRhbSBhIGludGVyZmFjZSBQb0xvb2t1cENvbHVtbi5cbiAgICAgKi9cbiAgICBjb2x1bW5zOiBBcnJheTxQb0xvb2t1cENvbHVtbj47XG4gICAgLyoqIExpc3RhIGRlIGl0ZW5zIGRhIHRhYmVsYS4gKi9cbiAgICBpdGVtczogQXJyYXk8YW55PjtcbiAgICAvKiogT2JqZXRvIGNvbSBhcyBsaXRlcmFpcyB1c2FkYXMgbm8gYHBvLWxvb2t1cC1tb2RhbGAuICovXG4gICAgc2V0IGxpdGVyYWxzKHZhbHVlOiBQb0xvb2t1cExpdGVyYWxzKTtcbiAgICBnZXQgbGl0ZXJhbHMoKTogUG9Mb29rdXBMaXRlcmFscztcbiAgICAvKiogVMOtdHVsbyBkYSBtb2RhbC4gKi9cbiAgICBzZXQgdGl0bGUodmFsdWU6IHN0cmluZyk7XG4gICAgZ2V0IHRpdGxlKCk6IHN0cmluZztcbiAgICAvKiogQ2xhc3NlIGRlIHNlcnZpw6dvIGNvbSBhIGltcGxlbWVudGHDp8OjbyBkbyBjbGllbnRlLiAqL1xuICAgIGZpbHRlclNlcnZpY2U6IFBvTG9va3VwRmlsdGVyO1xuICAgIC8qKiBDbGFzc2UgZGUgc2VydmnDp28gY29tIGEgaW1wbGVtZW50YcOnw6NvIGRvIGNsaWVudGUuICovXG4gICAgZmlsdGVyUGFyYW1zOiBhbnk7XG4gICAgLyoqIEV2ZW50byB1dGlsaXphZG8gYW8gc2VsZWNpb25hciB1bSByZWdpc3RybyBkYSB0YWJlbGEuICovXG4gICAgbW9kZWw6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIGNvbnN0cnVjdG9yKGxhbmd1YWdlU2VydmljZTogUG9MYW5ndWFnZVNlcnZpY2UpO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBzZWFyY2goKTogdm9pZDtcbiAgICBzaG93TW9yZUV2ZW50KCk6IHZvaWQ7XG4gICAgYWJzdHJhY3Qgb3Blbk1vZGFsKCk6IHZvaWQ7XG4gICAgcHJpdmF0ZSBnZXRGaWx0ZXJlZEl0ZW1zO1xuICAgIHByaXZhdGUgZ2V0RmlsdGVyZWRQYXJhbXM7XG4gICAgcHJpdmF0ZSBnZXRPcmRlclBhcmFtO1xuICAgIHByaXZhdGUgaW5pdGlhbGl6ZURhdGE7XG4gICAgcHJpdmF0ZSBzZXRMb29rdXBSZXNwb25zZVByb3BlcnRpZXM7XG4gICAgcHJpdmF0ZSBzZXRUYWJsZUxpdGVyYWxzO1xufVxuIl19