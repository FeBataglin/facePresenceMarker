/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
var MenuDatasulService = /** @class */ (function () {
    function MenuDatasulService() {
    }
    /**
     * @param {?} program
     * @return {?}
     */
    MenuDatasulService.prototype.callProgress = /**
     * @param {?} program
     * @return {?}
     */
    function (program) {
        /**
         * var program = {};
         * program['prg'] = "cd0210";
         * program['params'] = '01|123456'
         */
        parent.postMessage({ program: program }, '*');
    };
    /**
     * @param {?} notification
     * @return {?}
     */
    MenuDatasulService.prototype.sendNotification = /**
     * @param {?} notification
     * @return {?}
     */
    function (notification) {
        /**
         * var notification = {};
         * notification['type'] = 'success';
         * notification['title'] = 'Notification Title'
         * notification['detail'] = 'Notification Detail'
         */
        parent.postMessage({ notification: notification }, '*');
    };
    /**
     * @param {?} programName
     * @param {?} params
     * @param {?=} parent
     * @return {?}
     */
    MenuDatasulService.prototype.openPath = /**
     * @param {?} programName
     * @param {?} params
     * @param {?=} parent
     * @return {?}
     */
    function (programName, params, parent) {
        if (parent === void 0) { parent = true; }
        /** @type {?} */
        var datasulPath = window.location.href.indexOf('totvs-menu') > 0 ? 'totvs-menu' : 'menu-html';
        /** @type {?} */
        var baseUrl = "/" + datasulPath + "/#/" + datasulPath + "/program-html/" + programName + "/#";
        if (parent) {
            window.open(baseUrl + "/" + params, '_parent');
        }
        else {
            window.open(baseUrl + "/" + params);
        }
    };
    MenuDatasulService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    MenuDatasulService.ctorParameters = function () { return []; };
    return MenuDatasulService;
}());
export { MenuDatasulService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVudS1kYXRhc3VsLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9kdHMtYmFja29mZmljZS11dGlsLyIsInNvdXJjZXMiOlsibGliL3NlcnZpY2VzL21lbnUtZGF0YXN1bC5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTNDO0lBR0U7SUFBZ0IsQ0FBQzs7Ozs7SUFFVix5Q0FBWTs7OztJQUFuQixVQUFvQixPQUFPO1FBRXpCOzs7O1dBSUc7UUFFSCxNQUFNLENBQUMsV0FBVyxDQUFDLEVBQUUsT0FBTyxTQUFBLEVBQUUsRUFBRSxHQUFHLENBQUMsQ0FBQztJQUN2QyxDQUFDOzs7OztJQUVNLDZDQUFnQjs7OztJQUF2QixVQUF3QixZQUFZO1FBRWxDOzs7OztXQUtHO1FBRUgsTUFBTSxDQUFDLFdBQVcsQ0FBQyxFQUFFLFlBQVksY0FBQSxFQUFFLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFDNUMsQ0FBQzs7Ozs7OztJQUVNLHFDQUFROzs7Ozs7SUFBZixVQUFnQixXQUFtQixFQUFFLE1BQVcsRUFBRSxNQUFzQjtRQUF0Qix1QkFBQSxFQUFBLGFBQXNCOztZQUNoRSxXQUFXLEdBQUcsTUFBTSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxXQUFXOztZQUN6RixPQUFPLEdBQUcsTUFBSSxXQUFXLFdBQU0sV0FBVyxzQkFBaUIsV0FBVyxPQUFJO1FBRWhGLElBQUksTUFBTSxFQUFFO1lBQ1YsTUFBTSxDQUFDLElBQUksQ0FBSSxPQUFPLFNBQUksTUFBUSxFQUFFLFNBQVMsQ0FBQyxDQUFDO1NBQ2hEO2FBQU07WUFDTCxNQUFNLENBQUMsSUFBSSxDQUFJLE9BQU8sU0FBSSxNQUFRLENBQUMsQ0FBQztTQUNyQztJQUNILENBQUM7O2dCQXJDRixVQUFVOzs7O0lBc0NYLHlCQUFDO0NBQUEsQUF0Q0QsSUFzQ0M7U0FyQ1ksa0JBQWtCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuQEluamVjdGFibGUoKVxyXG5leHBvcnQgY2xhc3MgTWVudURhdGFzdWxTZXJ2aWNlIHtcclxuXHJcbiAgY29uc3RydWN0b3IoKSB7IH1cclxuXHJcbiAgcHVibGljIGNhbGxQcm9ncmVzcyhwcm9ncmFtKSB7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiB2YXIgcHJvZ3JhbSA9IHt9O1xyXG4gICAgICogcHJvZ3JhbVsncHJnJ10gPSBcImNkMDIxMFwiO1xyXG4gICAgICogcHJvZ3JhbVsncGFyYW1zJ10gPSAnMDF8MTIzNDU2J1xyXG4gICAgICovXHJcblxyXG4gICAgcGFyZW50LnBvc3RNZXNzYWdlKHsgcHJvZ3JhbSB9LCAnKicpO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIHNlbmROb3RpZmljYXRpb24obm90aWZpY2F0aW9uKSB7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiB2YXIgbm90aWZpY2F0aW9uID0ge307XHJcbiAgICAgKiBub3RpZmljYXRpb25bJ3R5cGUnXSA9ICdzdWNjZXNzJztcclxuICAgICAqIG5vdGlmaWNhdGlvblsndGl0bGUnXSA9ICdOb3RpZmljYXRpb24gVGl0bGUnXHJcbiAgICAgKiBub3RpZmljYXRpb25bJ2RldGFpbCddID0gJ05vdGlmaWNhdGlvbiBEZXRhaWwnXHJcbiAgICAgKi9cclxuXHJcbiAgICBwYXJlbnQucG9zdE1lc3NhZ2UoeyBub3RpZmljYXRpb24gfSwgJyonKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBvcGVuUGF0aChwcm9ncmFtTmFtZTogc3RyaW5nLCBwYXJhbXM6IGFueSwgcGFyZW50OiBib29sZWFuID0gdHJ1ZSk6IHZvaWQge1xyXG4gICAgY29uc3QgZGF0YXN1bFBhdGggPSB3aW5kb3cubG9jYXRpb24uaHJlZi5pbmRleE9mKCd0b3R2cy1tZW51JykgPiAwID8gJ3RvdHZzLW1lbnUnIDogJ21lbnUtaHRtbCc7XHJcbiAgICBjb25zdCBiYXNlVXJsID0gYC8ke2RhdGFzdWxQYXRofS8jLyR7ZGF0YXN1bFBhdGh9L3Byb2dyYW0taHRtbC8ke3Byb2dyYW1OYW1lfS8jYDtcclxuXHJcbiAgICBpZiAocGFyZW50KSB7XHJcbiAgICAgIHdpbmRvdy5vcGVuKGAke2Jhc2VVcmx9LyR7cGFyYW1zfWAsICdfcGFyZW50Jyk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB3aW5kb3cub3BlbihgJHtiYXNlVXJsfS8ke3BhcmFtc31gKTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuIl19