/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*
Versão: 1.009
Data Criação: 06/08/2018
*/
var DisclaimerUtil = /** @class */ (function () {
    function DisclaimerUtil(poNotification, poI18nPipe, literals) {
        this.literals = {};
        this.poNotification = poNotification;
        this.poI18nPipe = poI18nPipe;
        this.literals = literals;
    }
    /**
     * @param {?} property
     * @param {?} value
     * @param {?=} hideClose
     * @param {?=} tradValue
     * @param {?=} vldBlank
     * @return {?}
     */
    DisclaimerUtil.prototype.makeDisclaimer = /**
     * @param {?} property
     * @param {?} value
     * @param {?=} hideClose
     * @param {?=} tradValue
     * @param {?=} vldBlank
     * @return {?}
     */
    function (property, value, hideClose, tradValue, vldBlank) {
        if (hideClose === void 0) { hideClose = false; }
        if (tradValue === void 0) { tradValue = false; }
        if (vldBlank === void 0) { vldBlank = false; }
        if (value === null || value === undefined) {
            return { label: '', property: '', value: '' };
        }
        if (vldBlank && value === '') {
            return { label: '', property: '', value: '' };
        }
        return {
            hideClose: hideClose,
            label: this.literals[property] + ": " + (tradValue ? this.literals[value] : value),
            property: "" + property,
            value: "" + value
        };
    };
    /**
     * @param {?} property
     * @param {?} value
     * @param {?=} hideClose
     * @param {?=} vldBlank
     * @return {?}
     */
    DisclaimerUtil.prototype.makeDisclaimerFromNumber = /**
     * @param {?} property
     * @param {?} value
     * @param {?=} hideClose
     * @param {?=} vldBlank
     * @return {?}
     */
    function (property, value, hideClose, vldBlank) {
        if (hideClose === void 0) { hideClose = false; }
        if (vldBlank === void 0) { vldBlank = false; }
        if (value === null || value === undefined) {
            return { label: '', property: '', value: '' };
        }
        if (vldBlank && value === 0) {
            return { label: '', property: '', value: '' };
        }
        return {
            hideClose: hideClose,
            label: this.literals[property] + ": " + value,
            property: "" + property,
            value: "" + value
        };
    };
    /**
     * @param {?} property
     * @param {?} value
     * @param {?=} hideClose
     * @return {?}
     */
    DisclaimerUtil.prototype.makeDisclaimerFromBoolean = /**
     * @param {?} property
     * @param {?} value
     * @param {?=} hideClose
     * @return {?}
     */
    function (property, value, hideClose) {
        if (hideClose === void 0) { hideClose = false; }
        if (value === null || value === undefined) {
            return { label: '', property: '', value: '' };
        }
        return {
            hideClose: hideClose,
            label: this.literals[property] + ": " + (value ? this.literals['yes'] : this.literals['no']),
            property: "" + property,
            value: "" + value
        };
    };
    /**
     * @param {?} property
     * @param {?} value
     * @param {?=} hideClose
     * @return {?}
     */
    DisclaimerUtil.prototype.makeDisclaimerFromDate = /**
     * @param {?} property
     * @param {?} value
     * @param {?=} hideClose
     * @return {?}
     */
    function (property, value, hideClose) {
        if (hideClose === void 0) { hideClose = false; }
        /** @type {?} */
        var dDate = this.ajustDate(value);
        if (!this.isValidDate(dDate)) {
            return { label: '', property: '', value: '' };
        }
        return {
            hideClose: hideClose,
            label: this.literals[property] + ": " + dDate.toLocaleDateString(),
            property: "" + property,
            value: "" + this.dateToQueryParam(dDate)
        };
    };
    /**
     * @param {?} property
     * @param {?} value
     * @param {?=} length
     * @param {?=} hideClose
     * @param {?=} tradValue
     * @return {?}
     */
    DisclaimerUtil.prototype.makeDisclaimerFromMultiSelect = /**
     * @param {?} property
     * @param {?} value
     * @param {?=} length
     * @param {?=} hideClose
     * @param {?=} tradValue
     * @return {?}
     */
    function (property, value, length, hideClose, tradValue) {
        var _this = this;
        if (length === void 0) { length = 0; }
        if (hideClose === void 0) { hideClose = false; }
        if (tradValue === void 0) { tradValue = false; }
        /** @type {?} */
        var lstLabels = '';
        /** @type {?} */
        var lstValues = '';
        if (!value) {
            return { label: '', property: '', value: '' };
        }
        if (value.length === 0 || (length > 0 && value.length === length)) {
            lstLabels = this.literals['all'];
            lstValues = 'all';
        }
        else {
            value.map((/**
             * @param {?} item
             * @return {?}
             */
            function (item) {
                if (lstLabels !== '') {
                    lstLabels = lstLabels + ", ";
                }
                if (lstValues !== '') {
                    lstValues = lstValues + ",";
                }
                lstLabels = "" + lstLabels + (tradValue ? _this.literals[item] : item);
                lstValues = "" + lstValues + item;
            }));
        }
        return {
            hideClose: hideClose,
            label: this.literals[property] + ": " + lstLabels,
            property: "" + property,
            value: "" + lstValues
        };
    };
    /**
     * @param {?} property
     * @param {?} value
     * @param {?=} length
     * @param {?=} hideClose
     * @return {?}
     */
    DisclaimerUtil.prototype.makeDisclaimerFromCheckboxGroup = /**
     * @param {?} property
     * @param {?} value
     * @param {?=} length
     * @param {?=} hideClose
     * @return {?}
     */
    function (property, value, length, hideClose) {
        var _this = this;
        if (length === void 0) { length = 0; }
        if (hideClose === void 0) { hideClose = false; }
        /** @type {?} */
        var lstLabels = '';
        /** @type {?} */
        var lstValues = '';
        if (!value) {
            return { label: '', property: '', value: '' };
        }
        if (value.length === 0) {
            lstLabels = this.literals['none'];
            lstValues = 'none';
        }
        else if (length > 0 && value.length === length) {
            lstLabels = this.literals['all'];
            lstValues = 'all';
        }
        else {
            value.map((/**
             * @param {?} checkParam
             * @return {?}
             */
            function (checkParam) {
                if (lstLabels !== '') {
                    lstLabels = lstLabels + ", ";
                }
                if (lstValues !== '') {
                    lstValues = lstValues + ",";
                }
                lstLabels = "" + lstLabels + _this.literals[checkParam];
                lstValues = "" + lstValues + checkParam;
            }));
        }
        return {
            hideClose: hideClose,
            label: this.literals[property] + ": " + lstLabels,
            property: "" + property,
            value: "" + lstValues
        };
    };
    /**
     * @param {?} property
     * @param {?} value
     * @param {?=} hideClose
     * @param {?=} validateEqual
     * @return {?}
     */
    DisclaimerUtil.prototype.makeDisclaimerFromRangeCharacter = /**
     * @param {?} property
     * @param {?} value
     * @param {?=} hideClose
     * @param {?=} validateEqual
     * @return {?}
     */
    function (property, value, hideClose, validateEqual) {
        if (hideClose === void 0) { hideClose = false; }
        if (validateEqual === void 0) { validateEqual = true; }
        if (value.valInitial === null || value.valInitial === undefined) {
            value.valInitial = value.iniInitial;
        }
        if (value.valFinal === null || value.valFinal === undefined) {
            value.valFinal = value.iniFinal;
        }
        if (validateEqual &&
            value.iniInitial === value.valInitial &&
            value.iniFinal === value.valFinal) {
            return { label: '', property: '', value: '' };
        }
        return {
            hideClose: hideClose,
            label: this.poI18nPipe.transform(this.literals['filterRange'], [this.literals[property], "'" + value.valInitial + "'", "'" + value.valFinal + "'"]),
            property: "" + property,
            value: value.valInitial + ";" + value.valFinal
        };
    };
    /**
     * @param {?} property
     * @param {?} value
     * @param {?=} hideClose
     * @param {?=} validateEqual
     * @return {?}
     */
    DisclaimerUtil.prototype.makeDisclaimerFromRangeNumber = /**
     * @param {?} property
     * @param {?} value
     * @param {?=} hideClose
     * @param {?=} validateEqual
     * @return {?}
     */
    function (property, value, hideClose, validateEqual) {
        if (hideClose === void 0) { hideClose = false; }
        if (validateEqual === void 0) { validateEqual = true; }
        if (value.valInitial === null || value.valInitial === undefined) {
            value.valInitial = value.iniInitial;
        }
        if (value.valFinal === null || value.valFinal === undefined) {
            value.valFinal = value.iniFinal;
        }
        if (validateEqual &&
            value.iniInitial === value.valInitial &&
            value.iniFinal === value.valFinal) {
            return { label: '', property: '', value: '' };
        }
        return {
            hideClose: hideClose,
            label: this.poI18nPipe.transform(this.literals['filterRange'], [this.literals[property], value.valInitial, value.valFinal]),
            property: "" + property,
            value: value.valInitial + ";" + value.valFinal
        };
    };
    /**
     * @param {?} property
     * @param {?} value
     * @param {?=} hideClose
     * @param {?=} validateEqual
     * @return {?}
     */
    DisclaimerUtil.prototype.makeDisclaimerFromRangeDate = /**
     * @param {?} property
     * @param {?} value
     * @param {?=} hideClose
     * @param {?=} validateEqual
     * @return {?}
     */
    function (property, value, hideClose, validateEqual) {
        if (hideClose === void 0) { hideClose = false; }
        if (validateEqual === void 0) { validateEqual = true; }
        /** @type {?} */
        var valInitDate = this.ajustDate(value.valInitial);
        /** @type {?} */
        var valFinalDate = this.ajustDate(value.valFinal);
        if (!this.isValidDate(valInitDate)) {
            valInitDate = value.iniInitial;
            value.valInitial = value.iniInitial;
        }
        if (!this.isValidDate(valFinalDate)) {
            valFinalDate = value.iniFinal;
            value.valFinal = value.iniFinal;
        }
        if (validateEqual &&
            this.dateToQueryParam(value.iniInitial) === this.dateToQueryParam(valInitDate) &&
            this.dateToQueryParam(value.iniFinal) === this.dateToQueryParam(valFinalDate)) {
            return { label: '', property: '', value: '' };
        }
        return {
            hideClose: hideClose,
            label: this.poI18nPipe.transform(this.literals['filterRange'], [this.literals[property], valInitDate.toLocaleDateString(), valFinalDate.toLocaleDateString()]),
            property: "" + property,
            value: this.dateToQueryParam(valInitDate) + ";" + this.dateToQueryParam(valFinalDate)
        };
    };
    /**
     * @param {?} disclaimers
     * @param {?} property
     * @param {?} defaultValue
     * @return {?}
     */
    DisclaimerUtil.prototype.atzCharFromDisclamer = /**
     * @param {?} disclaimers
     * @param {?} property
     * @param {?} defaultValue
     * @return {?}
     */
    function (disclaimers, property, defaultValue) {
        /** @type {?} */
        var returnValue = defaultValue;
        if (disclaimers && disclaimers.length > 0) {
            disclaimers.find((/**
             * @param {?} item
             * @return {?}
             */
            function (item) {
                if (item.property === property) {
                    if (item.value === null) {
                        return false;
                    }
                    returnValue = item.value;
                    return true;
                }
                return false;
            }));
        }
        return returnValue;
    };
    /**
     * @param {?} disclaimers
     * @param {?} property
     * @param {?} defaultValue
     * @return {?}
     */
    DisclaimerUtil.prototype.atzNumberFromDisclamer = /**
     * @param {?} disclaimers
     * @param {?} property
     * @param {?} defaultValue
     * @return {?}
     */
    function (disclaimers, property, defaultValue) {
        /** @type {?} */
        var returnValue = defaultValue;
        if (disclaimers && disclaimers.length > 0) {
            disclaimers.find((/**
             * @param {?} item
             * @return {?}
             */
            function (item) {
                if (item.property === property) {
                    if (item.value === null) {
                        return false;
                    }
                    returnValue = item.value;
                    return true;
                }
                return false;
            }));
        }
        return returnValue;
    };
    /**
     * @param {?} disclaimers
     * @param {?} property
     * @param {?} defaultValue
     * @return {?}
     */
    DisclaimerUtil.prototype.atzBooleanFromDisclamer = /**
     * @param {?} disclaimers
     * @param {?} property
     * @param {?} defaultValue
     * @return {?}
     */
    function (disclaimers, property, defaultValue) {
        /** @type {?} */
        var returnValue = defaultValue;
        if (disclaimers && disclaimers.length > 0) {
            /** @type {?} */
            var disclaimerFind = disclaimers.find((/**
             * @param {?} item
             * @return {?}
             */
            function (item) { return item.property === property; }));
            if (disclaimerFind && disclaimerFind.value !== null && disclaimerFind.value !== undefined) {
                if (disclaimerFind.value === 'true') {
                    return true;
                }
                else {
                    return false;
                }
            }
        }
        return returnValue;
    };
    /**
     * @param {?} disclaimers
     * @param {?} property
     * @param {?} defaultValue
     * @return {?}
     */
    DisclaimerUtil.prototype.atzDateFromDisclamer = /**
     * @param {?} disclaimers
     * @param {?} property
     * @param {?} defaultValue
     * @return {?}
     */
    function (disclaimers, property, defaultValue) {
        var _this = this;
        /** @type {?} */
        var returnValue = this.ajustDate(defaultValue);
        if (disclaimers && disclaimers.length > 0) {
            disclaimers.find((/**
             * @param {?} item
             * @return {?}
             */
            function (item) {
                if (item.property === property) {
                    if (item.value === null) {
                        return false;
                    }
                    returnValue = _this.ajustDate(item.value);
                    return true;
                }
                return false;
            }));
        }
        return returnValue;
    };
    /**
     * @param {?} disclaimers
     * @param {?} property
     * @param {?} defaultValue
     * @return {?}
     */
    DisclaimerUtil.prototype.atzMultiSelectCharFromDisclamer = /**
     * @param {?} disclaimers
     * @param {?} property
     * @param {?} defaultValue
     * @return {?}
     */
    function (disclaimers, property, defaultValue) {
        return this.atzMultiSelectFromDisclamer('char', disclaimers, property, defaultValue);
    };
    /**
     * @param {?} disclaimers
     * @param {?} property
     * @param {?} defaultValue
     * @return {?}
     */
    DisclaimerUtil.prototype.atzMultiSelectNumberFromDisclamer = /**
     * @param {?} disclaimers
     * @param {?} property
     * @param {?} defaultValue
     * @return {?}
     */
    function (disclaimers, property, defaultValue) {
        return this.atzMultiSelectFromDisclamer('number', disclaimers, property, defaultValue);
    };
    /**
     * @param {?} type
     * @param {?} disclaimers
     * @param {?} property
     * @param {?} defaultValue
     * @return {?}
     */
    DisclaimerUtil.prototype.atzMultiSelectFromDisclamer = /**
     * @param {?} type
     * @param {?} disclaimers
     * @param {?} property
     * @param {?} defaultValue
     * @return {?}
     */
    function (type, disclaimers, property, defaultValue) {
        /** @type {?} */
        var returnValue = [];
        defaultValue.map((/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            returnValue.push(item.value);
        }));
        if (disclaimers && disclaimers.length > 0) {
            disclaimers.find((/**
             * @param {?} item
             * @return {?}
             */
            function (item) {
                if (item.property === property) {
                    if (item.value === null || item.value === 'all' || item.value === 'none') {
                        return false;
                    }
                    returnValue = [];
                    item.value.split(',').forEach((/**
                     * @param {?} itemOpt
                     * @return {?}
                     */
                    function (itemOpt) {
                        if (type === 'char') {
                            returnValue.push(itemOpt);
                        }
                        if (type === 'number') {
                            returnValue.push(+itemOpt);
                        }
                    }));
                    return true;
                }
                return false;
            }));
        }
        return returnValue;
    };
    /**
     * @param {?} disclaimers
     * @param {?} property
     * @param {?} options
     * @return {?}
     */
    DisclaimerUtil.prototype.atzCheckboxFromDisclamer = /**
     * @param {?} disclaimers
     * @param {?} property
     * @param {?} options
     * @return {?}
     */
    function (disclaimers, property, options) {
        /** @type {?} */
        var returnValue = [];
        options.map((/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            returnValue.push(item.value);
        }));
        if (disclaimers && disclaimers.length > 0) {
            disclaimers.find((/**
             * @param {?} item
             * @return {?}
             */
            function (item) {
                if (item.property === property) {
                    if (item.value === null || item.value === 'all' || item.value === 'none') {
                        return false;
                    }
                    returnValue = [];
                    item.value.split(',').forEach((/**
                     * @param {?} itemOpt
                     * @return {?}
                     */
                    function (itemOpt) {
                        returnValue.push(itemOpt);
                    }));
                    return true;
                }
                return false;
            }));
        }
        return returnValue;
    };
    /**
     * @param {?} disclaimers
     * @param {?} property
     * @param {?} rangeChar
     * @return {?}
     */
    DisclaimerUtil.prototype.atzRangeCharFromDisclamer = /**
     * @param {?} disclaimers
     * @param {?} property
     * @param {?} rangeChar
     * @return {?}
     */
    function (disclaimers, property, rangeChar) {
        /** @type {?} */
        var value = '';
        if (disclaimers && disclaimers.length > 0) {
            disclaimers.find((/**
             * @param {?} item
             * @return {?}
             */
            function (item) {
                if (item.property === property) {
                    if (item.value === null) {
                        return false;
                    }
                    value = item.value;
                    return true;
                }
                return false;
            }));
        }
        return this.atzRangeCharFromQueryParam(value, rangeChar);
    };
    /**
     * @param {?} disclaimers
     * @param {?} property
     * @param {?} rangeNum
     * @return {?}
     */
    DisclaimerUtil.prototype.atzRangeNumFromDisclamer = /**
     * @param {?} disclaimers
     * @param {?} property
     * @param {?} rangeNum
     * @return {?}
     */
    function (disclaimers, property, rangeNum) {
        /** @type {?} */
        var value = '';
        if (disclaimers && disclaimers.length > 0) {
            disclaimers.find((/**
             * @param {?} item
             * @return {?}
             */
            function (item) {
                if (item.property === property) {
                    if (item.value === null) {
                        return false;
                    }
                    value = item.value;
                    return true;
                }
                return false;
            }));
        }
        return this.atzRangeNumFromQueryParam(value, rangeNum);
    };
    /**
     * @param {?} disclaimers
     * @param {?} property
     * @param {?} rangeDate
     * @return {?}
     */
    DisclaimerUtil.prototype.atzRangeDateFromDisclamer = /**
     * @param {?} disclaimers
     * @param {?} property
     * @param {?} rangeDate
     * @return {?}
     */
    function (disclaimers, property, rangeDate) {
        /** @type {?} */
        var value = '';
        if (disclaimers && disclaimers.length > 0) {
            disclaimers.find((/**
             * @param {?} item
             * @return {?}
             */
            function (item) {
                if (item.property === property) {
                    if (item.value === null) {
                        return false;
                    }
                    value = item.value;
                    return true;
                }
                return false;
            }));
        }
        return this.atzRangeDateFromQueryParam(value, rangeDate);
    };
    /**
     * @param {?} value
     * @param {?} rangeChar
     * @return {?}
     */
    DisclaimerUtil.prototype.atzRangeCharFromQueryParam = /**
     * @param {?} value
     * @param {?} rangeChar
     * @return {?}
     */
    function (value, rangeChar) {
        rangeChar.valInitial = rangeChar.iniInitial;
        rangeChar.valFinal = rangeChar.iniFinal;
        if (!value || value === '') {
            return rangeChar;
        }
        rangeChar.valInitial = value.split(';')[0];
        rangeChar.valFinal = value.split(';')[1];
        if (rangeChar.valFinal === null || rangeChar.valFinal === undefined) {
            rangeChar.valFinal = rangeChar.iniFinal;
        }
        return rangeChar;
    };
    /**
     * @param {?} value
     * @param {?} rangeNum
     * @return {?}
     */
    DisclaimerUtil.prototype.atzRangeNumFromQueryParam = /**
     * @param {?} value
     * @param {?} rangeNum
     * @return {?}
     */
    function (value, rangeNum) {
        rangeNum.valInitial = rangeNum.iniInitial;
        rangeNum.valFinal = rangeNum.iniFinal;
        if (!value || value === '') {
            return rangeNum;
        }
        rangeNum.valInitial = +value.split(';')[0];
        rangeNum.valFinal = +value.split(';')[1];
        if (rangeNum.valFinal === null || rangeNum.valFinal === undefined) {
            rangeNum.valFinal = rangeNum.iniFinal;
        }
        return rangeNum;
    };
    /**
     * @param {?} value
     * @param {?} rangeDate
     * @return {?}
     */
    DisclaimerUtil.prototype.atzRangeDateFromQueryParam = /**
     * @param {?} value
     * @param {?} rangeDate
     * @return {?}
     */
    function (value, rangeDate) {
        rangeDate.valInitial = rangeDate.iniInitial;
        rangeDate.valFinal = rangeDate.iniFinal;
        if (!value || value === '') {
            return rangeDate;
        }
        rangeDate.valInitial = this.queryParamToDate(value.split(';')[0]);
        rangeDate.valFinal = this.queryParamToDate(value.split(';')[1]);
        if (rangeDate.valFinal === null || rangeDate.valFinal === undefined) {
            rangeDate.valFinal = rangeDate.iniFinal;
        }
        return rangeDate;
    };
    /**
     * @param {?} date
     * @return {?}
     */
    DisclaimerUtil.prototype.dateToQueryParam = /**
     * @param {?} date
     * @return {?}
     */
    function (date) {
        /** @type {?} */
        var iDay = date.getDate();
        /** @type {?} */
        var iMonth = date.getMonth() + 1;
        /** @type {?} */
        var iYear = date.getFullYear();
        return iYear + "-" + this.pad(iMonth) + "-" + this.pad(iDay);
    };
    /**
     * @param {?} param
     * @return {?}
     */
    DisclaimerUtil.prototype.queryParamToDate = /**
     * @param {?} param
     * @return {?}
     */
    function (param) {
        /** @type {?} */
        var iDay = +param.split('-')[2];
        /** @type {?} */
        var iMonth = +param.split('-')[1];
        /** @type {?} */
        var iYear = +param.split('-')[0];
        return new Date(iYear, iMonth - 1, iDay);
    };
    /**
     * @param {?} date
     * @return {?}
     */
    DisclaimerUtil.prototype.isValidDate = /**
     * @param {?} date
     * @return {?}
     */
    function (date) {
        return date instanceof Date && !isNaN(date.getTime());
    };
    /**
     * @param {?} param
     * @return {?}
     */
    DisclaimerUtil.prototype.ajustDate = /**
     * @param {?} param
     * @return {?}
     */
    function (param) {
        if (param instanceof Date) {
            return param;
        }
        if (!param) {
            return param;
        }
        return this.queryParamToDate(param.split('T')[0]);
    };
    /**
     * @param {?} number
     * @return {?}
     */
    DisclaimerUtil.prototype.pad = /**
     * @param {?} number
     * @return {?}
     */
    function (number) {
        if (number < 10) {
            return '0' + number;
        }
        return number;
    };
    return DisclaimerUtil;
}());
export { DisclaimerUtil };
if (false) {
    /** @type {?} */
    DisclaimerUtil.prototype.poNotification;
    /** @type {?} */
    DisclaimerUtil.prototype.poI18nPipe;
    /** @type {?} */
    DisclaimerUtil.prototype.literals;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlzY2xhaW1lci51dGlsLmpzIiwic291cmNlUm9vdCI6Im5nOi8vZHRzLWJhY2tvZmZpY2UtdXRpbC8iLCJzb3VyY2VzIjpbImxpYi91dGlscy9kaXNjbGFpbWVyLnV0aWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFTQTtJQUtJLHdCQUNJLGNBQXFDLEVBQ3JDLFVBQXNCLEVBQ3RCLFFBQWdCO1FBTHBCLGFBQVEsR0FBUSxFQUFFLENBQUM7UUFPZixJQUFJLENBQUMsY0FBYyxHQUFHLGNBQWMsQ0FBQztRQUNyQyxJQUFJLENBQUMsVUFBVSxHQUFHLFVBQVUsQ0FBQztRQUM3QixJQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztJQUM3QixDQUFDOzs7Ozs7Ozs7SUFFTSx1Q0FBYzs7Ozs7Ozs7SUFBckIsVUFBc0IsUUFBZ0IsRUFBRSxLQUFhLEVBQUUsU0FBaUIsRUFBRSxTQUFpQixFQUFFLFFBQWdCO1FBQXRELDBCQUFBLEVBQUEsaUJBQWlCO1FBQUUsMEJBQUEsRUFBQSxpQkFBaUI7UUFBRSx5QkFBQSxFQUFBLGdCQUFnQjtRQUN6RyxJQUFJLEtBQUssS0FBSyxJQUFJLElBQUksS0FBSyxLQUFLLFNBQVMsRUFBRTtZQUN2QyxPQUFPLEVBQUUsS0FBSyxFQUFFLEVBQUUsRUFBRSxRQUFRLEVBQUUsRUFBRSxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUUsQ0FBQztTQUNqRDtRQUVELElBQUksUUFBUSxJQUFJLEtBQUssS0FBSyxFQUFFLEVBQUU7WUFDMUIsT0FBTyxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUUsUUFBUSxFQUFFLEVBQUUsRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLENBQUM7U0FDakQ7UUFFRCxPQUFPO1lBQ0gsU0FBUyxXQUFBO1lBQ1QsS0FBSyxFQUFLLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLFdBQUssU0FBUyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDLENB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SyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7O1lBQzNCLE1BQU0sR0FBRyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDOztZQUM3QixLQUFLLEdBQUcsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUVsQyxPQUFPLElBQUksSUFBSSxDQUFDLEtBQUssRUFBRSxNQUFNLEdBQUcsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQzdDLENBQUM7Ozs7O0lBRU0sb0NBQVc7Ozs7SUFBbEIsVUFBbUIsSUFBVTtRQUN6QixPQUFPLElBQUksWUFBWSxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUM7SUFDMUQsQ0FBQzs7Ozs7SUFFTSxrQ0FBUzs7OztJQUFoQixVQUFpQixLQUFVO1FBQ3ZCLElBQUksS0FBSyxZQUFZLElBQUksRUFBRTtZQUFFLE9BQU8sS0FBSyxDQUFDO1NBQUU7UUFDNUMsSUFBSSxDQUFDLEtBQUssRUFBRTtZQUFFLE9BQU8sS0FBSyxDQUFDO1NBQUU7UUFFN0IsT0FBTyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ3RELENBQUM7Ozs7O0lBRU0sNEJBQUc7Ozs7SUFBVixVQUFXLE1BQU07UUFDYixJQUFJLE1BQU0sR0FBRyxFQUFFLEVBQUU7WUFDYixPQUFPLEdBQUcsR0FBRyxNQUFNLENBQUM7U0FDdkI7UUFDRCxPQUFPLE1BQU0sQ0FBQztJQUNsQixDQUFDO0lBQ0wscUJBQUM7QUFBRCxDQUFDLEFBOWNELElBOGNDOzs7O0lBN2NHLHdDQUFzQzs7SUFDdEMsb0NBQXVCOztJQUN2QixrQ0FBbUIiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxyXG5WZXJzw6NvOiAxLjAwOVxyXG5EYXRhIENyaWHDp8OjbzogMDYvMDgvMjAxOFxyXG4qL1xyXG5cclxuaW1wb3J0IHsgUG9EaXNjbGFpbWVyLCBQb0kxOG5QaXBlLCBQb0NoZWNrYm94R3JvdXBPcHRpb24sIFBvTXVsdGlzZWxlY3RPcHRpb24gfSBmcm9tICdAcG8tdWkvbmctY29tcG9uZW50cyc7XHJcbmltcG9ydCB7IElGaWx0ZXJSYW5nZUNoYXJhY3RlciwgSUZpbHRlclJhbmdlTnVtYmVyLCBJRmlsdGVyUmFuZ2VEYXRlIH0gZnJvbSAnLi4vLi4vbGliL2ludGVyZmFjZXMvZmlsdGVyLXJhbmdlLmludGVyZmFjZSc7XHJcbmltcG9ydCB7IFBvTm90aWZpY2F0aW9uU2VydmljZSB9IGZyb20gJ0Bwby11aS9uZy1jb21wb25lbnRzJztcclxuXHJcbmV4cG9ydCBjbGFzcyBEaXNjbGFpbWVyVXRpbCB7XHJcbiAgICBwb05vdGlmaWNhdGlvbjogUG9Ob3RpZmljYXRpb25TZXJ2aWNlO1xyXG4gICAgcG9JMThuUGlwZTogUG9JMThuUGlwZTtcclxuICAgIGxpdGVyYWxzOiBhbnkgPSB7fTtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihcclxuICAgICAgICBwb05vdGlmaWNhdGlvbjogUG9Ob3RpZmljYXRpb25TZXJ2aWNlLFxyXG4gICAgICAgIHBvSTE4blBpcGU6IFBvSTE4blBpcGUsXHJcbiAgICAgICAgbGl0ZXJhbHM6IE9iamVjdFxyXG4gICAgKSB7XHJcbiAgICAgICAgdGhpcy5wb05vdGlmaWNhdGlvbiA9IHBvTm90aWZpY2F0aW9uO1xyXG4gICAgICAgIHRoaXMucG9JMThuUGlwZSA9IHBvSTE4blBpcGU7XHJcbiAgICAgICAgdGhpcy5saXRlcmFscyA9IGxpdGVyYWxzO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBtYWtlRGlzY2xhaW1lcihwcm9wZXJ0eTogc3RyaW5nLCB2YWx1ZTogc3RyaW5nLCBoaWRlQ2xvc2UgPSBmYWxzZSwgdHJhZFZhbHVlID0gZmFsc2UsIHZsZEJsYW5rID0gZmFsc2UpOiBQb0Rpc2NsYWltZXIge1xyXG4gICAgICAgIGlmICh2YWx1ZSA9PT0gbnVsbCB8fCB2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB7IGxhYmVsOiAnJywgcHJvcGVydHk6ICcnLCB2YWx1ZTogJycgfTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmICh2bGRCbGFuayAmJiB2YWx1ZSA9PT0gJycpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHsgbGFiZWw6ICcnLCBwcm9wZXJ0eTogJycsIHZhbHVlOiAnJyB9O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgaGlkZUNsb3NlLFxyXG4gICAgICAgICAgICBsYWJlbDogYCR7dGhpcy5saXRlcmFsc1twcm9wZXJ0eV19OiAke3RyYWRWYWx1ZSA/IHRoaXMubGl0ZXJhbHNbdmFsdWVdIDogdmFsdWV9YCxcclxuICAgICAgICAgICAgcHJvcGVydHk6IGAke3Byb3BlcnR5fWAsXHJcbiAgICAgICAgICAgIHZhbHVlOiBgJHt2YWx1ZX1gXHJcbiAgICAgICAgfTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgbWFrZURpc2NsYWltZXJGcm9tTnVtYmVyKHByb3BlcnR5OiBzdHJpbmcsIHZhbHVlOiBudW1iZXIsIGhpZGVDbG9zZSA9IGZhbHNlLCB2bGRCbGFuayA9IGZhbHNlKTogUG9EaXNjbGFpbWVyIHtcclxuICAgICAgICBpZiAodmFsdWUgPT09IG51bGwgfHwgdmFsdWUgPT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICByZXR1cm4geyBsYWJlbDogJycsIHByb3BlcnR5OiAnJywgdmFsdWU6ICcnIH07XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAodmxkQmxhbmsgJiYgdmFsdWUgPT09IDApIHtcclxuICAgICAgICAgICAgcmV0dXJuIHsgbGFiZWw6ICcnLCBwcm9wZXJ0eTogJycsIHZhbHVlOiAnJyB9O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgaGlkZUNsb3NlLFxyXG4gICAgICAgICAgICBsYWJlbDogYCR7dGhpcy5saXRlcmFsc1twcm9wZXJ0eV19OiAke3ZhbHVlfWAsXHJcbiAgICAgICAgICAgIHByb3BlcnR5OiBgJHtwcm9wZXJ0eX1gLFxyXG4gICAgICAgICAgICB2YWx1ZTogYCR7dmFsdWV9YFxyXG4gICAgICAgIH07XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIG1ha2VEaXNjbGFpbWVyRnJvbUJvb2xlYW4ocHJvcGVydHk6IHN0cmluZywgdmFsdWU6IGJvb2xlYW4sIGhpZGVDbG9zZSA9IGZhbHNlKTogUG9EaXNjbGFpbWVyIHtcclxuICAgICAgICBpZiAodmFsdWUgPT09IG51bGwgfHwgdmFsdWUgPT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICByZXR1cm4geyBsYWJlbDogJycsIHByb3BlcnR5OiAnJywgdmFsdWU6ICcnIH07XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBoaWRlQ2xvc2UsXHJcbiAgICAgICAgICAgIGxhYmVsOiBgJHt0aGlzLmxpdGVyYWxzW3Byb3BlcnR5XX06ICR7dmFsdWUgPyB0aGlzLmxpdGVyYWxzWyd5ZXMnXSA6IHRoaXMubGl0ZXJhbHNbJ25vJ119YCxcclxuICAgICAgICAgICAgcHJvcGVydHk6IGAke3Byb3BlcnR5fWAsXHJcbiAgICAgICAgICAgIHZhbHVlOiBgJHt2YWx1ZX1gXHJcbiAgICAgICAgfTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgbWFrZURpc2NsYWltZXJGcm9tRGF0ZShwcm9wZXJ0eTogc3RyaW5nLCB2YWx1ZTogRGF0ZSwgaGlkZUNsb3NlID0gZmFsc2UpOiBQb0Rpc2NsYWltZXIge1xyXG4gICAgICAgIGNvbnN0IGREYXRlOiBEYXRlID0gdGhpcy5hanVzdERhdGUodmFsdWUpO1xyXG5cclxuICAgICAgICBpZiAoIXRoaXMuaXNWYWxpZERhdGUoZERhdGUpKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB7IGxhYmVsOiAnJywgcHJvcGVydHk6ICcnLCB2YWx1ZTogJycgfTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIGhpZGVDbG9zZSxcclxuICAgICAgICAgICAgbGFiZWw6IGAke3RoaXMubGl0ZXJhbHNbcHJvcGVydHldfTogJHtkRGF0ZS50b0xvY2FsZURhdGVTdHJpbmcoKX1gLFxyXG4gICAgICAgICAgICBwcm9wZXJ0eTogYCR7cHJvcGVydHl9YCxcclxuICAgICAgICAgICAgdmFsdWU6IGAke3RoaXMuZGF0ZVRvUXVlcnlQYXJhbShkRGF0ZSl9YFxyXG4gICAgICAgIH07XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIG1ha2VEaXNjbGFpbWVyRnJvbU11bHRpU2VsZWN0KHByb3BlcnR5OiBzdHJpbmcsIHZhbHVlOiBBcnJheTxhbnk+LCBsZW5ndGggPSAwLFxyXG4gICAgICAgIGhpZGVDbG9zZSA9IGZhbHNlLCB0cmFkVmFsdWUgPSBmYWxzZSk6IFBvRGlzY2xhaW1lciB7XHJcbiAgICAgICAgbGV0IGxzdExhYmVscyA9ICcnO1xyXG4gICAgICAgIGxldCBsc3RWYWx1ZXMgPSAnJztcclxuXHJcbiAgICAgICAgaWYgKCF2YWx1ZSkge1xyXG4gICAgICAgICAgICByZXR1cm4geyBsYWJlbDogJycsIHByb3BlcnR5OiAnJywgdmFsdWU6ICcnIH07XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAodmFsdWUubGVuZ3RoID09PSAwIHx8IChsZW5ndGggPiAwICYmIHZhbHVlLmxlbmd0aCA9PT0gbGVuZ3RoKSkge1xyXG4gICAgICAgICAgICBsc3RMYWJlbHMgPSB0aGlzLmxpdGVyYWxzWydhbGwnXTtcclxuICAgICAgICAgICAgbHN0VmFsdWVzID0gJ2FsbCc7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdmFsdWUubWFwKGl0ZW0gPT4ge1xyXG4gICAgICAgICAgICAgICAgaWYgKGxzdExhYmVscyAhPT0gJycpIHsgbHN0TGFiZWxzID0gYCR7bHN0TGFiZWxzfSwgYDsgfVxyXG4gICAgICAgICAgICAgICAgaWYgKGxzdFZhbHVlcyAhPT0gJycpIHsgbHN0VmFsdWVzID0gYCR7bHN0VmFsdWVzfSxgOyB9XHJcbiAgICAgICAgICAgICAgICBsc3RMYWJlbHMgPSBgJHtsc3RMYWJlbHN9JHt0cmFkVmFsdWUgPyB0aGlzLmxpdGVyYWxzW2l0ZW1dIDogaXRlbX1gO1xyXG4gICAgICAgICAgICAgICAgbHN0VmFsdWVzID0gYCR7bHN0VmFsdWVzfSR7aXRlbX1gO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIGhpZGVDbG9zZSxcclxuICAgICAgICAgICAgbGFiZWw6IGAke3RoaXMubGl0ZXJhbHNbcHJvcGVydHldfTogJHtsc3RMYWJlbHN9YCxcclxuICAgICAgICAgICAgcHJvcGVydHk6IGAke3Byb3BlcnR5fWAsXHJcbiAgICAgICAgICAgIHZhbHVlOiBgJHtsc3RWYWx1ZXN9YFxyXG4gICAgICAgIH07XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIG1ha2VEaXNjbGFpbWVyRnJvbUNoZWNrYm94R3JvdXAocHJvcGVydHk6IHN0cmluZywgdmFsdWU6IEFycmF5PHN0cmluZz4sIGxlbmd0aCA9IDAsIGhpZGVDbG9zZSA9IGZhbHNlKTogUG9EaXNjbGFpbWVyIHtcclxuICAgICAgICBsZXQgbHN0TGFiZWxzID0gJyc7XHJcbiAgICAgICAgbGV0IGxzdFZhbHVlcyA9ICcnO1xyXG5cclxuICAgICAgICBpZiAoIXZhbHVlKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB7IGxhYmVsOiAnJywgcHJvcGVydHk6ICcnLCB2YWx1ZTogJycgfTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmICh2YWx1ZS5sZW5ndGggPT09IDApIHtcclxuICAgICAgICAgICAgbHN0TGFiZWxzID0gdGhpcy5saXRlcmFsc1snbm9uZSddO1xyXG4gICAgICAgICAgICBsc3RWYWx1ZXMgPSAnbm9uZSc7XHJcbiAgICAgICAgfSBlbHNlIGlmIChsZW5ndGggPiAwICYmIHZhbHVlLmxlbmd0aCA9PT0gbGVuZ3RoKSB7XHJcbiAgICAgICAgICAgIGxzdExhYmVscyA9IHRoaXMubGl0ZXJhbHNbJ2FsbCddO1xyXG4gICAgICAgICAgICBsc3RWYWx1ZXMgPSAnYWxsJztcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB2YWx1ZS5tYXAoY2hlY2tQYXJhbSA9PiB7XHJcbiAgICAgICAgICAgICAgICBpZiAobHN0TGFiZWxzICE9PSAnJykgeyBsc3RMYWJlbHMgPSBgJHtsc3RMYWJlbHN9LCBgOyB9XHJcbiAgICAgICAgICAgICAgICBpZiAobHN0VmFsdWVzICE9PSAnJykgeyBsc3RWYWx1ZXMgPSBgJHtsc3RWYWx1ZXN9LGA7IH1cclxuICAgICAgICAgICAgICAgIGxzdExhYmVscyA9IGAke2xzdExhYmVsc30ke3RoaXMubGl0ZXJhbHNbY2hlY2tQYXJhbV19YDtcclxuICAgICAgICAgICAgICAgIGxzdFZhbHVlcyA9IGAke2xzdFZhbHVlc30ke2NoZWNrUGFyYW19YDtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBoaWRlQ2xvc2UsXHJcbiAgICAgICAgICAgIGxhYmVsOiBgJHt0aGlzLmxpdGVyYWxzW3Byb3BlcnR5XX06ICR7bHN0TGFiZWxzfWAsXHJcbiAgICAgICAgICAgIHByb3BlcnR5OiBgJHtwcm9wZXJ0eX1gLFxyXG4gICAgICAgICAgICB2YWx1ZTogYCR7bHN0VmFsdWVzfWBcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBtYWtlRGlzY2xhaW1lckZyb21SYW5nZUNoYXJhY3Rlcihwcm9wZXJ0eTogc3RyaW5nLCB2YWx1ZTogSUZpbHRlclJhbmdlQ2hhcmFjdGVyLCBoaWRlQ2xvc2UgPSBmYWxzZSxcclxuICAgICAgICB2YWxpZGF0ZUVxdWFsID0gdHJ1ZSk6IFBvRGlzY2xhaW1lciB7XHJcbiAgICAgICAgaWYgKHZhbHVlLnZhbEluaXRpYWwgPT09IG51bGwgfHwgdmFsdWUudmFsSW5pdGlhbCA9PT0gdW5kZWZpbmVkKSB7IHZhbHVlLnZhbEluaXRpYWwgPSB2YWx1ZS5pbmlJbml0aWFsOyB9XHJcbiAgICAgICAgaWYgKHZhbHVlLnZhbEZpbmFsID09PSBudWxsIHx8IHZhbHVlLnZhbEZpbmFsID09PSB1bmRlZmluZWQpIHsgdmFsdWUudmFsRmluYWwgPSB2YWx1ZS5pbmlGaW5hbDsgfVxyXG5cclxuICAgICAgICBpZiAodmFsaWRhdGVFcXVhbCAmJlxyXG4gICAgICAgICAgICB2YWx1ZS5pbmlJbml0aWFsID09PSB2YWx1ZS52YWxJbml0aWFsICYmXHJcbiAgICAgICAgICAgIHZhbHVlLmluaUZpbmFsID09PSB2YWx1ZS52YWxGaW5hbCkge1xyXG4gICAgICAgICAgICByZXR1cm4geyBsYWJlbDogJycsIHByb3BlcnR5OiAnJywgdmFsdWU6ICcnIH07XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBoaWRlQ2xvc2UsXHJcbiAgICAgICAgICAgIGxhYmVsOiB0aGlzLnBvSTE4blBpcGUudHJhbnNmb3JtKFxyXG4gICAgICAgICAgICAgICAgdGhpcy5saXRlcmFsc1snZmlsdGVyUmFuZ2UnXSxcclxuICAgICAgICAgICAgICAgIFt0aGlzLmxpdGVyYWxzW3Byb3BlcnR5XSwgYCcke3ZhbHVlLnZhbEluaXRpYWx9J2AsIGAnJHt2YWx1ZS52YWxGaW5hbH0nYF0pLFxyXG4gICAgICAgICAgICBwcm9wZXJ0eTogYCR7cHJvcGVydHl9YCxcclxuICAgICAgICAgICAgdmFsdWU6IGAke3ZhbHVlLnZhbEluaXRpYWx9OyR7dmFsdWUudmFsRmluYWx9YFxyXG4gICAgICAgIH07XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIG1ha2VEaXNjbGFpbWVyRnJvbVJhbmdlTnVtYmVyKHByb3BlcnR5OiBzdHJpbmcsIHZhbHVlOiBJRmlsdGVyUmFuZ2VOdW1iZXIsIGhpZGVDbG9zZSA9IGZhbHNlLFxyXG4gICAgICAgIHZhbGlkYXRlRXF1YWwgPSB0cnVlKTogUG9EaXNjbGFpbWVyIHtcclxuICAgICAgICBpZiAodmFsdWUudmFsSW5pdGlhbCA9PT0gbnVsbCB8fCB2YWx1ZS52YWxJbml0aWFsID09PSB1bmRlZmluZWQpIHsgdmFsdWUudmFsSW5pdGlhbCA9IHZhbHVlLmluaUluaXRpYWw7IH1cclxuICAgICAgICBpZiAodmFsdWUudmFsRmluYWwgPT09IG51bGwgfHwgdmFsdWUudmFsRmluYWwgPT09IHVuZGVmaW5lZCkgeyB2YWx1ZS52YWxGaW5hbCA9IHZhbHVlLmluaUZpbmFsOyB9XHJcblxyXG4gICAgICAgIGlmICh2YWxpZGF0ZUVxdWFsICYmXHJcbiAgICAgICAgICAgIHZhbHVlLmluaUluaXRpYWwgPT09IHZhbHVlLnZhbEluaXRpYWwgJiZcclxuICAgICAgICAgICAgdmFsdWUuaW5pRmluYWwgPT09IHZhbHVlLnZhbEZpbmFsKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB7IGxhYmVsOiAnJywgcHJvcGVydHk6ICcnLCB2YWx1ZTogJycgfTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIGhpZGVDbG9zZSxcclxuICAgICAgICAgICAgbGFiZWw6IHRoaXMucG9JMThuUGlwZS50cmFuc2Zvcm0oXHJcbiAgICAgICAgICAgICAgICB0aGlzLmxpdGVyYWxzWydmaWx0ZXJSYW5nZSddLFxyXG4gICAgICAgICAgICAgICAgW3RoaXMubGl0ZXJhbHNbcHJvcGVydHldLCB2YWx1ZS52YWxJbml0aWFsLCB2YWx1ZS52YWxGaW5hbF0pLFxyXG4gICAgICAgICAgICBwcm9wZXJ0eTogYCR7cHJvcGVydHl9YCxcclxuICAgICAgICAgICAgdmFsdWU6IGAke3ZhbHVlLnZhbEluaXRpYWx9OyR7dmFsdWUudmFsRmluYWx9YFxyXG4gICAgICAgIH07XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIG1ha2VEaXNjbGFpbWVyRnJvbVJhbmdlRGF0ZShwcm9wZXJ0eTogc3RyaW5nLCB2YWx1ZTogSUZpbHRlclJhbmdlRGF0ZSwgaGlkZUNsb3NlID0gZmFsc2UsIHZhbGlkYXRlRXF1YWwgPSB0cnVlKTogUG9EaXNjbGFpbWVyIHtcclxuICAgICAgICBsZXQgdmFsSW5pdERhdGU6IERhdGUgPSB0aGlzLmFqdXN0RGF0ZSh2YWx1ZS52YWxJbml0aWFsKTtcclxuICAgICAgICBsZXQgdmFsRmluYWxEYXRlOiBEYXRlID0gdGhpcy5hanVzdERhdGUodmFsdWUudmFsRmluYWwpO1xyXG5cclxuICAgICAgICBpZiAoIXRoaXMuaXNWYWxpZERhdGUodmFsSW5pdERhdGUpKSB7XHJcbiAgICAgICAgICAgIHZhbEluaXREYXRlID0gdmFsdWUuaW5pSW5pdGlhbDtcclxuICAgICAgICAgICAgdmFsdWUudmFsSW5pdGlhbCA9IHZhbHVlLmluaUluaXRpYWw7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICghdGhpcy5pc1ZhbGlkRGF0ZSh2YWxGaW5hbERhdGUpKSB7XHJcbiAgICAgICAgICAgIHZhbEZpbmFsRGF0ZSA9IHZhbHVlLmluaUZpbmFsO1xyXG4gICAgICAgICAgICB2YWx1ZS52YWxGaW5hbCA9IHZhbHVlLmluaUZpbmFsO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKHZhbGlkYXRlRXF1YWwgJiZcclxuICAgICAgICAgICAgdGhpcy5kYXRlVG9RdWVyeVBhcmFtKHZhbHVlLmluaUluaXRpYWwpID09PSB0aGlzLmRhdGVUb1F1ZXJ5UGFyYW0odmFsSW5pdERhdGUpICYmXHJcbiAgICAgICAgICAgIHRoaXMuZGF0ZVRvUXVlcnlQYXJhbSh2YWx1ZS5pbmlGaW5hbCkgPT09IHRoaXMuZGF0ZVRvUXVlcnlQYXJhbSh2YWxGaW5hbERhdGUpKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB7IGxhYmVsOiAnJywgcHJvcGVydHk6ICcnLCB2YWx1ZTogJycgfTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIGhpZGVDbG9zZSxcclxuICAgICAgICAgICAgbGFiZWw6IHRoaXMucG9JMThuUGlwZS50cmFuc2Zvcm0oXHJcbiAgICAgICAgICAgICAgICB0aGlzLmxpdGVyYWxzWydmaWx0ZXJSYW5nZSddLFxyXG4gICAgICAgICAgICAgICAgW3RoaXMubGl0ZXJhbHNbcHJvcGVydHldLCB2YWxJbml0RGF0ZS50b0xvY2FsZURhdGVTdHJpbmcoKSwgdmFsRmluYWxEYXRlLnRvTG9jYWxlRGF0ZVN0cmluZygpXSksXHJcbiAgICAgICAgICAgIHByb3BlcnR5OiBgJHtwcm9wZXJ0eX1gLFxyXG4gICAgICAgICAgICB2YWx1ZTogYCR7dGhpcy5kYXRlVG9RdWVyeVBhcmFtKHZhbEluaXREYXRlKX07JHt0aGlzLmRhdGVUb1F1ZXJ5UGFyYW0odmFsRmluYWxEYXRlKX1gXHJcbiAgICAgICAgfTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgYXR6Q2hhckZyb21EaXNjbGFtZXIoZGlzY2xhaW1lcnM6IEFycmF5PFBvRGlzY2xhaW1lcj4sIHByb3BlcnR5OiBzdHJpbmcsIGRlZmF1bHRWYWx1ZTogc3RyaW5nKTogc3RyaW5nIHtcclxuICAgICAgICBsZXQgcmV0dXJuVmFsdWUgPSBkZWZhdWx0VmFsdWU7XHJcblxyXG4gICAgICAgIGlmIChkaXNjbGFpbWVycyAmJiBkaXNjbGFpbWVycy5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgIGRpc2NsYWltZXJzLmZpbmQoKGl0ZW0pID0+IHtcclxuICAgICAgICAgICAgICAgIGlmIChpdGVtLnByb3BlcnR5ID09PSBwcm9wZXJ0eSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChpdGVtLnZhbHVlID09PSBudWxsKSB7IHJldHVybiBmYWxzZTsgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICByZXR1cm5WYWx1ZSA9IGl0ZW0udmFsdWU7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gcmV0dXJuVmFsdWU7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGF0ek51bWJlckZyb21EaXNjbGFtZXIoZGlzY2xhaW1lcnM6IEFycmF5PFBvRGlzY2xhaW1lcj4sIHByb3BlcnR5OiBzdHJpbmcsIGRlZmF1bHRWYWx1ZTogbnVtYmVyKTogbnVtYmVyIHtcclxuICAgICAgICBsZXQgcmV0dXJuVmFsdWUgPSBkZWZhdWx0VmFsdWU7XHJcblxyXG4gICAgICAgIGlmIChkaXNjbGFpbWVycyAmJiBkaXNjbGFpbWVycy5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgIGRpc2NsYWltZXJzLmZpbmQoKGl0ZW0pID0+IHtcclxuICAgICAgICAgICAgICAgIGlmIChpdGVtLnByb3BlcnR5ID09PSBwcm9wZXJ0eSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChpdGVtLnZhbHVlID09PSBudWxsKSB7IHJldHVybiBmYWxzZTsgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICByZXR1cm5WYWx1ZSA9IGl0ZW0udmFsdWU7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gcmV0dXJuVmFsdWU7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGF0ekJvb2xlYW5Gcm9tRGlzY2xhbWVyKGRpc2NsYWltZXJzOiBBcnJheTxQb0Rpc2NsYWltZXI+LCBwcm9wZXJ0eTogc3RyaW5nLCBkZWZhdWx0VmFsdWU6IGJvb2xlYW4pOiBib29sZWFuIHtcclxuICAgICAgICBjb25zdCByZXR1cm5WYWx1ZSA9IGRlZmF1bHRWYWx1ZTtcclxuXHJcbiAgICAgICAgaWYgKGRpc2NsYWltZXJzICYmIGRpc2NsYWltZXJzLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgY29uc3QgZGlzY2xhaW1lckZpbmQgPSBkaXNjbGFpbWVycy5maW5kKChpdGVtKSA9PiBpdGVtLnByb3BlcnR5ID09PSBwcm9wZXJ0eSk7XHJcbiAgICAgICAgICAgIGlmIChkaXNjbGFpbWVyRmluZCAmJiBkaXNjbGFpbWVyRmluZC52YWx1ZSAhPT0gbnVsbCAmJiBkaXNjbGFpbWVyRmluZC52YWx1ZSAhPT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoZGlzY2xhaW1lckZpbmQudmFsdWUgPT09ICd0cnVlJykge1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiByZXR1cm5WYWx1ZTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgYXR6RGF0ZUZyb21EaXNjbGFtZXIoZGlzY2xhaW1lcnM6IEFycmF5PFBvRGlzY2xhaW1lcj4sIHByb3BlcnR5OiBzdHJpbmcsIGRlZmF1bHRWYWx1ZTogRGF0ZSk6IERhdGUge1xyXG4gICAgICAgIGxldCByZXR1cm5WYWx1ZTogRGF0ZSA9IHRoaXMuYWp1c3REYXRlKGRlZmF1bHRWYWx1ZSk7XHJcblxyXG4gICAgICAgIGlmIChkaXNjbGFpbWVycyAmJiBkaXNjbGFpbWVycy5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgIGRpc2NsYWltZXJzLmZpbmQoKGl0ZW0pID0+IHtcclxuICAgICAgICAgICAgICAgIGlmIChpdGVtLnByb3BlcnR5ID09PSBwcm9wZXJ0eSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChpdGVtLnZhbHVlID09PSBudWxsKSB7IHJldHVybiBmYWxzZTsgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICByZXR1cm5WYWx1ZSA9IHRoaXMuYWp1c3REYXRlKGl0ZW0udmFsdWUpO1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHJldHVyblZhbHVlO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBhdHpNdWx0aVNlbGVjdENoYXJGcm9tRGlzY2xhbWVyKGRpc2NsYWltZXJzOiBBcnJheTxQb0Rpc2NsYWltZXI+LCBwcm9wZXJ0eTogc3RyaW5nLFxyXG4gICAgICAgIGRlZmF1bHRWYWx1ZTogQXJyYXk8UG9NdWx0aXNlbGVjdE9wdGlvbj4pOiBBcnJheTxzdHJpbmc+IHtcclxuICAgICAgICByZXR1cm4gdGhpcy5hdHpNdWx0aVNlbGVjdEZyb21EaXNjbGFtZXIoJ2NoYXInLCBkaXNjbGFpbWVycywgcHJvcGVydHksIGRlZmF1bHRWYWx1ZSk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGF0ek11bHRpU2VsZWN0TnVtYmVyRnJvbURpc2NsYW1lcihkaXNjbGFpbWVyczogQXJyYXk8UG9EaXNjbGFpbWVyPiwgcHJvcGVydHk6IHN0cmluZyxcclxuICAgICAgICBkZWZhdWx0VmFsdWU6IEFycmF5PFBvTXVsdGlzZWxlY3RPcHRpb24+KTogQXJyYXk8bnVtYmVyPiB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuYXR6TXVsdGlTZWxlY3RGcm9tRGlzY2xhbWVyKCdudW1iZXInLCBkaXNjbGFpbWVycywgcHJvcGVydHksIGRlZmF1bHRWYWx1ZSk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGF0ek11bHRpU2VsZWN0RnJvbURpc2NsYW1lcih0eXBlOiBzdHJpbmcsIGRpc2NsYWltZXJzOiBBcnJheTxQb0Rpc2NsYWltZXI+LCBwcm9wZXJ0eTogc3RyaW5nLFxyXG4gICAgICAgIGRlZmF1bHRWYWx1ZTogQXJyYXk8UG9NdWx0aXNlbGVjdE9wdGlvbj4pOiBBcnJheTxhbnk+IHtcclxuXHJcbiAgICAgICAgbGV0IHJldHVyblZhbHVlID0gW107XHJcbiAgICAgICAgZGVmYXVsdFZhbHVlLm1hcChpdGVtID0+IHtcclxuICAgICAgICAgICAgcmV0dXJuVmFsdWUucHVzaChpdGVtLnZhbHVlKTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgaWYgKGRpc2NsYWltZXJzICYmIGRpc2NsYWltZXJzLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgZGlzY2xhaW1lcnMuZmluZCgoaXRlbSkgPT4ge1xyXG4gICAgICAgICAgICAgICAgaWYgKGl0ZW0ucHJvcGVydHkgPT09IHByb3BlcnR5KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGl0ZW0udmFsdWUgPT09IG51bGwgfHwgaXRlbS52YWx1ZSA9PT0gJ2FsbCcgfHwgaXRlbS52YWx1ZSA9PT0gJ25vbmUnKSB7IHJldHVybiBmYWxzZTsgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICByZXR1cm5WYWx1ZSA9IFtdO1xyXG4gICAgICAgICAgICAgICAgICAgIGl0ZW0udmFsdWUuc3BsaXQoJywnKS5mb3JFYWNoKGl0ZW1PcHQgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZSA9PT0gJ2NoYXInKSB7IHJldHVyblZhbHVlLnB1c2goaXRlbU9wdCk7IH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGUgPT09ICdudW1iZXInKSB7IHJldHVyblZhbHVlLnB1c2goK2l0ZW1PcHQpOyB9XHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHJldHVyblZhbHVlO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBhdHpDaGVja2JveEZyb21EaXNjbGFtZXIoZGlzY2xhaW1lcnM6IEFycmF5PFBvRGlzY2xhaW1lcj4sIHByb3BlcnR5OiBzdHJpbmcsXHJcbiAgICAgICAgb3B0aW9uczogQXJyYXk8UG9DaGVja2JveEdyb3VwT3B0aW9uPik6IEFycmF5PHN0cmluZz4ge1xyXG5cclxuICAgICAgICBsZXQgcmV0dXJuVmFsdWUgPSBbXTtcclxuICAgICAgICBvcHRpb25zLm1hcChpdGVtID0+IHtcclxuICAgICAgICAgICAgcmV0dXJuVmFsdWUucHVzaChpdGVtLnZhbHVlKTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgaWYgKGRpc2NsYWltZXJzICYmIGRpc2NsYWltZXJzLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgZGlzY2xhaW1lcnMuZmluZCgoaXRlbSkgPT4ge1xyXG4gICAgICAgICAgICAgICAgaWYgKGl0ZW0ucHJvcGVydHkgPT09IHByb3BlcnR5KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGl0ZW0udmFsdWUgPT09IG51bGwgfHwgaXRlbS52YWx1ZSA9PT0gJ2FsbCcgfHwgaXRlbS52YWx1ZSA9PT0gJ25vbmUnKSB7IHJldHVybiBmYWxzZTsgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICByZXR1cm5WYWx1ZSA9IFtdO1xyXG4gICAgICAgICAgICAgICAgICAgIGl0ZW0udmFsdWUuc3BsaXQoJywnKS5mb3JFYWNoKGl0ZW1PcHQgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm5WYWx1ZS5wdXNoKGl0ZW1PcHQpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiByZXR1cm5WYWx1ZTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgYXR6UmFuZ2VDaGFyRnJvbURpc2NsYW1lcihkaXNjbGFpbWVyczogQXJyYXk8UG9EaXNjbGFpbWVyPiwgcHJvcGVydHk6IHN0cmluZyxcclxuICAgICAgICByYW5nZUNoYXI6IElGaWx0ZXJSYW5nZUNoYXJhY3Rlcik6IElGaWx0ZXJSYW5nZUNoYXJhY3RlciB7XHJcbiAgICAgICAgbGV0IHZhbHVlID0gJyc7XHJcblxyXG4gICAgICAgIGlmIChkaXNjbGFpbWVycyAmJiBkaXNjbGFpbWVycy5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgIGRpc2NsYWltZXJzLmZpbmQoKGl0ZW0pID0+IHtcclxuICAgICAgICAgICAgICAgIGlmIChpdGVtLnByb3BlcnR5ID09PSBwcm9wZXJ0eSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChpdGVtLnZhbHVlID09PSBudWxsKSB7IHJldHVybiBmYWxzZTsgfVxyXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlID0gaXRlbS52YWx1ZTtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB0aGlzLmF0elJhbmdlQ2hhckZyb21RdWVyeVBhcmFtKHZhbHVlLCByYW5nZUNoYXIpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBhdHpSYW5nZU51bUZyb21EaXNjbGFtZXIoZGlzY2xhaW1lcnM6IEFycmF5PFBvRGlzY2xhaW1lcj4sIHByb3BlcnR5OiBzdHJpbmcsXHJcbiAgICAgICAgcmFuZ2VOdW06IElGaWx0ZXJSYW5nZU51bWJlcik6IElGaWx0ZXJSYW5nZU51bWJlciB7XHJcbiAgICAgICAgbGV0IHZhbHVlID0gJyc7XHJcblxyXG4gICAgICAgIGlmIChkaXNjbGFpbWVycyAmJiBkaXNjbGFpbWVycy5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgIGRpc2NsYWltZXJzLmZpbmQoKGl0ZW0pID0+IHtcclxuICAgICAgICAgICAgICAgIGlmIChpdGVtLnByb3BlcnR5ID09PSBwcm9wZXJ0eSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChpdGVtLnZhbHVlID09PSBudWxsKSB7IHJldHVybiBmYWxzZTsgfVxyXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlID0gaXRlbS52YWx1ZTtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB0aGlzLmF0elJhbmdlTnVtRnJvbVF1ZXJ5UGFyYW0odmFsdWUsIHJhbmdlTnVtKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgYXR6UmFuZ2VEYXRlRnJvbURpc2NsYW1lcihkaXNjbGFpbWVyczogQXJyYXk8UG9EaXNjbGFpbWVyPiwgcHJvcGVydHk6IHN0cmluZyxcclxuICAgICAgICByYW5nZURhdGU6IElGaWx0ZXJSYW5nZURhdGUpOiBJRmlsdGVyUmFuZ2VEYXRlIHtcclxuICAgICAgICBsZXQgdmFsdWUgPSAnJztcclxuXHJcbiAgICAgICAgaWYgKGRpc2NsYWltZXJzICYmIGRpc2NsYWltZXJzLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgZGlzY2xhaW1lcnMuZmluZCgoaXRlbSkgPT4ge1xyXG4gICAgICAgICAgICAgICAgaWYgKGl0ZW0ucHJvcGVydHkgPT09IHByb3BlcnR5KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGl0ZW0udmFsdWUgPT09IG51bGwpIHsgcmV0dXJuIGZhbHNlOyB9XHJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWUgPSBpdGVtLnZhbHVlO1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuYXR6UmFuZ2VEYXRlRnJvbVF1ZXJ5UGFyYW0odmFsdWUsIHJhbmdlRGF0ZSk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGF0elJhbmdlQ2hhckZyb21RdWVyeVBhcmFtKHZhbHVlOiBzdHJpbmcsIHJhbmdlQ2hhcjogSUZpbHRlclJhbmdlQ2hhcmFjdGVyKTogSUZpbHRlclJhbmdlQ2hhcmFjdGVyIHtcclxuICAgICAgICByYW5nZUNoYXIudmFsSW5pdGlhbCA9IHJhbmdlQ2hhci5pbmlJbml0aWFsO1xyXG4gICAgICAgIHJhbmdlQ2hhci52YWxGaW5hbCA9IHJhbmdlQ2hhci5pbmlGaW5hbDtcclxuXHJcbiAgICAgICAgaWYgKCF2YWx1ZSB8fCB2YWx1ZSA9PT0gJycpIHsgcmV0dXJuIHJhbmdlQ2hhcjsgfVxyXG5cclxuICAgICAgICByYW5nZUNoYXIudmFsSW5pdGlhbCA9IHZhbHVlLnNwbGl0KCc7JylbMF07XHJcbiAgICAgICAgcmFuZ2VDaGFyLnZhbEZpbmFsID0gdmFsdWUuc3BsaXQoJzsnKVsxXTtcclxuICAgICAgICBpZiAocmFuZ2VDaGFyLnZhbEZpbmFsID09PSBudWxsIHx8IHJhbmdlQ2hhci52YWxGaW5hbCA9PT0gdW5kZWZpbmVkKSB7IHJhbmdlQ2hhci52YWxGaW5hbCA9IHJhbmdlQ2hhci5pbmlGaW5hbDsgfVxyXG5cclxuICAgICAgICByZXR1cm4gcmFuZ2VDaGFyO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBhdHpSYW5nZU51bUZyb21RdWVyeVBhcmFtKHZhbHVlOiBzdHJpbmcsIHJhbmdlTnVtOiBJRmlsdGVyUmFuZ2VOdW1iZXIpOiBJRmlsdGVyUmFuZ2VOdW1iZXIge1xyXG4gICAgICAgIHJhbmdlTnVtLnZhbEluaXRpYWwgPSByYW5nZU51bS5pbmlJbml0aWFsO1xyXG4gICAgICAgIHJhbmdlTnVtLnZhbEZpbmFsID0gcmFuZ2VOdW0uaW5pRmluYWw7XHJcblxyXG4gICAgICAgIGlmICghdmFsdWUgfHwgdmFsdWUgPT09ICcnKSB7IHJldHVybiByYW5nZU51bTsgfVxyXG5cclxuICAgICAgICByYW5nZU51bS52YWxJbml0aWFsID0gK3ZhbHVlLnNwbGl0KCc7JylbMF07XHJcbiAgICAgICAgcmFuZ2VOdW0udmFsRmluYWwgPSArdmFsdWUuc3BsaXQoJzsnKVsxXTtcclxuICAgICAgICBpZiAocmFuZ2VOdW0udmFsRmluYWwgPT09IG51bGwgfHwgcmFuZ2VOdW0udmFsRmluYWwgPT09IHVuZGVmaW5lZCkgeyByYW5nZU51bS52YWxGaW5hbCA9IHJhbmdlTnVtLmluaUZpbmFsOyB9XHJcblxyXG4gICAgICAgIHJldHVybiByYW5nZU51bTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgYXR6UmFuZ2VEYXRlRnJvbVF1ZXJ5UGFyYW0odmFsdWU6IHN0cmluZywgcmFuZ2VEYXRlOiBJRmlsdGVyUmFuZ2VEYXRlKTogSUZpbHRlclJhbmdlRGF0ZSB7XHJcbiAgICAgICAgcmFuZ2VEYXRlLnZhbEluaXRpYWwgPSByYW5nZURhdGUuaW5pSW5pdGlhbDtcclxuICAgICAgICByYW5nZURhdGUudmFsRmluYWwgPSByYW5nZURhdGUuaW5pRmluYWw7XHJcblxyXG4gICAgICAgIGlmICghdmFsdWUgfHwgdmFsdWUgPT09ICcnKSB7IHJldHVybiByYW5nZURhdGU7IH1cclxuXHJcbiAgICAgICAgcmFuZ2VEYXRlLnZhbEluaXRpYWwgPSB0aGlzLnF1ZXJ5UGFyYW1Ub0RhdGUodmFsdWUuc3BsaXQoJzsnKVswXSk7XHJcbiAgICAgICAgcmFuZ2VEYXRlLnZhbEZpbmFsID0gdGhpcy5xdWVyeVBhcmFtVG9EYXRlKHZhbHVlLnNwbGl0KCc7JylbMV0pO1xyXG4gICAgICAgIGlmIChyYW5nZURhdGUudmFsRmluYWwgPT09IG51bGwgfHwgcmFuZ2VEYXRlLnZhbEZpbmFsID09PSB1bmRlZmluZWQpIHsgcmFuZ2VEYXRlLnZhbEZpbmFsID0gcmFuZ2VEYXRlLmluaUZpbmFsOyB9XHJcblxyXG4gICAgICAgIHJldHVybiByYW5nZURhdGU7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGRhdGVUb1F1ZXJ5UGFyYW0oZGF0ZTogRGF0ZSk6IHN0cmluZyB7XHJcbiAgICAgICAgY29uc3QgaURheSA9IGRhdGUuZ2V0RGF0ZSgpO1xyXG4gICAgICAgIGNvbnN0IGlNb250aCA9IGRhdGUuZ2V0TW9udGgoKSArIDE7XHJcbiAgICAgICAgY29uc3QgaVllYXIgPSBkYXRlLmdldEZ1bGxZZWFyKCk7XHJcblxyXG4gICAgICAgIHJldHVybiBgJHtpWWVhcn0tJHt0aGlzLnBhZChpTW9udGgpfS0ke3RoaXMucGFkKGlEYXkpfWA7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHF1ZXJ5UGFyYW1Ub0RhdGUocGFyYW06IHN0cmluZyk6IERhdGUge1xyXG4gICAgICAgIGNvbnN0IGlEYXkgPSArcGFyYW0uc3BsaXQoJy0nKVsyXTtcclxuICAgICAgICBjb25zdCBpTW9udGggPSArcGFyYW0uc3BsaXQoJy0nKVsxXTtcclxuICAgICAgICBjb25zdCBpWWVhciA9ICtwYXJhbS5zcGxpdCgnLScpWzBdO1xyXG5cclxuICAgICAgICByZXR1cm4gbmV3IERhdGUoaVllYXIsIGlNb250aCAtIDEsIGlEYXkpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBpc1ZhbGlkRGF0ZShkYXRlOiBEYXRlKSB7XHJcbiAgICAgICAgcmV0dXJuIGRhdGUgaW5zdGFuY2VvZiBEYXRlICYmICFpc05hTihkYXRlLmdldFRpbWUoKSk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGFqdXN0RGF0ZShwYXJhbTogYW55KTogRGF0ZSB7XHJcbiAgICAgICAgaWYgKHBhcmFtIGluc3RhbmNlb2YgRGF0ZSkgeyByZXR1cm4gcGFyYW07IH1cclxuICAgICAgICBpZiAoIXBhcmFtKSB7IHJldHVybiBwYXJhbTsgfVxyXG5cclxuICAgICAgICByZXR1cm4gdGhpcy5xdWVyeVBhcmFtVG9EYXRlKHBhcmFtLnNwbGl0KCdUJylbMF0pO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBwYWQobnVtYmVyKSB7XHJcbiAgICAgICAgaWYgKG51bWJlciA8IDEwKSB7XHJcbiAgICAgICAgICAgIHJldHVybiAnMCcgKyBudW1iZXI7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBudW1iZXI7XHJcbiAgICB9XHJcbn1cclxuIl19