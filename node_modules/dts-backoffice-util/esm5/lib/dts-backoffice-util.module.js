/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { TotvsScheduleExecutionComponent } from './components/totvs-schedule-execution/totvs-schedule-execution.component';
import { FormsModule } from '@angular/forms';
import { PoModule } from '@po-ui/ng-components';
import { HttpClientModule } from '@angular/common/http';
// import { BrowserModule } from '@angular/platform-browser';
import { RpwService } from './components/totvs-schedule-execution/totvs-schedule-execution.service';
import { CommonModule } from '@angular/common';
import { DtsDateFormatPipe } from './pipes/dts-date-format.pipe';
var DtsBackofficeUtilsModule = /** @class */ (function () {
    function DtsBackofficeUtilsModule() {
    }
    /**
     * @return {?}
     */
    DtsBackofficeUtilsModule.forRoot = /**
     * @return {?}
     */
    function () {
        return {
            ngModule: DtsBackofficeUtilsModule,
            providers: [RpwService]
        };
    };
    DtsBackofficeUtilsModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        TotvsScheduleExecutionComponent,
                        DtsDateFormatPipe
                    ],
                    imports: [
                        CommonModule,
                        PoModule,
                        FormsModule,
                        HttpClientModule
                    ],
                    exports: [
                        TotvsScheduleExecutionComponent,
                        DtsDateFormatPipe
                    ],
                    providers: [
                        RpwService
                    ]
                },] }
    ];
    return DtsBackofficeUtilsModule;
}());
export { DtsBackofficeUtilsModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHRzLWJhY2tvZmZpY2UtdXRpbC5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9kdHMtYmFja29mZmljZS11dGlsLyIsInNvdXJjZXMiOlsibGliL2R0cy1iYWNrb2ZmaWNlLXV0aWwubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsUUFBUSxFQUF1QixNQUFNLGVBQWUsQ0FBQztBQUM5RCxPQUFPLEVBQ0wsK0JBQStCLEVBQ2hDLE1BQU0sMEVBQTBFLENBQUM7QUFDbEYsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzdDLE9BQU8sRUFBRSxRQUFRLEVBQWlCLE1BQU0sc0JBQXNCLENBQUM7QUFDL0QsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7O0FBRXhELE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSx3RUFBd0UsQ0FBQztBQUNwRyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFFakU7SUFBQTtJQTJCQSxDQUFDOzs7O0lBTlEsZ0NBQU87OztJQUFkO1FBQ0UsT0FBTztZQUNMLFFBQVEsRUFBRSx3QkFBd0I7WUFDbEMsU0FBUyxFQUFFLENBQUMsVUFBVSxDQUFDO1NBQ3hCLENBQUM7SUFDSixDQUFDOztnQkExQkYsUUFBUSxTQUFDO29CQUNSLFlBQVksRUFBRTt3QkFDWiwrQkFBK0I7d0JBQy9CLGlCQUFpQjtxQkFDbEI7b0JBQ0QsT0FBTyxFQUFFO3dCQUNQLFlBQVk7d0JBQ1osUUFBUTt3QkFDUixXQUFXO3dCQUNYLGdCQUFnQjtxQkFDakI7b0JBQ0QsT0FBTyxFQUFFO3dCQUNQLCtCQUErQjt3QkFDL0IsaUJBQWlCO3FCQUNsQjtvQkFDRCxTQUFTLEVBQUU7d0JBQ1QsVUFBVTtxQkFDWDtpQkFDRjs7SUFTRCwrQkFBQztDQUFBLEFBM0JELElBMkJDO1NBUFksd0JBQXdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUsIE1vZHVsZVdpdGhQcm92aWRlcnMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHtcclxuICBUb3R2c1NjaGVkdWxlRXhlY3V0aW9uQ29tcG9uZW50XHJcbn0gZnJvbSAnLi9jb21wb25lbnRzL3RvdHZzLXNjaGVkdWxlLWV4ZWN1dGlvbi90b3R2cy1zY2hlZHVsZS1leGVjdXRpb24uY29tcG9uZW50JztcclxuaW1wb3J0IHsgRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XHJcbmltcG9ydCB7IFBvTW9kdWxlLCBQb0kxOG5TZXJ2aWNlIH0gZnJvbSAnQHBvLXVpL25nLWNvbXBvbmVudHMnO1xyXG5pbXBvcnQgeyBIdHRwQ2xpZW50TW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnO1xyXG4vLyBpbXBvcnQgeyBCcm93c2VyTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3Nlcic7XHJcbmltcG9ydCB7IFJwd1NlcnZpY2UgfSBmcm9tICcuL2NvbXBvbmVudHMvdG90dnMtc2NoZWR1bGUtZXhlY3V0aW9uL3RvdHZzLXNjaGVkdWxlLWV4ZWN1dGlvbi5zZXJ2aWNlJztcclxuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcclxuaW1wb3J0IHsgRHRzRGF0ZUZvcm1hdFBpcGUgfSBmcm9tICcuL3BpcGVzL2R0cy1kYXRlLWZvcm1hdC5waXBlJztcclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgZGVjbGFyYXRpb25zOiBbXHJcbiAgICBUb3R2c1NjaGVkdWxlRXhlY3V0aW9uQ29tcG9uZW50LFxyXG4gICAgRHRzRGF0ZUZvcm1hdFBpcGVcclxuICBdLFxyXG4gIGltcG9ydHM6IFtcclxuICAgIENvbW1vbk1vZHVsZSxcclxuICAgIFBvTW9kdWxlLFxyXG4gICAgRm9ybXNNb2R1bGUsXHJcbiAgICBIdHRwQ2xpZW50TW9kdWxlXHJcbiAgXSxcclxuICBleHBvcnRzOiBbXHJcbiAgICBUb3R2c1NjaGVkdWxlRXhlY3V0aW9uQ29tcG9uZW50LFxyXG4gICAgRHRzRGF0ZUZvcm1hdFBpcGVcclxuICBdLFxyXG4gIHByb3ZpZGVyczogW1xyXG4gICAgUnB3U2VydmljZVxyXG4gIF1cclxufSlcclxuXHJcbmV4cG9ydCBjbGFzcyBEdHNCYWNrb2ZmaWNlVXRpbHNNb2R1bGUge1xyXG4gIHN0YXRpYyBmb3JSb290KCk6IE1vZHVsZVdpdGhQcm92aWRlcnM8RHRzQmFja29mZmljZVV0aWxzTW9kdWxlPiB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBuZ01vZHVsZTogRHRzQmFja29mZmljZVV0aWxzTW9kdWxlLFxyXG4gICAgICBwcm92aWRlcnM6IFtScHdTZXJ2aWNlXVxyXG4gICAgfTtcclxuICB9XHJcbn1cclxuIl19