{"version":3,"sources":["ng://dts-backoffice-util/lib/services/session-info.service.ts","ng://dts-backoffice-util/lib/services/profile.service.ts","ng://dts-backoffice-util/lib/services/report.service.ts","ng://dts-backoffice-util/lib/services/breadcrumb-control.service.ts","ng://dts-backoffice-util/lib/services/menu-datasul.service.ts","ng://dts-backoffice-util/lib/services/cache-params.service.ts","ng://dts-backoffice-util/lib/utils/date.util.ts","ng://dts-backoffice-util/lib/utils/disclaimer.util.ts","ng://dts-backoffice-util/lib/utils/field-validation.util.ts","ng://dts-backoffice-util/lib/utils/filter-range.util.ts","ng://dts-backoffice-util/lib/utils/generic-functions.utils.ts","ng://dts-backoffice-util/lib/components/totvs-schedule-execution/totvs-schedule-execution.model.ts","ng://dts-backoffice-util/lib/components/totvs-schedule-execution/totvs-schedule-execution.service.ts","ng://dts-backoffice-util/lib/components/totvs-schedule-execution/totvs-schedule-execution.component.ts","ng://dts-backoffice-util/lib/pipes/dts-date-format.pipe.ts","ng://dts-backoffice-util/lib/dts-backoffice-util.module.ts"],"names":["UserLoginService","http","this","apiUrl","userLogin","undefined","prototype","getUserLogin","_this","localStorage","getItem","of","get","pipe","map","response","userName","Injectable","args","providedIn","HttpClient","STRING","JSON","ProfileService","apiURL","setProfile","profile","pageId","userCode","post","headers","X-PO-Screen-Lock","getProfileAsString","showLoading","getProfile","EDataType","getProfileAsJSON","dataType","dataCode","preference","data","dataValue","parse","ReportService","httpClient","URL","window","location","href","indexOf","generate","params","reportURL","reportName","properties","length","forEach","property","index","name","value","dialect","format","programName","downloadName","responseType","report","download","file","fileName","binaryData","downloadLink","document","createElement","urlDownload","createObjectURL","Blob","type","setAttribute","body","appendChild","click","revokeObjectURL","remove","BreadcrumbControlService","newBreadcrumb","breadcrumb","items","addBreadcrumb","literal","activatedRoute","addBreadcrumbURL","decodeURIComponent","snapshot","url","breadcrumbAux","idx","label","push","link","updBreadcrumbURL","valueOld","valueNew","currentRouterURL","getCurrentRouter","replace","getBreadcrumb","getPrevRouter","hasPreviousRouter","MenuDatasulService","callProgress","program","parent","postMessage","sendNotification","notification","openPath","datasulPath","baseUrl","open","CacheParamsService","values","setValue","key","getValue","removeValue","DateUtil","dateToQueryParam","date","iDay","getDate","iMonth","getMonth","getFullYear","pad","queryParamToDate","param","split","iYear","Date","isValidDate","isNaN","getTime","ajustDate","ajustDateToModel","fieldName","hasOwnProperty","number","DisclaimerUtil","poNotification","poI18nPipe","literals","makeDisclaimer","hideClose","tradValue","vldBlank","makeDisclaimerFromNumber","makeDisclaimerFromBoolean","makeDisclaimerFromDate","dDate","toLocaleDateString","makeDisclaimerFromMultiSelect","lstLabels","lstValues","item","makeDisclaimerFromCheckboxGroup","checkParam","makeDisclaimerFromRangeCharacter","validateEqual","valInitial","iniInitial","valFinal","iniFinal","transform","makeDisclaimerFromRangeNumber","makeDisclaimerFromRangeDate","valInitDate","valFinalDate","atzCharFromDisclamer","disclaimers","defaultValue","returnValue","find","atzNumberFromDisclamer","atzBooleanFromDisclamer","disclaimerFind","atzDateFromDisclamer","atzMultiSelectCharFromDisclamer","atzMultiSelectFromDisclamer","atzMultiSelectNumberFromDisclamer","itemOpt","atzCheckboxFromDisclamer","options","atzRangeCharFromDisclamer","rangeChar","atzRangeCharFromQueryParam","atzRangeNumFromDisclamer","rangeNum","atzRangeNumFromQueryParam","atzRangeDateFromDisclamer","rangeDate","atzRangeDateFromQueryParam","FieldValidationUtil","disclaimerUtil","vldFieldCharacter","field","trim","error","message","vldRangeCharacter","initialField","finalField","initialValue","finalValue","toUpperCase","vldFieldNumber","vldValue","zeroAccept","vldValueOfNumber","toString","vldFieldPercent","vldValueOfPercent","vldRangeNumber","vldFieldDate","valDate","vldRangeDate","vldFieldMultiSelect","vldFieldCheckbox","vldFieldFormat","replacePoint","oldFormat","lOK","FilterRangeUtil","makeFilterRangeCharacter","makeFilterRangeNumber","makeFilterRangeDate","GenericFunctionsUtils","listToArrayCharacter","list","returnArray","Array","ArrayToListCharacter","array","join","isEmpty","object","content","getChartValues","chartData","chartValues","maxValue","minValue","Math","round","atzMultiSelectListByOptions","newList","findIndex","itemOptions","loadOptionsMultiSelect","loadOptionsSelect","selectValue","compareObjects","firstObject","secondObject","Object","getOwnPropertyNames","substr","referenceGeneration","charInd","dateRef","random","btoa","slice","ParametersRpw","RpwService","urlJobScheduler","filterRpw","fields","filter","filterZoom","order","table","getFilteredData","appId","localParams","assign","convertToArrayComboOption","getObjectByValue","convertToThfComboOption","createRpw","parameters","stringify","TotvsScheduleExecutionComponent","thfI18nService","rpwService","programEMS5","programVersion","endExecution","EventEmitter","jsonObject","ngOnInit","setupComponents","executionTypeOptions","frequencyOptions","frequencyTypeOptions","weeklyOptions","columns","model","executionType","activeTab","repeatExecution","isExecutionSchedule","isRepeatExecution","isFrenquency","frequency","changeRepeatExecution","execAppointHourInit","addZero","getHours","getMinutes","execAppointHourFinal","selectWeeklys","dayOfMonth","frequencyType","frequencyValue","changeExecutionType","execAppointDate","execAppointHour","changeTypeFrequency","setActiveTab","codTab","i","executeSchedule","validate","status","processID","recurrent","executionParameter","firstExecution","parametros","chave","valor","executionServer","externalName","parametros_negocio","subscribe","success","daily","hour","getHourOrMinute","minute","weekly","daysOfWeek","monthly","day","rangeExecutions","rangeLimit","emit","substring","compareHour","hourInit","hourFinal","scheduleExecutionForm","valid","Component","selector","template","PoI18nService","PoNotificationService","ViewChild","static","Input","Output","DtsDateFormatPipe","_a","year","month","Pipe","DtsBackofficeUtilsModule","forRoot","ngModule","providers","NgModule","declarations","imports","CommonModule","PoModule","FormsModule","HttpClientModule","exports","XLSX","PDF","DOCX","HTML"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ISessionInfo } from '../model/session-info.model';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UserLoginService {\r\n\r\n    readonly apiUrl = '/totvs-menu/rest/getSessionInfo';\r\n    userLogin = undefined;\r\n\r\n    constructor(public http: HttpClient) { }\r\n\r\n    getUserLogin(): Observable<string> {\r\n        if (localStorage.getItem('username')) {\r\n            return of(localStorage.getItem('username'));\r\n        }\r\n\r\n        if (this.userLogin) {\r\n            return of(this.userLogin);\r\n        } else {\r\n            return this.http.get<ISessionInfo>(`${this.apiUrl}`)\r\n                .pipe(map((response) => {\r\n                    this.userLogin = response.userName;\r\n                    return response.userName;\r\n                }));\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators/map';\r\n\r\nexport interface IProfile {\r\n    pageId: string;\r\n    dataCode: string;\r\n    userCode: string;\r\n    dataValue?: string;\r\n}\r\n\r\nexport interface IProfileResponse {\r\n    message: Array<string>;\r\n    length: number;\r\n    data: Array<any>;\r\n}\r\n\r\nenum EDataType {\r\n    STRING = 1,\r\n    JSON = 2\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ProfileService {\r\n\r\n    readonly apiURL = '/dts/datasul-rest/resources/api/btb/btapi930za';\r\n\r\n    constructor(public http: HttpClient) { }\r\n\r\n    setProfile(profile: IProfile): Observable<any> {\r\n        const headers = { 'X-PO-Screen-Lock': 'true' };\r\n        const { pageId, userCode } = profile;\r\n\r\n        return this.http\r\n            .post<any>(`${this.apiURL}/setProfile?userCode=${userCode}&pageId=${pageId}`, profile, { headers });\r\n\r\n    }\r\n\r\n    getProfileAsString(profile: IProfile, showLoading?: boolean): Observable<string> {\r\n        return this.getProfile(profile, EDataType.STRING, showLoading ? 'true' : 'false');\r\n    }\r\n\r\n    getProfileAsJSON(profile: IProfile, showLoading?: boolean): Observable<object> {\r\n        return this.getProfile(profile, EDataType.JSON, showLoading ? 'true' : 'false');\r\n    }\r\n\r\n    private getProfile(profile: IProfile, dataType: EDataType, showLoading?: string): Observable<any> {\r\n        const headers = { 'X-PO-Screen-Lock': showLoading };\r\n        const { pageId, dataCode, userCode } = profile;\r\n\r\n        return this.http\r\n            .get<IProfileResponse>(`${this.apiURL}/getProfile?userCode=${userCode}&pageId=${pageId}&dataCode=${dataCode}`,\r\n                { headers })\r\n            .pipe(map(preference => {\r\n                if (preference.data[0]) {\r\n                    if (dataType === EDataType.STRING) {\r\n                        return preference.data[0].dataValue;\r\n                    }\r\n\r\n                    if (dataType === EDataType.JSON) {\r\n                        return JSON.parse(preference.data[0].dataValue);\r\n                    }\r\n                } else {\r\n                    return undefined;\r\n                }\r\n            }));\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators/map';\r\n\r\nexport interface IProperty {\r\n  name: string;\r\n  value: string;\r\n}\r\n\r\nexport interface IReportServiceParams {\r\n  reportName: string; // Nome do rptDesign\r\n  programName: string; // Programa Progress\r\n  properties: Array<IProperty>;\r\n  dialect: string;\r\n  downloadName: string;\r\n  download: boolean;\r\n  format: ReportFormats;\r\n}\r\n\r\nexport enum ReportFormats {\r\n  XLSX = 'xlsx',\r\n  PDF = 'pdf',\r\n  DOCX = 'docx',\r\n  HTML = 'html'\r\n}\r\n\r\n@Injectable()\r\n\r\nexport class ReportService {\r\n  public readonly URL = window.location.href.indexOf('totvs-menu') > 0 ? '/totvs-menu/rest/report/run/'\r\n                        : '/dts/datasul-report/resources/run/';\r\n\r\n\r\n  constructor(public httpClient: HttpClient) { }\r\n\r\n  generate(params: IReportServiceParams, showLoading: boolean = true): Observable<Blob> {\r\n    const headers = { 'X-PO-Screen-Lock': showLoading ? 'true' : 'false' };\r\n\r\n    let reportURL = `${this.URL}${params.reportName}`;\r\n\r\n    if (params.properties.length > 0) {\r\n      reportURL += '?';\r\n\r\n      params.properties.forEach((property: IProperty, index: number) => {\r\n        if (index > 0) {\r\n          reportURL += '&';\r\n        }\r\n        reportURL += `c_properties=${property.name}&c_values=${property.value}`;\r\n      });\r\n    }\r\n\r\n    reportURL += `&dialect=${params.dialect}&format=${params.format}`;\r\n    reportURL += `&program=${params.programName}&resultFileName=${params.downloadName}`;\r\n\r\n    return this.httpClient.post(reportURL, {}, { headers, responseType: 'blob' })\r\n      .pipe(map(report => {\r\n        if (params.download) {\r\n          this.download(report, `${params.downloadName}.${params.format}`);\r\n        }\r\n        return report;\r\n      }));\r\n  }\r\n\r\n  download(file: Blob, fileName: string) {\r\n    const binaryData = [file];\r\n    const downloadLink = document.createElement('a');\r\n    const urlDownload = window.URL.createObjectURL(new Blob(binaryData, { type: file.type }));\r\n\r\n    downloadLink.href = urlDownload;\r\n    downloadLink.setAttribute('download', fileName);\r\n    document.body.appendChild(downloadLink);\r\n    downloadLink.click();\r\n    window.URL.revokeObjectURL(urlDownload);\r\n    downloadLink.remove();\r\n  }\r\n}\r\n","/*\r\nVersÃ£o: 1.003\r\nData CriaÃ§Ã£o: 06/08/2018\r\n*/\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { PoBreadcrumb } from '@po-ui/ng-components';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class BreadcrumbControlService {\r\n    breadcrumb: PoBreadcrumb;\r\n\r\n    constructor() { }\r\n\r\n    public newBreadcrumb(): void {\r\n        this.breadcrumb = { items: [] };\r\n    }\r\n\r\n    public addBreadcrumb(literal: string, activatedRoute: ActivatedRoute): void {\r\n        this.addBreadcrumbURL(literal, decodeURIComponent(activatedRoute.snapshot['_routerState'].url));\r\n    }\r\n\r\n    public addBreadcrumbURL(literal: string, url: string): void {\r\n        if (!literal || literal === '') { return; }\r\n        if (!this.breadcrumb) { this.newBreadcrumb(); }\r\n\r\n        const breadcrumbAux = { items: [] };\r\n\r\n        let idx = 0;\r\n        for (idx = 0; idx < this.breadcrumb.items.length; idx++) {\r\n            if (this.breadcrumb.items[idx].label !== literal) {\r\n                breadcrumbAux.items.push(this.breadcrumb.items[idx]);\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        breadcrumbAux.items.push({ label: literal, link: url });\r\n\r\n        this.breadcrumb = breadcrumbAux;\r\n    }\r\n\r\n    public updBreadcrumbURL(literal: string, valueOld: string, valueNew: string): void {\r\n        let currentRouterURL = this.getCurrentRouter();\r\n\r\n        if (!currentRouterURL) { return; }\r\n        if (!valueOld) { return; }\r\n        if (!valueNew) { return; }\r\n\r\n        currentRouterURL = currentRouterURL.replace(valueOld, valueNew);\r\n        this.addBreadcrumbURL(literal, currentRouterURL);\r\n    }\r\n\r\n    public getBreadcrumb(): PoBreadcrumb {\r\n        if (!this.breadcrumb) { this.newBreadcrumb(); }\r\n        return this.breadcrumb;\r\n    }\r\n\r\n    public getCurrentRouter(): string {\r\n        if (!this.breadcrumb) { this.newBreadcrumb(); }\r\n        if (this.breadcrumb.items.length <= 0) { return ''; }\r\n\r\n        return this.breadcrumb.items[this.breadcrumb.items.length - 1].link;\r\n    }\r\n\r\n    public getPrevRouter(): string {\r\n        if (!this.breadcrumb) { this.newBreadcrumb(); }\r\n        if (this.breadcrumb.items.length <= 1) { return ''; }\r\n\r\n        return this.breadcrumb.items[this.breadcrumb.items.length - 2].link;\r\n    }\r\n\r\n    public hasPreviousRouter(): boolean {\r\n        return this.breadcrumb.items.length > 1;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class MenuDatasulService {\r\n\r\n  constructor() { }\r\n\r\n  public callProgress(program) {\r\n\r\n    /**\r\n     * var program = {};\r\n     * program['prg'] = \"cd0210\";\r\n     * program['params'] = '01|123456'\r\n     */\r\n\r\n    parent.postMessage({ program }, '*');\r\n  }\r\n\r\n  public sendNotification(notification) {\r\n\r\n    /**\r\n     * var notification = {};\r\n     * notification['type'] = 'success';\r\n     * notification['title'] = 'Notification Title'\r\n     * notification['detail'] = 'Notification Detail'\r\n     */\r\n\r\n    parent.postMessage({ notification }, '*');\r\n  }\r\n\r\n  public openPath(programName: string, params: any, parent: boolean = true): void {\r\n    const datasulPath = window.location.href.indexOf('totvs-menu') > 0 ? 'totvs-menu' : 'menu-html';\r\n    const baseUrl = `/${datasulPath}/#/${datasulPath}/program-html/${programName}/#`;\r\n\r\n    if (parent) {\r\n      window.open(`${baseUrl}/${params}`, '_parent');\r\n    } else {\r\n      window.open(`${baseUrl}/${params}`);\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class CacheParamsService {\r\n\r\n    values = {};\r\n\r\n    constructor() { }\r\n\r\n    public setValue(key: string, value: any) {\r\n        this.values[key] = value;\r\n    }\r\n\r\n    public getValue(key: string): any {\r\n        return this.values[key];\r\n    }\r\n\r\n    public removeValue(key: string): void {\r\n        delete this.values[key];\r\n    }\r\n}\r\n","/*\r\nVersÃ£o: 1.000\r\nData CriaÃ§Ã£o: 18/04/2019\r\n*/\r\n\r\nexport class DateUtil {\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    /* Transforma data para o padrÃ£o YYYY-MM-DD */\r\n    static dateToQueryParam(date: Date): string {\r\n        const iDay = date.getDate();\r\n        const iMonth = date.getMonth() + 1;\r\n        const iYear = date.getFullYear();\r\n\r\n        return `${iYear}-${this.pad(iMonth)}-${this.pad(iDay)}`;\r\n    }\r\n\r\n    /* Transforma data no padrÃ£o YYYY-MM-DD para DATE */\r\n    static queryParamToDate(param: string): Date {\r\n        const iDay = +param.split('-')[2];\r\n        const iMonth = +param.split('-')[1];\r\n        const iYear = +param.split('-')[0];\r\n\r\n        return new Date(iYear, iMonth - 1, iDay);\r\n    }\r\n\r\n    /* Valida se foi informado uma data vÃ¡lida */\r\n    static isValidDate(date: Date) {\r\n        return date instanceof Date && !isNaN(date.getTime());\r\n    }\r\n\r\n    /* Ajusta a data retornando o padrÃ£o DATE */\r\n    static ajustDate(param: any): Date {\r\n        if (param instanceof Date) { return param; }\r\n        if (!param) { return param; }\r\n\r\n        return this.queryParamToDate(param.split('T')[0]);\r\n    }\r\n\r\n    /* Ajusta a data para o padrÃ£o DATE - utilizada nos construtores dos modelos */\r\n    static ajustDateToModel(values: Object = {}, fieldName: string): Date {\r\n        if (values.hasOwnProperty(fieldName) && (values[fieldName])) {\r\n            if (values[fieldName].indexOf('T') >= 0) {\r\n                return new Date(values[fieldName]);\r\n            }\r\n\r\n            const iDay = +values[fieldName].split('-')[2];\r\n            const iMonth = +values[fieldName].split('-')[1];\r\n            const iYear = +values[fieldName].split('-')[0];\r\n            return new Date(iYear, iMonth - 1, iDay);\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /* Adicona zero a esquerda do nÃºmero */\r\n    static pad(number) {\r\n        if (number < 10) {\r\n            return '0' + number;\r\n        }\r\n        return number;\r\n    }\r\n}\r\n","/*\r\nVersÃ£o: 1.009\r\nData CriaÃ§Ã£o: 06/08/2018\r\n*/\r\n\r\nimport { PoDisclaimer, PoI18nPipe, PoCheckboxGroupOption, PoMultiselectOption } from '@po-ui/ng-components';\r\nimport { IFilterRangeCharacter, IFilterRangeNumber, IFilterRangeDate } from '../../lib/interfaces/filter-range.interface';\r\nimport { PoNotificationService } from '@po-ui/ng-components';\r\n\r\nexport class DisclaimerUtil {\r\n    poNotification: PoNotificationService;\r\n    poI18nPipe: PoI18nPipe;\r\n    literals: any = {};\r\n\r\n    constructor(\r\n        poNotification: PoNotificationService,\r\n        poI18nPipe: PoI18nPipe,\r\n        literals: Object\r\n    ) {\r\n        this.poNotification = poNotification;\r\n        this.poI18nPipe = poI18nPipe;\r\n        this.literals = literals;\r\n    }\r\n\r\n    public makeDisclaimer(property: string, value: string, hideClose = false, tradValue = false, vldBlank = false): PoDisclaimer {\r\n        if (value === null || value === undefined) {\r\n            return { label: '', property: '', value: '' };\r\n        }\r\n\r\n        if (vldBlank && value === '') {\r\n            return { label: '', property: '', value: '' };\r\n        }\r\n\r\n        return {\r\n            hideClose,\r\n            label: `${this.literals[property]}: ${tradValue ? this.literals[value] : value}`,\r\n            property: `${property}`,\r\n            value: `${value}`\r\n        };\r\n    }\r\n\r\n    public makeDisclaimerFromNumber(property: string, value: number, hideClose = false, vldBlank = false): PoDisclaimer {\r\n        if (value === null || value === undefined) {\r\n            return { label: '', property: '', value: '' };\r\n        }\r\n\r\n        if (vldBlank && value === 0) {\r\n            return { label: '', property: '', value: '' };\r\n        }\r\n\r\n        return {\r\n            hideClose,\r\n            label: `${this.literals[property]}: ${value}`,\r\n            property: `${property}`,\r\n            value: `${value}`\r\n        };\r\n    }\r\n\r\n    public makeDisclaimerFromBoolean(property: string, value: boolean, hideClose = false): PoDisclaimer {\r\n        if (value === null || value === undefined) {\r\n            return { label: '', property: '', value: '' };\r\n        }\r\n\r\n        return {\r\n            hideClose,\r\n            label: `${this.literals[property]}: ${value ? this.literals['yes'] : this.literals['no']}`,\r\n            property: `${property}`,\r\n            value: `${value}`\r\n        };\r\n    }\r\n\r\n    public makeDisclaimerFromDate(property: string, value: Date, hideClose = false): PoDisclaimer {\r\n        const dDate: Date = this.ajustDate(value);\r\n\r\n        if (!this.isValidDate(dDate)) {\r\n            return { label: '', property: '', value: '' };\r\n        }\r\n\r\n        return {\r\n            hideClose,\r\n            label: `${this.literals[property]}: ${dDate.toLocaleDateString()}`,\r\n            property: `${property}`,\r\n            value: `${this.dateToQueryParam(dDate)}`\r\n        };\r\n    }\r\n\r\n    public makeDisclaimerFromMultiSelect(property: string, value: Array<any>, length = 0,\r\n        hideClose = false, tradValue = false): PoDisclaimer {\r\n        let lstLabels = '';\r\n        let lstValues = '';\r\n\r\n        if (!value) {\r\n            return { label: '', property: '', value: '' };\r\n        }\r\n\r\n        if (value.length === 0 || (length > 0 && value.length === length)) {\r\n            lstLabels = this.literals['all'];\r\n            lstValues = 'all';\r\n        } else {\r\n            value.map(item => {\r\n                if (lstLabels !== '') { lstLabels = `${lstLabels}, `; }\r\n                if (lstValues !== '') { lstValues = `${lstValues},`; }\r\n                lstLabels = `${lstLabels}${tradValue ? this.literals[item] : item}`;\r\n                lstValues = `${lstValues}${item}`;\r\n            });\r\n        }\r\n\r\n        return {\r\n            hideClose,\r\n            label: `${this.literals[property]}: ${lstLabels}`,\r\n            property: `${property}`,\r\n            value: `${lstValues}`\r\n        };\r\n    }\r\n\r\n    public makeDisclaimerFromCheckboxGroup(property: string, value: Array<string>, length = 0, hideClose = false): PoDisclaimer {\r\n        let lstLabels = '';\r\n        let lstValues = '';\r\n\r\n        if (!value) {\r\n            return { label: '', property: '', value: '' };\r\n        }\r\n\r\n        if (value.length === 0) {\r\n            lstLabels = this.literals['none'];\r\n            lstValues = 'none';\r\n        } else if (length > 0 && value.length === length) {\r\n            lstLabels = this.literals['all'];\r\n            lstValues = 'all';\r\n        } else {\r\n            value.map(checkParam => {\r\n                if (lstLabels !== '') { lstLabels = `${lstLabels}, `; }\r\n                if (lstValues !== '') { lstValues = `${lstValues},`; }\r\n                lstLabels = `${lstLabels}${this.literals[checkParam]}`;\r\n                lstValues = `${lstValues}${checkParam}`;\r\n            });\r\n        }\r\n\r\n        return {\r\n            hideClose,\r\n            label: `${this.literals[property]}: ${lstLabels}`,\r\n            property: `${property}`,\r\n            value: `${lstValues}`\r\n        };\r\n    }\r\n\r\n    public makeDisclaimerFromRangeCharacter(property: string, value: IFilterRangeCharacter, hideClose = false,\r\n        validateEqual = true): PoDisclaimer {\r\n        if (value.valInitial === null || value.valInitial === undefined) { value.valInitial = value.iniInitial; }\r\n        if (value.valFinal === null || value.valFinal === undefined) { value.valFinal = value.iniFinal; }\r\n\r\n        if (validateEqual &&\r\n            value.iniInitial === value.valInitial &&\r\n            value.iniFinal === value.valFinal) {\r\n            return { label: '', property: '', value: '' };\r\n        }\r\n\r\n        return {\r\n            hideClose,\r\n            label: this.poI18nPipe.transform(\r\n                this.literals['filterRange'],\r\n                [this.literals[property], `'${value.valInitial}'`, `'${value.valFinal}'`]),\r\n            property: `${property}`,\r\n            value: `${value.valInitial};${value.valFinal}`\r\n        };\r\n    }\r\n\r\n    public makeDisclaimerFromRangeNumber(property: string, value: IFilterRangeNumber, hideClose = false,\r\n        validateEqual = true): PoDisclaimer {\r\n        if (value.valInitial === null || value.valInitial === undefined) { value.valInitial = value.iniInitial; }\r\n        if (value.valFinal === null || value.valFinal === undefined) { value.valFinal = value.iniFinal; }\r\n\r\n        if (validateEqual &&\r\n            value.iniInitial === value.valInitial &&\r\n            value.iniFinal === value.valFinal) {\r\n            return { label: '', property: '', value: '' };\r\n        }\r\n\r\n        return {\r\n            hideClose,\r\n            label: this.poI18nPipe.transform(\r\n                this.literals['filterRange'],\r\n                [this.literals[property], value.valInitial, value.valFinal]),\r\n            property: `${property}`,\r\n            value: `${value.valInitial};${value.valFinal}`\r\n        };\r\n    }\r\n\r\n    public makeDisclaimerFromRangeDate(property: string, value: IFilterRangeDate, hideClose = false, validateEqual = true): PoDisclaimer {\r\n        let valInitDate: Date = this.ajustDate(value.valInitial);\r\n        let valFinalDate: Date = this.ajustDate(value.valFinal);\r\n\r\n        if (!this.isValidDate(valInitDate)) {\r\n            valInitDate = value.iniInitial;\r\n            value.valInitial = value.iniInitial;\r\n        }\r\n        if (!this.isValidDate(valFinalDate)) {\r\n            valFinalDate = value.iniFinal;\r\n            value.valFinal = value.iniFinal;\r\n        }\r\n\r\n        if (validateEqual &&\r\n            this.dateToQueryParam(value.iniInitial) === this.dateToQueryParam(valInitDate) &&\r\n            this.dateToQueryParam(value.iniFinal) === this.dateToQueryParam(valFinalDate)) {\r\n            return { label: '', property: '', value: '' };\r\n        }\r\n\r\n        return {\r\n            hideClose,\r\n            label: this.poI18nPipe.transform(\r\n                this.literals['filterRange'],\r\n                [this.literals[property], valInitDate.toLocaleDateString(), valFinalDate.toLocaleDateString()]),\r\n            property: `${property}`,\r\n            value: `${this.dateToQueryParam(valInitDate)};${this.dateToQueryParam(valFinalDate)}`\r\n        };\r\n    }\r\n\r\n    public atzCharFromDisclamer(disclaimers: Array<PoDisclaimer>, property: string, defaultValue: string): string {\r\n        let returnValue = defaultValue;\r\n\r\n        if (disclaimers && disclaimers.length > 0) {\r\n            disclaimers.find((item) => {\r\n                if (item.property === property) {\r\n                    if (item.value === null) { return false; }\r\n\r\n                    returnValue = item.value;\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n        }\r\n        return returnValue;\r\n    }\r\n\r\n    public atzNumberFromDisclamer(disclaimers: Array<PoDisclaimer>, property: string, defaultValue: number): number {\r\n        let returnValue = defaultValue;\r\n\r\n        if (disclaimers && disclaimers.length > 0) {\r\n            disclaimers.find((item) => {\r\n                if (item.property === property) {\r\n                    if (item.value === null) { return false; }\r\n\r\n                    returnValue = item.value;\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n        }\r\n        return returnValue;\r\n    }\r\n\r\n    public atzBooleanFromDisclamer(disclaimers: Array<PoDisclaimer>, property: string, defaultValue: boolean): boolean {\r\n        const returnValue = defaultValue;\r\n\r\n        if (disclaimers && disclaimers.length > 0) {\r\n            const disclaimerFind = disclaimers.find((item) => item.property === property);\r\n            if (disclaimerFind && disclaimerFind.value !== null && disclaimerFind.value !== undefined) {\r\n                if (disclaimerFind.value === 'true') {\r\n                    return true;\r\n                } else {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return returnValue;\r\n    }\r\n\r\n    public atzDateFromDisclamer(disclaimers: Array<PoDisclaimer>, property: string, defaultValue: Date): Date {\r\n        let returnValue: Date = this.ajustDate(defaultValue);\r\n\r\n        if (disclaimers && disclaimers.length > 0) {\r\n            disclaimers.find((item) => {\r\n                if (item.property === property) {\r\n                    if (item.value === null) { return false; }\r\n\r\n                    returnValue = this.ajustDate(item.value);\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n        }\r\n        return returnValue;\r\n    }\r\n\r\n    public atzMultiSelectCharFromDisclamer(disclaimers: Array<PoDisclaimer>, property: string,\r\n        defaultValue: Array<PoMultiselectOption>): Array<string> {\r\n        return this.atzMultiSelectFromDisclamer('char', disclaimers, property, defaultValue);\r\n    }\r\n\r\n    public atzMultiSelectNumberFromDisclamer(disclaimers: Array<PoDisclaimer>, property: string,\r\n        defaultValue: Array<PoMultiselectOption>): Array<number> {\r\n        return this.atzMultiSelectFromDisclamer('number', disclaimers, property, defaultValue);\r\n    }\r\n\r\n    public atzMultiSelectFromDisclamer(type: string, disclaimers: Array<PoDisclaimer>, property: string,\r\n        defaultValue: Array<PoMultiselectOption>): Array<any> {\r\n\r\n        let returnValue = [];\r\n        defaultValue.map(item => {\r\n            returnValue.push(item.value);\r\n        });\r\n\r\n        if (disclaimers && disclaimers.length > 0) {\r\n            disclaimers.find((item) => {\r\n                if (item.property === property) {\r\n                    if (item.value === null || item.value === 'all' || item.value === 'none') { return false; }\r\n\r\n                    returnValue = [];\r\n                    item.value.split(',').forEach(itemOpt => {\r\n                        if (type === 'char') { returnValue.push(itemOpt); }\r\n                        if (type === 'number') { returnValue.push(+itemOpt); }\r\n                    });\r\n\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n        }\r\n        return returnValue;\r\n    }\r\n\r\n    public atzCheckboxFromDisclamer(disclaimers: Array<PoDisclaimer>, property: string,\r\n        options: Array<PoCheckboxGroupOption>): Array<string> {\r\n\r\n        let returnValue = [];\r\n        options.map(item => {\r\n            returnValue.push(item.value);\r\n        });\r\n\r\n        if (disclaimers && disclaimers.length > 0) {\r\n            disclaimers.find((item) => {\r\n                if (item.property === property) {\r\n                    if (item.value === null || item.value === 'all' || item.value === 'none') { return false; }\r\n\r\n                    returnValue = [];\r\n                    item.value.split(',').forEach(itemOpt => {\r\n                        returnValue.push(itemOpt);\r\n                    });\r\n\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n        }\r\n        return returnValue;\r\n    }\r\n\r\n    public atzRangeCharFromDisclamer(disclaimers: Array<PoDisclaimer>, property: string,\r\n        rangeChar: IFilterRangeCharacter): IFilterRangeCharacter {\r\n        let value = '';\r\n\r\n        if (disclaimers && disclaimers.length > 0) {\r\n            disclaimers.find((item) => {\r\n                if (item.property === property) {\r\n                    if (item.value === null) { return false; }\r\n                    value = item.value;\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n        }\r\n        return this.atzRangeCharFromQueryParam(value, rangeChar);\r\n    }\r\n\r\n    public atzRangeNumFromDisclamer(disclaimers: Array<PoDisclaimer>, property: string,\r\n        rangeNum: IFilterRangeNumber): IFilterRangeNumber {\r\n        let value = '';\r\n\r\n        if (disclaimers && disclaimers.length > 0) {\r\n            disclaimers.find((item) => {\r\n                if (item.property === property) {\r\n                    if (item.value === null) { return false; }\r\n                    value = item.value;\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n        }\r\n        return this.atzRangeNumFromQueryParam(value, rangeNum);\r\n    }\r\n\r\n    public atzRangeDateFromDisclamer(disclaimers: Array<PoDisclaimer>, property: string,\r\n        rangeDate: IFilterRangeDate): IFilterRangeDate {\r\n        let value = '';\r\n\r\n        if (disclaimers && disclaimers.length > 0) {\r\n            disclaimers.find((item) => {\r\n                if (item.property === property) {\r\n                    if (item.value === null) { return false; }\r\n                    value = item.value;\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n        }\r\n        return this.atzRangeDateFromQueryParam(value, rangeDate);\r\n    }\r\n\r\n    public atzRangeCharFromQueryParam(value: string, rangeChar: IFilterRangeCharacter): IFilterRangeCharacter {\r\n        rangeChar.valInitial = rangeChar.iniInitial;\r\n        rangeChar.valFinal = rangeChar.iniFinal;\r\n\r\n        if (!value || value === '') { return rangeChar; }\r\n\r\n        rangeChar.valInitial = value.split(';')[0];\r\n        rangeChar.valFinal = value.split(';')[1];\r\n        if (rangeChar.valFinal === null || rangeChar.valFinal === undefined) { rangeChar.valFinal = rangeChar.iniFinal; }\r\n\r\n        return rangeChar;\r\n    }\r\n\r\n    public atzRangeNumFromQueryParam(value: string, rangeNum: IFilterRangeNumber): IFilterRangeNumber {\r\n        rangeNum.valInitial = rangeNum.iniInitial;\r\n        rangeNum.valFinal = rangeNum.iniFinal;\r\n\r\n        if (!value || value === '') { return rangeNum; }\r\n\r\n        rangeNum.valInitial = +value.split(';')[0];\r\n        rangeNum.valFinal = +value.split(';')[1];\r\n        if (rangeNum.valFinal === null || rangeNum.valFinal === undefined) { rangeNum.valFinal = rangeNum.iniFinal; }\r\n\r\n        return rangeNum;\r\n    }\r\n\r\n    public atzRangeDateFromQueryParam(value: string, rangeDate: IFilterRangeDate): IFilterRangeDate {\r\n        rangeDate.valInitial = rangeDate.iniInitial;\r\n        rangeDate.valFinal = rangeDate.iniFinal;\r\n\r\n        if (!value || value === '') { return rangeDate; }\r\n\r\n        rangeDate.valInitial = this.queryParamToDate(value.split(';')[0]);\r\n        rangeDate.valFinal = this.queryParamToDate(value.split(';')[1]);\r\n        if (rangeDate.valFinal === null || rangeDate.valFinal === undefined) { rangeDate.valFinal = rangeDate.iniFinal; }\r\n\r\n        return rangeDate;\r\n    }\r\n\r\n    public dateToQueryParam(date: Date): string {\r\n        const iDay = date.getDate();\r\n        const iMonth = date.getMonth() + 1;\r\n        const iYear = date.getFullYear();\r\n\r\n        return `${iYear}-${this.pad(iMonth)}-${this.pad(iDay)}`;\r\n    }\r\n\r\n    public queryParamToDate(param: string): Date {\r\n        const iDay = +param.split('-')[2];\r\n        const iMonth = +param.split('-')[1];\r\n        const iYear = +param.split('-')[0];\r\n\r\n        return new Date(iYear, iMonth - 1, iDay);\r\n    }\r\n\r\n    public isValidDate(date: Date) {\r\n        return date instanceof Date && !isNaN(date.getTime());\r\n    }\r\n\r\n    public ajustDate(param: any): Date {\r\n        if (param instanceof Date) { return param; }\r\n        if (!param) { return param; }\r\n\r\n        return this.queryParamToDate(param.split('T')[0]);\r\n    }\r\n\r\n    public pad(number) {\r\n        if (number < 10) {\r\n            return '0' + number;\r\n        }\r\n        return number;\r\n    }\r\n}\r\n","/*\r\nVersÃ£o: 1.002\r\nData CriaÃ§Ã£o: 19/02/2019\r\n*/\r\n\r\nimport { PoNotificationService, PoI18nPipe } from '@po-ui/ng-components';\r\nimport { DisclaimerUtil } from './disclaimer.util';\r\n\r\nexport class FieldValidationUtil {\r\n    poNotification: PoNotificationService;\r\n    poI18nPipe: PoI18nPipe;\r\n    literals: any = {};\r\n\r\n    disclaimerUtil: DisclaimerUtil;\r\n\r\n    constructor(\r\n        poNotification: PoNotificationService,\r\n        poI18nPipe: PoI18nPipe,\r\n        literals: Object\r\n    ) {\r\n        this.poNotification = poNotification;\r\n        this.poI18nPipe = poI18nPipe;\r\n        this.literals = literals;\r\n        this.disclaimerUtil = new DisclaimerUtil(this.poNotification, this.poI18nPipe, this.literals);\r\n    }\r\n\r\n    public vldFieldCharacter(field: string, value: string): boolean {\r\n        if (!value || value.trim() === '') {\r\n            this.poNotification.error({\r\n                message: this.poI18nPipe.transform(this.literals['fieldVldRequered'], [this.literals[field]])\r\n            });\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // Valida uma faixa de caracteres se o inicial Ã© menor que final\r\n    public vldRangeCharacter(initialField: string, finalField: string, initialValue: string, finalValue: string): boolean {\r\n        if (!initialValue || !finalValue) {\r\n            return true;\r\n        }\r\n\r\n        if (initialValue.trim().toUpperCase() > finalValue.trim().toUpperCase()) {\r\n            this.poNotification.error({\r\n                message: this.poI18nPipe.transform(this.literals['fieldVldRange'],\r\n                    [this.literals[initialField], this.literals[finalField]])\r\n            });\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public vldFieldNumber(field: string, value: number, vldValue = false, zeroAccept = false): boolean {\r\n        if (vldValue && !this.vldValueOfNumber(field, value)) {\r\n            return false;\r\n        }\r\n\r\n        if ((!value) || value <= 0) {\r\n            if (value === 0 && zeroAccept === true) {\r\n                return true;\r\n            }\r\n\r\n            this.poNotification.error({\r\n                message: this.poI18nPipe.transform(this.literals['fieldVldRequered'], [this.literals[field]])\r\n            });\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public vldValueOfNumber(field: string, value: number): boolean {\r\n        if (value && value < 0) {\r\n            this.poNotification.error(\r\n                { message: this.poI18nPipe.transform(this.literals['fieldVldNumber'], [value.toString(), this.literals[field]]) });\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public vldFieldPercent(field: string, value: number, vldValue = false): boolean {\r\n        if (vldValue && !this.vldValueOfPercent(field, value)) {\r\n            return false;\r\n        }\r\n\r\n        if (!this.vldFieldNumber(field, value)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public vldValueOfPercent(field: string, value: number): boolean {\r\n        if (value && value < 0) {\r\n            this.poNotification.error(\r\n                { message: this.poI18nPipe.transform(this.literals['fieldVldNumber'], [value.toString(), this.literals[field]]) });\r\n            return false;\r\n        }\r\n\r\n        if (value && value > 100) {\r\n            this.poNotification.error(\r\n                { message: this.poI18nPipe.transform(this.literals['fieldVldNumber'], [value.toString(), this.literals[field]]) });\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // Valida uma faixa de nÃºmeros se o inicial Ã© menor que final\r\n    public vldRangeNumber(initialField: string, finalField: string, initialValue: number, finalValue: number): boolean {\r\n        if (!initialValue) { initialValue = 0; }\r\n        if (!finalValue) { finalValue = 0; }\r\n\r\n        if (initialValue > finalValue) {\r\n            this.poNotification.error({\r\n                message: this.poI18nPipe.transform(this.literals['fieldVldRange'],\r\n                    [this.literals[initialField], this.literals[finalField]])\r\n            });\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public vldFieldDate(field: string, value: Date): boolean {\r\n        const valDate = this.disclaimerUtil.ajustDate(value);\r\n\r\n        if (!this.disclaimerUtil.isValidDate(valDate)) {\r\n            this.poNotification.error({\r\n                message: this.poI18nPipe.transform(this.literals['fieldVldDate'], [this.literals[field]])\r\n            });\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // Valida uma faixa de datas se o inicial Ã© menor que final\r\n    public vldRangeDate(initialField: string, finalField: string, initialValue: Date, finalValue: Date): boolean {\r\n        if (!initialValue || !finalValue) {\r\n            return true;\r\n        }\r\n\r\n        const valInitialDate = this.disclaimerUtil.ajustDate(initialValue).getTime();\r\n        const valFinalDate = this.disclaimerUtil.ajustDate(finalValue).getTime();\r\n\r\n        if (valInitialDate > valFinalDate) {\r\n            this.poNotification.error({\r\n                message: this.poI18nPipe.transform(this.literals['fieldVldRange'],\r\n                    [this.literals[initialField], this.literals[finalField]])\r\n            });\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public vldFieldMultiSelect(field: string, value: Array<any>): boolean {\r\n        if (!value || value.length === 0) {\r\n            this.poNotification.error({\r\n                message: this.poI18nPipe.transform(this.literals['fieldVldSelected'], [this.literals[field]])\r\n            });\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public vldFieldCheckbox(field: string, value: Array<string>): boolean {\r\n        if (!value || value.length === 0) {\r\n            this.poNotification.error({\r\n                message: this.poI18nPipe.transform(this.literals['fieldVldSelected'], [this.literals[field]])\r\n            });\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // Valida formato conforme regra: \"9\" apenas nÃºmeros, \"X\" qualquer caracter, \"!\" apenas letras maiÃºsculas\r\n    public vldFieldFormat(field: string, value: string, format: string, replacePoint = false): boolean {\r\n        let lOK = true;\r\n        let oldFormat: string;\r\n\r\n        if (!value) { return lOK; }\r\n\r\n        /*Retira os pontos do formato*/\r\n        if (replacePoint) {\r\n            oldFormat = format;\r\n            format = format.replace(/\\./g, '');\r\n        }\r\n\r\n        if (value.length !== format.length) {\r\n            lOK = false;\r\n        } else {\r\n            for (let idx = 0; idx < format.length; idx++) {\r\n                if (format[idx] === '9') {\r\n                    if (value[idx].replace(/[0-9]/, '9') !== '9') { lOK = false; break; }\r\n                }\r\n\r\n                if (format[idx] === '!') {\r\n                    if (value[idx].replace(/[A-Z]/, 'A') !== 'A') { lOK = false; break; }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (replacePoint) {\r\n            format = oldFormat;\r\n        }\r\n\r\n        if (!lOK) {\r\n            this.poNotification.error({\r\n                message: this.poI18nPipe.transform(this.literals['fieldVldFormat'], [this.literals[field], format])\r\n            });\r\n        }\r\n\r\n        return lOK;\r\n    }\r\n}\r\n","/*\r\nVersÃ£o: 1.000\r\nData CriaÃ§Ã£o: 06/08/2018\r\n*/\r\n\r\nimport { IFilterRangeCharacter, IFilterRangeNumber, IFilterRangeDate } from '../../lib/interfaces/filter-range.interface';\r\n\r\nexport class FilterRangeUtil {\r\n\r\n    constructor() {\r\n    }\r\n\r\n    public static makeFilterRangeCharacter(iniInitial: string, iniFinal: string): IFilterRangeCharacter {\r\n        return {\r\n            iniInitial,\r\n            iniFinal,\r\n            valInitial: iniInitial,\r\n            valFinal: iniFinal\r\n        };\r\n    }\r\n\r\n    public static makeFilterRangeNumber(iniInitial: number, iniFinal: number): IFilterRangeNumber {\r\n        return {\r\n            iniInitial,\r\n            iniFinal,\r\n            valInitial: iniInitial,\r\n            valFinal: iniFinal\r\n        };\r\n    }\r\n\r\n    public static makeFilterRangeDate(iniInitial: Date, iniFinal: Date): IFilterRangeDate {\r\n        return {\r\n            iniInitial,\r\n            iniFinal,\r\n            valInitial: iniInitial,\r\n            valFinal: iniFinal\r\n        };\r\n    }\r\n}\r\n","/*\r\nVersÃ£o: 1.003\r\nData CriaÃ§Ã£o: 18/04/2019\r\n*/\r\n\r\nimport { PoMultiselectOption, PoSelectOption } from '@po-ui/ng-components';\r\n\r\nexport interface ChartSeries {\r\n      name?: string;\r\n      data?: Array<number>;\r\n}\r\nexport interface ChartValues {\r\n    minValue: number;\r\n    maxValue: number;\r\n}\r\n\r\nexport class GenericFunctionsUtils {\r\n\r\n    literals: any = {};\r\n\r\n    constructor(\r\n        literals: Object\r\n    ) {\r\n        this.literals = literals;\r\n    }\r\n\r\n    /* Transforma uma Lista separada por \",\" em um Array */\r\n    static listToArrayCharacter(list: string): Array<string> {\r\n        let returnArray = new Array<string>();\r\n\r\n        if (list && list !== '') {\r\n            returnArray = list.split(',');\r\n        }\r\n\r\n        return returnArray;\r\n    }\r\n\r\n    /* Transforma um Array em uma Lista separada por \",\"  */\r\n    static ArrayToListCharacter(array: Array<string>): string {\r\n        let list = '';\r\n\r\n        if (array && array.length > 0) {\r\n            list = array.join(',');\r\n        }\r\n\r\n        return list;\r\n    }\r\n\r\n    static isEmpty(object: object): boolean {\r\n        let isEmpty = true;\r\n\r\n        for (const content in object) {\r\n            if (object.hasOwnProperty(content)) {\r\n                isEmpty = false;\r\n            }\r\n        }\r\n\r\n        return isEmpty;\r\n    }\r\n\r\n    static getChartValues(chartData: Array<ChartSeries>): ChartValues {\r\n\r\n        let chartValues: ChartValues;\r\n\r\n        let maxValue,\r\n            minValue;\r\n\r\n        maxValue = undefined;\r\n        minValue = undefined;\r\n\r\n        chartData.map(item => {\r\n            if (maxValue === undefined && minValue === undefined) {\r\n                maxValue = item.data[0];\r\n                minValue = item.data[0];\r\n            } else {\r\n                if (item.data < minValue) {\r\n                    minValue = item.data[0];\r\n                }\r\n                if (item.data > maxValue) {\r\n                    maxValue = item.data[0];\r\n                }\r\n            }\r\n        });\r\n\r\n        if (maxValue > 0 && minValue > 0) {\r\n            chartValues = { maxValue: maxValue, minValue: 0 };\r\n        }\r\n\r\n        if (maxValue > 0 && minValue < 0) {\r\n            chartValues = { maxValue: maxValue, minValue: minValue };\r\n        }\r\n\r\n        if (maxValue < 0 && minValue < 0) {\r\n            const max = (minValue / 3) * (- 1);\r\n            chartValues = { maxValue: max, minValue: minValue };\r\n        }\r\n\r\n        if (maxValue > 0 && minValue === 0) {\r\n            chartValues = { maxValue: maxValue, minValue: 0 };\r\n        }\r\n\r\n        if (maxValue === 0 && minValue < 0) {\r\n            const max = (minValue / 3) * (- 1);\r\n            chartValues = { maxValue: max, minValue: minValue };\r\n        }\r\n\r\n        if (maxValue === 0 && minValue === 0) {\r\n            chartValues = { maxValue: undefined, minValue: undefined };\r\n        }\r\n\r\n        chartValues.maxValue = Math.round(chartValues.maxValue);\r\n        chartValues.minValue = Math.round(chartValues.minValue);\r\n\r\n        return chartValues;\r\n    }\r\n\r\n    /*Deixa no list apenas o itens que existem no options*/\r\n    static atzMultiSelectListByOptions(options: Array<PoMultiselectOption>, list: Array<string>): Array<string> {\r\n        let idx: number;\r\n        let newList: Array<string>;\r\n\r\n        if (!list) {\r\n            return list;\r\n        }\r\n\r\n        newList = new Array<string>();\r\n\r\n        list.map(item => {\r\n            if (item) {\r\n                idx = options.findIndex(itemOptions => itemOptions.value === item);\r\n                if (idx >= 0) {\r\n                    newList.push(item);\r\n                }\r\n            }\r\n        });\r\n\r\n        return newList;\r\n    }\r\n\r\n    /*Carrega o Options com os valores defaults passados como parÃ¢metro (list)*/\r\n    public loadOptionsMultiSelect(options: Array<PoMultiselectOption>, list: Array<string>): void {\r\n        let idx: number;\r\n\r\n        if (!list) {\r\n            return;\r\n        }\r\n\r\n        list.map(item => {\r\n            if (item) {\r\n                idx = options.findIndex(itemOptions => itemOptions.value === item);\r\n                if (idx === -1) {\r\n                    options.push({ label: item === 'all' ? this.literals['all'] : item, value: item });\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /*Carrega o Options com os valores defaults passados como parÃ¢metro (list)*/\r\n    public loadOptionsSelect(options: Array<PoSelectOption>, selectValue: string, tradValue = false): void {\r\n        let idx: number;\r\n\r\n        if (!selectValue) {\r\n            return;\r\n        }\r\n\r\n        if (selectValue) {\r\n            idx = options.findIndex(itemOptions => itemOptions.value === selectValue);\r\n            if (idx === -1) {\r\n                options.push({ label: tradValue ? this.literals[selectValue] : selectValue, value: selectValue });\r\n            }\r\n        }\r\n    }\r\n\r\n    /*MÃ©todo que compara 2 objetos e retorna se sÃ£o iguais ou diferentes*/\r\n    public compareObjects(firstObject: Object, secondObject: Object): boolean {\r\n\r\n        if (!firstObject || !secondObject) {\r\n            return false;\r\n        }\r\n\r\n        /*Pega a lista de nomes dos campos do objetos e compara*/\r\n        if (Object.getOwnPropertyNames(firstObject).length !== Object.getOwnPropertyNames(secondObject).length) {\r\n            return false;\r\n        }\r\n\r\n        for (const content in firstObject) {\r\n            if (content.substr(0, 1) === '$' || content.substr(0, 1) === '_') {\r\n                continue;\r\n            }\r\n\r\n            if (firstObject[content] !== secondObject[content]) {\r\n                return false;\r\n            }\r\n\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    public referenceGeneration(charInd: string, dateRef: Date): string {\r\n        let reference: string;\r\n        let random: string;\r\n\r\n        const iDay = dateRef.getDate();\r\n        const iMonth = dateRef.getMonth() + 1;\r\n        const iYear = dateRef.getFullYear();\r\n\r\n        reference = `${this.pad(iYear)}${this.pad(iMonth)}${this.pad(iDay)}${charInd}`;\r\n\r\n        random = btoa(`${(new Date()).getTime()}`);\r\n        random = random.replace(/[=]/g, '');\r\n        random = random.slice(random.length - 3, random.length);\r\n\r\n        return `${reference}${random}`;\r\n    }\r\n\r\n    public pad(number): string {\r\n        if (number < 10) {\r\n            return '0' + number;\r\n        }\r\n        if (number > 99) {\r\n            return (number + '').slice(2, 4);\r\n        }\r\n        return number;\r\n    }\r\n}\r\n","export class ParametersRpw {\r\n    executionType: number;\r\n    execAppointDate: Date;\r\n    execAppointHour: string;\r\n    executionServer: string;\r\n    repeatExecution: boolean;\r\n    frequency: string;\r\n    frequencyType: string;\r\n    frequencyValue: number;\r\n    execAppointHourInit: string;\r\n    execAppointHourFinal: string;\r\n    activeTab: number;\r\n    selectWeeklys: [];\r\n    dayOfMonth: number;\r\n}\r\n","import { map } from 'rxjs/internal/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { PoComboOption, PoComboFilter } from '@po-ui/ng-components';\r\n\r\n@Injectable()\r\n\r\nexport class RpwService implements PoComboFilter {\r\n\r\n    private apiUrl = '/dts/datasul-rest/resources/prg/cdp/v1/genericsZoom';\r\n    private urlJobScheduler = '/dts/datasul-rest/resources/prg/framework/v1/jobScheduler';\r\n    // private apiUrl = '/genericsZoom';\r\n    // private urlJobScheduler = '/jobScheduler';\r\n\r\n    constructor(public http: HttpClient) { }\r\n\r\n    public readonly filterRpw = {\r\n         fields: 'cod_servid_exec,des_servid_exec',\r\n         filter: 'cod_servid_exec',\r\n         filterZoom: 'cod_servid_exec',\r\n         order: 'cod_servid_exec',\r\n         table: 'servid_exec'\r\n    };\r\n\r\n    getFilteredData(param: any, appId: number): Observable<Array<PoComboOption>> {\r\n        const localParams = Object.assign({}, this.filterRpw);\r\n        let url  = `${this.apiUrl}?pageSize=10&page=1&table=${localParams.table}`;\r\n            url += `&fields=${localParams.fields}&order=${localParams.order}`;\r\n\r\n        if (param.value) {\r\n            url += `&${localParams.filterZoom}=*${param.value}*`;\r\n        }\r\n\r\n        return this.http.get(url, { })\r\n            .pipe(map((response: any) => this.convertToArrayComboOption(response.items, 'codServidExec', 'desServidExec')));\r\n    }\r\n\r\n    getObjectByValue(value): Observable<PoComboOption> {\r\n        return this.http.get(`${this.apiUrl}/${value}`)\r\n            .pipe(map(item => this.convertToThfComboOption(item, 'codServidExec', 'desServidExec')));\r\n    }\r\n\r\n    createRpw(parameters: Object): Observable<any> {\r\n        const params = JSON.parse(JSON.stringify(parameters).replace(/\\\\\\\\/g, '*|'));\r\n\r\n        return this.http.post(\r\n            `${this.urlJobScheduler}`, params\r\n        );\r\n    }\r\n\r\n    /* COMBO */\r\n    convertToArrayComboOption(items: Array<any>, key: string, value: string): Array<PoComboOption> {\r\n        if (items && items.length > 0) {\r\n            return items.map(item => this.convertToThfComboOption(item, key, value));\r\n        }\r\n\r\n        return [];\r\n    }\r\n\r\n    convertToThfComboOption(item: any, key: string, value: string): PoComboOption {\r\n        item = item || {};\r\n        return {\r\n            value: item[key] || undefined,\r\n            label: item[value] || undefined\r\n        };\r\n    }\r\n    /* COMBO */\r\n\r\n}\r\n","import { Component, OnInit, Input, ViewChild, Output, EventEmitter } from '@angular/core';\r\nimport { PoRadioGroupOption, PoLookupColumn, PoI18nService, PoNotificationService } from '@po-ui/ng-components';\r\nimport { ParametersRpw } from './totvs-schedule-execution.model';\r\nimport { NgForm } from '@angular/forms';\r\nimport { RpwService } from './totvs-schedule-execution.service';\r\n\r\n@Component({\r\n    selector: 'app-totvs-schedule-execution',\r\n    templateUrl: './totvs-schedule-execution.component.html',\r\n    styleUrls: ['./totvs-schedule-execution.component.css']\r\n})\r\n\r\nexport class TotvsScheduleExecutionComponent implements OnInit {\r\n    @ViewChild('scheduleExecutionForm', { static: true }) scheduleExecutionForm: NgForm;\r\n\r\n    @Input() programName: string;\r\n    @Input() externalName: string;\r\n    @Input() programEMS5 = false;\r\n    @Input() programVersion = '';\r\n    @Input() parameters: [];\r\n    @Output() endExecution = new EventEmitter();\r\n\r\n    constructor(\r\n        public thfI18nService: PoI18nService,\r\n        public rpwService: RpwService,\r\n        public poNotification: PoNotificationService) {\r\n    }\r\n\r\n    executionTypeOptions: Array<PoRadioGroupOption>;\r\n    frequencyOptions: Array<PoRadioGroupOption>;\r\n    frequencyTypeOptions: Array<PoRadioGroupOption>;\r\n    weeklyOptions: Array<PoRadioGroupOption>;\r\n    model: ParametersRpw;\r\n    columns: Array<PoLookupColumn>;\r\n    private jsonObject: any = {};\r\n\r\n    literals: any = {};\r\n\r\n    ngOnInit() {\r\n        /* VERIFICAR COMO FICARÃ A TRADUÃÃO\r\n        forkJoin(\r\n              this.thfI18nService.getLiterals(),\r\n              this.thfI18nService.getLiterals({ context: 'generalRpw' })\r\n          ).subscribe(literals => {\r\n              literals.map(item => Object.assign(this.literals, item) );\r\n              this.setupComponents();\r\n          });*/\r\n\r\n        this.setupComponents();\r\n    }\r\n\r\n    setupComponents() {\r\n        this.executionTypeOptions = [\r\n            { label: 'Executar Hoje', value: 1 },\r\n            { label: 'Agendar ExecuÃ§Ã£o', value: 2 }\r\n        ];\r\n\r\n        this.frequencyOptions = [\r\n            { label: 'Uma vez no dia', value: 'no' },\r\n            { label: 'VÃ¡rias vezes no dia', value: 'yes' }\r\n        ];\r\n\r\n        this.frequencyTypeOptions = [\r\n            { label: 'Hora(s)', value: 'hour' },\r\n            { label: 'Minuto(s)', value: 'minute' }\r\n        ];\r\n\r\n        this.weeklyOptions = [\r\n            { label: 'Domingo', value: 'Sunday' },\r\n            { label: 'Segunda', value: 'Monday' },\r\n            { label: 'TerÃ§a', value: 'Tuesday' },\r\n            { label: 'Quarta', value: 'Wednesday' },\r\n            { label: 'Quinta', value: 'Thursday' },\r\n            { label: 'Sexta', value: 'Friday' },\r\n            { label: 'SÃ¡bado', value: 'Saturday' }\r\n        ];\r\n\r\n        this.columns = [\r\n            { property: 'cod_servid_exec', label: 'CÃ³digo' },\r\n            { property: 'des_servid_exec', label: 'DescriÃ§Ã£o' }\r\n        ];\r\n\r\n        this.model = new ParametersRpw();\r\n        this.model.executionType = 1;\r\n        this.model.activeTab = 1;\r\n        this.model.repeatExecution = false;\r\n    }\r\n\r\n    isExecutionSchedule(): boolean {\r\n        return (this.model.executionType === 2);\r\n    }\r\n\r\n    isRepeatExecution(): boolean {\r\n        return this.model.repeatExecution;\r\n    }\r\n\r\n    isFrenquency(): boolean {\r\n        return (this.model.frequency === 'yes');\r\n    }\r\n\r\n    changeRepeatExecution() {\r\n        const date = new Date();\r\n\r\n        this.model.execAppointHourInit = `${this.addZero(date.getHours())}:${this.addZero(date.getMinutes())}`;\r\n        this.model.execAppointHourFinal = `${this.addZero(date.getHours())}:${this.addZero(date.getMinutes())}`;\r\n        this.model.selectWeeklys = [];\r\n        this.model.dayOfMonth = 0;\r\n        this.model.frequency = 'no';\r\n        this.model.frequencyType = 'hour';\r\n        this.model.frequencyValue = 0;\r\n    }\r\n\r\n    changeExecutionType() {\r\n        const date = new Date();\r\n\r\n        this.model.execAppointDate = date;\r\n        this.model.execAppointHour = `${this.addZero(date.getHours())}:${this.addZero(date.getMinutes())}`;\r\n    }\r\n\r\n    changeTypeFrequency() {\r\n    }\r\n\r\n    setActiveTab(codTab) {\r\n        this.model.activeTab = codTab;\r\n    }\r\n\r\n    addZero(i) {\r\n        if (i < 10) {\r\n            i = '0' + i;\r\n        }\r\n        return i;\r\n    }\r\n\r\n    executeSchedule() {\r\n\r\n        if (!this.validate()) { return; }\r\n\r\n        this.jsonObject = {};\r\n        this.jsonObject.status = 'active';\r\n        this.jsonObject.processID = this.programName;\r\n        this.jsonObject.recurrent = this.model.repeatExecution;\r\n        this.jsonObject.executionParameter = {};\r\n\r\n        if (this.model.executionType === 1) {\r\n            const date = new Date();\r\n            this.jsonObject.firstExecution = `${date.getFullYear()}-${(date.getMonth() + 1)}-${date.getDate()}T${this.addZero(date.getHours())}:${this.addZero(date.getMinutes())}:00.000Z`;\r\n        }\r\n        if (this.model.executionType === 2) {\r\n            this.jsonObject.firstExecution = `${this.model.execAppointDate}T${this.model.execAppointHour}:00.000Z`;\r\n        }\r\n\r\n        this.jsonObject.executionParameter.parametros = [];\r\n        this.jsonObject.executionParameter.parametros[0] = { chave: 'rpwServer', valor: this.model.executionServer };\r\n        this.jsonObject.executionParameter.parametros[1] = { chave: 'RPW_PROGRAM', valor: this.externalName };\r\n        this.jsonObject.executionParameter.parametros[2] = { chave: 'RPW_PRG_EMS5', valor: this.programEMS5 ? 'yes' : 'no' };\r\n        this.jsonObject.executionParameter.parametros[3] = { chave: 'RPW_PRG_VERS', valor: this.programVersion };\r\n\r\n        this.jsonObject.executionParameter.parametros[4] = {};\r\n        this.jsonObject.executionParameter.parametros[4].parametros_negocio = this.parameters;\r\n\r\n        // Executa hoje ou agendada\r\n        this.rpwService.createRpw(this.jsonObject).subscribe(() => {\r\n            this.poNotification.success('ExecuÃ§Ã£o efetuada com sucesso !');\r\n        });\r\n\r\n        if (this.model.repeatExecution) {\r\n            if (this.model.activeTab === 1) {\r\n                this.jsonObject.daily = {\r\n                    hour: this.getHourOrMinute(this.model.execAppointHourInit, 'h'),\r\n                    minute: this.getHourOrMinute(this.model.execAppointHourInit, 'm')\r\n                };\r\n            }\r\n\r\n            if (this.model.activeTab === 2) {\r\n                this.jsonObject.weekly = {\r\n                    hour: this.getHourOrMinute(this.model.execAppointHourInit, 'h'),\r\n                    minute: this.getHourOrMinute(this.model.execAppointHourInit, 'm'),\r\n                    daysOfWeek: this.model.selectWeeklys\r\n                };\r\n            }\r\n\r\n            if (this.model.activeTab === 3) {\r\n                this.jsonObject.monthly = {\r\n                    hour: this.getHourOrMinute(this.model.execAppointHourInit, 'h'),\r\n                    minute: this.getHourOrMinute(this.model.execAppointHourInit, 'm'),\r\n                    day: this.model.dayOfMonth\r\n                };\r\n            }\r\n\r\n            if (this.isFrenquency()) {\r\n                this.jsonObject.rangeExecutions = {\r\n                    frequency: {\r\n                        type: this.model.frequencyType,\r\n                        value: this.model.frequencyValue\r\n                    },\r\n                    rangeLimit: {\r\n                        hour: this.getHourOrMinute(this.model.execAppointHourFinal, 'h'),\r\n                        minute: this.getHourOrMinute(this.model.execAppointHourFinal, 'm')\r\n                    }\r\n                };\r\n            }\r\n\r\n            // Executa a diÃ¡ria, semanal ou mensal\r\n            this.rpwService.createRpw(this.jsonObject).subscribe(() => {\r\n            });\r\n        }\r\n\r\n        this.endExecution.emit('endExecution');\r\n    }\r\n\r\n    getHourOrMinute(value: string, type: string): number {\r\n        if (type === 'h') { return +value.substring(0, 2); }\r\n        if (type === 'm') { return +value.substring(3, 6); }\r\n    }\r\n\r\n    compareHour(hourInit: string, hourFinal: string): boolean {\r\n        if (hourInit === hourFinal) { return false; }\r\n        if (this.getHourOrMinute(hourInit, 'h') < this.getHourOrMinute(hourFinal, 'h')) { return true; }\r\n        if (this.getHourOrMinute(hourInit, 'm') > this.getHourOrMinute(hourFinal, 'm')) { return false; }\r\n        return true;\r\n    }\r\n\r\n    validate(): boolean {\r\n\r\n        if (!this.scheduleExecutionForm.valid) {\r\n            this.poNotification.error('Verifique as inconsistÃªncias em tela.');\r\n            return false;\r\n        }\r\n\r\n        if (!this.model.executionServer) {\r\n            this.poNotification.error('Servidor de ExecuÃ§Ã£o nÃ£o foi informado.');\r\n            return false;\r\n        }\r\n\r\n        if (this.isExecutionSchedule() && (!this.model.execAppointDate || !this.model.execAppointHour)) {\r\n            this.poNotification.error('Informar a data e a hora para agendamento da execuÃ§Ã£o.');\r\n            return false;\r\n        }\r\n\r\n        if (this.model.repeatExecution) {\r\n            if (!this.model.execAppointHourInit) {\r\n                this.poNotification.error('Informar a hora de inÃ­cio para a execuÃ§Ã£o.');\r\n                return false;\r\n            }\r\n\r\n            if (this.model.activeTab === 2 && (this.model.selectWeeklys.length === 0)) {\r\n                this.poNotification.error('Informar os dias da semana para a execuÃ§Ã£o.');\r\n                return false;\r\n            }\r\n\r\n            if (this.model.activeTab === 3 && (!this.model.dayOfMonth)) {\r\n                this.poNotification.error('Informar o dia para a execuÃ§Ã£o.');\r\n                return false;\r\n            }\r\n\r\n            if (this.isFrenquency()) {\r\n                if (!this.compareHour(this.model.execAppointHourInit, this.model.execAppointHourFinal)) {\r\n                    this.poNotification.error('Hora Fim deve ser maior que Hora InÃ­cio.');\r\n                    return false;\r\n                }\r\n\r\n                if (this.model.frequencyValue === 0) {\r\n                    this.poNotification.error('Informar a frequÃªncia de execuÃ§Ã£o (A cada hora/minuto).');\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'dtsDateFormat'\r\n})\r\n\r\nexport class DtsDateFormatPipe implements PipeTransform {\r\n\r\n  transform(value: any, format: string = 'dd/MM/yyyy'): any {\r\n    const { 0: year, 1: month, 2: day } = value.split('-');\r\n\r\n    const formattedDate = format.replace('dd', day)\r\n                                .replace('MM', month)\r\n                                .replace('yyyy', year);\r\n\r\n    return formattedDate;\r\n  }\r\n\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport {\r\n  TotvsScheduleExecutionComponent\r\n} from './components/totvs-schedule-execution/totvs-schedule-execution.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { PoModule, PoI18nService } from '@po-ui/ng-components';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n// import { BrowserModule } from '@angular/platform-browser';\r\nimport { RpwService } from './components/totvs-schedule-execution/totvs-schedule-execution.service';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DtsDateFormatPipe } from './pipes/dts-date-format.pipe';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TotvsScheduleExecutionComponent,\r\n    DtsDateFormatPipe\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    PoModule,\r\n    FormsModule,\r\n    HttpClientModule\r\n  ],\r\n  exports: [\r\n    TotvsScheduleExecutionComponent,\r\n    DtsDateFormatPipe\r\n  ],\r\n  providers: [\r\n    RpwService\r\n  ]\r\n})\r\n\r\nexport class DtsBackofficeUtilsModule {\r\n  static forRoot(): ModuleWithProviders<DtsBackofficeUtilsModule> {\r\n    return {\r\n      ngModule: DtsBackofficeUtilsModule,\r\n      providers: [RpwService]\r\n    };\r\n  }\r\n}\r\n"]}