import { OnInit, EventEmitter } from '@angular/core';
import { PoRadioGroupOption, PoLookupColumn, PoI18nService, PoNotificationService } from '@po-ui/ng-components';
import { ParametersRpw } from './totvs-schedule-execution.model';
import { NgForm } from '@angular/forms';
import { RpwService } from './totvs-schedule-execution.service';
import * as ɵngcc0 from '@angular/core';
export declare class TotvsScheduleExecutionComponent implements OnInit {
    thfI18nService: PoI18nService;
    rpwService: RpwService;
    poNotification: PoNotificationService;
    scheduleExecutionForm: NgForm;
    programName: string;
    externalName: string;
    programEMS5: boolean;
    programVersion: string;
    parameters: [];
    endExecution: EventEmitter<any>;
    constructor(thfI18nService: PoI18nService, rpwService: RpwService, poNotification: PoNotificationService);
    executionTypeOptions: Array<PoRadioGroupOption>;
    frequencyOptions: Array<PoRadioGroupOption>;
    frequencyTypeOptions: Array<PoRadioGroupOption>;
    weeklyOptions: Array<PoRadioGroupOption>;
    model: ParametersRpw;
    columns: Array<PoLookupColumn>;
    private jsonObject;
    literals: any;
    ngOnInit(): void;
    setupComponents(): void;
    isExecutionSchedule(): boolean;
    isRepeatExecution(): boolean;
    isFrenquency(): boolean;
    changeRepeatExecution(): void;
    changeExecutionType(): void;
    changeTypeFrequency(): void;
    setActiveTab(codTab: any): void;
    addZero(i: any): any;
    executeSchedule(): void;
    getHourOrMinute(value: string, type: string): number;
    compareHour(hourInit: string, hourFinal: string): boolean;
    validate(): boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<TotvsScheduleExecutionComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<TotvsScheduleExecutionComponent, "app-totvs-schedule-execution", never, { "programEMS5": "programEMS5"; "programVersion": "programVersion"; "programName": "programName"; "externalName": "externalName"; "parameters": "parameters"; }, { "endExecution": "endExecution"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG90dnMtc2NoZWR1bGUtZXhlY3V0aW9uLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJ0b3R2cy1zY2hlZHVsZS1leGVjdXRpb24uY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPbkluaXQsIEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBQb1JhZGlvR3JvdXBPcHRpb24sIFBvTG9va3VwQ29sdW1uLCBQb0kxOG5TZXJ2aWNlLCBQb05vdGlmaWNhdGlvblNlcnZpY2UgfSBmcm9tICdAcG8tdWkvbmctY29tcG9uZW50cyc7XHJcbmltcG9ydCB7IFBhcmFtZXRlcnNScHcgfSBmcm9tICcuL3RvdHZzLXNjaGVkdWxlLWV4ZWN1dGlvbi5tb2RlbCc7XHJcbmltcG9ydCB7IE5nRm9ybSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcclxuaW1wb3J0IHsgUnB3U2VydmljZSB9IGZyb20gJy4vdG90dnMtc2NoZWR1bGUtZXhlY3V0aW9uLnNlcnZpY2UnO1xyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBUb3R2c1NjaGVkdWxlRXhlY3V0aW9uQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuICAgIHRoZkkxOG5TZXJ2aWNlOiBQb0kxOG5TZXJ2aWNlO1xyXG4gICAgcnB3U2VydmljZTogUnB3U2VydmljZTtcclxuICAgIHBvTm90aWZpY2F0aW9uOiBQb05vdGlmaWNhdGlvblNlcnZpY2U7XHJcbiAgICBzY2hlZHVsZUV4ZWN1dGlvbkZvcm06IE5nRm9ybTtcclxuICAgIHByb2dyYW1OYW1lOiBzdHJpbmc7XHJcbiAgICBleHRlcm5hbE5hbWU6IHN0cmluZztcclxuICAgIHByb2dyYW1FTVM1OiBib29sZWFuO1xyXG4gICAgcHJvZ3JhbVZlcnNpb246IHN0cmluZztcclxuICAgIHBhcmFtZXRlcnM6IFtdO1xyXG4gICAgZW5kRXhlY3V0aW9uOiBFdmVudEVtaXR0ZXI8YW55PjtcclxuICAgIGNvbnN0cnVjdG9yKHRoZkkxOG5TZXJ2aWNlOiBQb0kxOG5TZXJ2aWNlLCBycHdTZXJ2aWNlOiBScHdTZXJ2aWNlLCBwb05vdGlmaWNhdGlvbjogUG9Ob3RpZmljYXRpb25TZXJ2aWNlKTtcclxuICAgIGV4ZWN1dGlvblR5cGVPcHRpb25zOiBBcnJheTxQb1JhZGlvR3JvdXBPcHRpb24+O1xyXG4gICAgZnJlcXVlbmN5T3B0aW9uczogQXJyYXk8UG9SYWRpb0dyb3VwT3B0aW9uPjtcclxuICAgIGZyZXF1ZW5jeVR5cGVPcHRpb25zOiBBcnJheTxQb1JhZGlvR3JvdXBPcHRpb24+O1xyXG4gICAgd2Vla2x5T3B0aW9uczogQXJyYXk8UG9SYWRpb0dyb3VwT3B0aW9uPjtcclxuICAgIG1vZGVsOiBQYXJhbWV0ZXJzUnB3O1xyXG4gICAgY29sdW1uczogQXJyYXk8UG9Mb29rdXBDb2x1bW4+O1xyXG4gICAgcHJpdmF0ZSBqc29uT2JqZWN0O1xyXG4gICAgbGl0ZXJhbHM6IGFueTtcclxuICAgIG5nT25Jbml0KCk6IHZvaWQ7XHJcbiAgICBzZXR1cENvbXBvbmVudHMoKTogdm9pZDtcclxuICAgIGlzRXhlY3V0aW9uU2NoZWR1bGUoKTogYm9vbGVhbjtcclxuICAgIGlzUmVwZWF0RXhlY3V0aW9uKCk6IGJvb2xlYW47XHJcbiAgICBpc0ZyZW5xdWVuY3koKTogYm9vbGVhbjtcclxuICAgIGNoYW5nZVJlcGVhdEV4ZWN1dGlvbigpOiB2b2lkO1xyXG4gICAgY2hhbmdlRXhlY3V0aW9uVHlwZSgpOiB2b2lkO1xyXG4gICAgY2hhbmdlVHlwZUZyZXF1ZW5jeSgpOiB2b2lkO1xyXG4gICAgc2V0QWN0aXZlVGFiKGNvZFRhYjogYW55KTogdm9pZDtcclxuICAgIGFkZFplcm8oaTogYW55KTogYW55O1xyXG4gICAgZXhlY3V0ZVNjaGVkdWxlKCk6IHZvaWQ7XHJcbiAgICBnZXRIb3VyT3JNaW51dGUodmFsdWU6IHN0cmluZywgdHlwZTogc3RyaW5nKTogbnVtYmVyO1xyXG4gICAgY29tcGFyZUhvdXIoaG91ckluaXQ6IHN0cmluZywgaG91ckZpbmFsOiBzdHJpbmcpOiBib29sZWFuO1xyXG4gICAgdmFsaWRhdGUoKTogYm9vbGVhbjtcclxufVxyXG4iXX0=